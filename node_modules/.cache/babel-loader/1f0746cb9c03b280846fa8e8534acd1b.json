{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Viewer/MediaViewerDownloadButton.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nvar MediaViewerDownloadButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MediaViewerDownloadButton, _React$Component);\n\n  function MediaViewerDownloadButton(props) {\n    var _this;\n\n    _classCallCheck(this, MediaViewerDownloadButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MediaViewerDownloadButton).call(this, props));\n\n    _this.onClientUpdateMediaBlob = function (update) {\n      var fileId = _this.state.fileId;\n\n      if (fileId === update.fileId) {\n        _this.setState({\n          disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        });\n      }\n    };\n\n    _this.handleClick = function (event) {\n      event.stopPropagation();\n      var onClick = _this.props.onClick;\n      var disabled = _this.state.disabled;\n      if (disabled) return;\n      onClick(event);\n    };\n\n    var _fileId = props.fileId;\n    _this.state = {\n      prevPropsFileId: _fileId,\n      fileId: _fileId,\n      disabled: MediaViewerDownloadButton.saveDisabled(_fileId)\n    };\n    return _this;\n  }\n\n  _createClass(MediaViewerDownloadButton, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n      FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n      FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n      FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n      FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n      FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n      FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n      FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n      FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n      FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n      FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          title = _this$props.title,\n          children = _this$props.children;\n      var disabled = this.state.disabled;\n      return React.createElement(MediaViewerFooterButton, {\n        disabled: disabled,\n        title: title,\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, children || React.createElement(SaveIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var fileId = props.fileId;\n      var prevPropsFileId = state.prevPropsFileId;\n\n      if (fileId !== prevPropsFileId) {\n        return {\n          prevPropsFileId: fileId,\n          fileId: fileId,\n          disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MediaViewerDownloadButton;\n}(React.Component);\n\nMediaViewerDownloadButton.saveDisabled = function (fileId) {\n  return !Boolean(FileStore.getBlob(fileId));\n};\n\nMediaViewerDownloadButton.propTypes = {\n  fileId: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n  title: PropTypes.string\n};\nexport default MediaViewerDownloadButton;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Viewer/MediaViewerDownloadButton.js"],"names":["React","PropTypes","SaveIcon","MediaViewerFooterButton","FileStore","MediaViewerDownloadButton","props","onClientUpdateMediaBlob","update","fileId","state","setState","disabled","saveDisabled","handleClick","event","stopPropagation","onClick","prevPropsFileId","on","off","title","children","Component","Boolean","getBlob","propTypes","number","isRequired","func","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n"]},"metadata":{},"sourceType":"module"}