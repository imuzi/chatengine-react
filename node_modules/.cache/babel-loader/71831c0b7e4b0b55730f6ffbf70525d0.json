{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isContentOpened } from '../../../Utils/Message';\nimport MessageStore from '../../../Stores/MessageStore';\n\nvar MediaStatus =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MediaStatus, _React$Component);\n\n  function MediaStatus(props) {\n    var _this;\n\n    _classCallCheck(this, MediaStatus);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MediaStatus).call(this, props));\n\n    _this.onUpdateMessageContentOpened = function (update) {\n      var _this$props = _this.props,\n          chatId = _this$props.chatId,\n          messageId = _this$props.messageId;\n\n      if (chatId === update.chat_id && messageId === update.message_id) {\n        _this.setState({\n          isOpened: isContentOpened(chatId, messageId)\n        });\n      }\n    };\n\n    var _this$props2 = _this.props,\n        _chatId = _this$props2.chatId,\n        _messageId = _this$props2.messageId;\n    _this.state = {\n      isOpened: isContentOpened(_chatId, _messageId)\n    };\n    return _this;\n  }\n\n  _createClass(MediaStatus, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      MessageStore.on('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      MessageStore.off('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          icon = _this$props3.icon,\n          openedIcon = _this$props3.openedIcon;\n      var isOpened = this.state.isOpened;\n      return isOpened ? openedIcon : icon;\n    }\n  }]);\n\n  return MediaStatus;\n}(React.Component);\n\nMediaStatus.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  messageId: PropTypes.number.isRequired,\n  icon: PropTypes.node,\n  openedIcon: PropTypes.node\n};\nMediaStatus.defaultProps = {\n  icon: null,\n  openedIcon: null\n};\nexport default MediaStatus;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Message/Media/MediaStatus.js"],"names":["React","PropTypes","isContentOpened","MessageStore","MediaStatus","props","onUpdateMessageContentOpened","update","chatId","messageId","chat_id","message_id","setState","isOpened","state","on","off","icon","openedIcon","Component","propTypes","number","isRequired","node","defaultProps"],"mappings":";;;;;;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;IAEMC,W;;;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;;AADe,UAkBnBC,4BAlBmB,GAkBY,UAAAC,MAAM,EAAI;AAAA,wBACP,MAAKF,KADE;AAAA,UAC7BG,MAD6B,eAC7BA,MAD6B;AAAA,UACrBC,SADqB,eACrBA,SADqB;;AAGrC,UAAID,MAAM,KAAKD,MAAM,CAACG,OAAlB,IAA6BD,SAAS,KAAKF,MAAM,CAACI,UAAtD,EAAkE;AAC9D,cAAKC,QAAL,CAAc;AAAEC,UAAAA,QAAQ,EAAEX,eAAe,CAACM,MAAD,EAASC,SAAT;AAA3B,SAAd;AACH;AACJ,KAxBkB;;AAAA,uBAGe,MAAKJ,KAHpB;AAAA,QAGPG,OAHO,gBAGPA,MAHO;AAAA,QAGCC,UAHD,gBAGCA,SAHD;AAKf,UAAKK,KAAL,GAAa;AACTD,MAAAA,QAAQ,EAAEX,eAAe,CAACM,OAAD,EAASC,UAAT;AADhB,KAAb;AALe;AAQlB;;;;wCAEmB;AAChBN,MAAAA,YAAY,CAACY,EAAb,CAAgB,4BAAhB,EAA8C,KAAKT,4BAAnD;AACH;;;2CAEsB;AACnBH,MAAAA,YAAY,CAACa,GAAb,CAAiB,4BAAjB,EAA+C,KAAKV,4BAApD;AACH;;;6BAUQ;AAAA,yBACwB,KAAKD,KAD7B;AAAA,UACGY,IADH,gBACGA,IADH;AAAA,UACSC,UADT,gBACSA,UADT;AAAA,UAEGL,QAFH,GAEgB,KAAKC,KAFrB,CAEGD,QAFH;AAIL,aAAOA,QAAQ,GAAGK,UAAH,GAAgBD,IAA/B;AACH;;;;EAhCqBjB,KAAK,CAACmB,S;;AAmChCf,WAAW,CAACgB,SAAZ,GAAwB;AACpBZ,EAAAA,MAAM,EAAEP,SAAS,CAACoB,MAAV,CAAiBC,UADL;AAEpBb,EAAAA,SAAS,EAAER,SAAS,CAACoB,MAAV,CAAiBC,UAFR;AAGpBL,EAAAA,IAAI,EAAEhB,SAAS,CAACsB,IAHI;AAIpBL,EAAAA,UAAU,EAAEjB,SAAS,CAACsB;AAJF,CAAxB;AAOAnB,WAAW,CAACoB,YAAZ,GAA2B;AACvBP,EAAAA,IAAI,EAAE,IADiB;AAEvBC,EAAAA,UAAU,EAAE;AAFW,CAA3B;AAKA,eAAed,WAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isContentOpened } from '../../../Utils/Message';\nimport MessageStore from '../../../Stores/MessageStore';\n\nclass MediaStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            isOpened: isContentOpened(chatId, messageId)\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    onUpdateMessageContentOpened = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chat_id && messageId === update.message_id) {\n            this.setState({ isOpened: isContentOpened(chatId, messageId) });\n        }\n    };\n\n    render() {\n        const { icon, openedIcon } = this.props;\n        const { isOpened } = this.state;\n\n        return isOpened ? openedIcon : icon;\n    }\n}\n\nMediaStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    icon: PropTypes.node,\n    openedIcon: PropTypes.node\n};\n\nMediaStatus.defaultProps = {\n    icon: null,\n    openedIcon: null\n};\n\nexport default MediaStatus;\n"]},"metadata":{},"sourceType":"module"}