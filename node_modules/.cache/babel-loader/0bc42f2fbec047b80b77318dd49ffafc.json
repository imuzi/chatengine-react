{"ast":null,"code":"import _defineProperty from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnLeft/Settings/Notifications.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nvar Notifications =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Notifications, _React$Component);\n\n  function Notifications(props) {\n    var _this;\n\n    _classCallCheck(this, Notifications);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Notifications).call(this, props));\n\n    _this.handleMuteFor = function (property) {\n      var settings = _this.state[property];\n      if (!settings) return;\n      var mute_for = settings.mute_for;\n\n      var newSettings = _objectSpread({}, settings, {\n        mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0\n      });\n\n      _this.setState(_defineProperty({}, property, newSettings));\n    };\n\n    _this.handleShowPreview = function (property) {\n      var settings = _this.state[property];\n      if (!settings) return;\n      var show_preview = settings.show_preview;\n\n      var newSettings = _objectSpread({}, settings, {\n        show_preview: !show_preview\n      });\n\n      _this.setState(_defineProperty({}, property, newSettings));\n    };\n\n    _this.handleContactJoined = function () {\n      _this.setState({\n        contactJoined: !_this.state.contactJoined\n      });\n    };\n\n    var contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n    _this.state = {\n      privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n      groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n      channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n      contactJoined: !contactJoinedOption || !contactJoinedOption.value\n    };\n    return _this;\n  }\n\n  _createClass(Notifications, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this$state = this.state,\n          privateChatsSettings = _this$state.privateChatsSettings,\n          groupChatsSettings = _this$state.groupChatsSettings,\n          channelChatsSettings = _this$state.channelChatsSettings,\n          contactJoined = _this$state.contactJoined;\n      this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n      this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n      this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n      this.setContactJoinedOption(contactJoined);\n    }\n  }, {\n    key: \"setContactJoinedOption\",\n    value: function setContactJoinedOption() {\n      var contactJoined = this.state.contactJoined;\n      var contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n      var oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n      if (oldContactJoined === contactJoined) return;\n      TdLibController.send({\n        '@type': 'setOption',\n        name: 'disable_contact_registered_notifications',\n        value: {\n          '@type': 'optionValueBoolean',\n          value: !contactJoined\n        }\n      });\n    }\n  }, {\n    key: \"setScopeNotificationSettings\",\n    value: function setScopeNotificationSettings(scope, settings) {\n      if (!scope) return;\n      if (!settings) return;\n      var oldSettings = NotificationStore.settings.get(scope);\n      if (!oldSettings) return;\n      var mute_for = settings.mute_for,\n          show_preview = settings.show_preview;\n      var oldMuteFor = oldSettings.mute_for,\n          oldShowPreview = oldSettings.show_preview;\n      if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n      TdLibController.send({\n        '@type': 'setScopeNotificationSettings',\n        scope: {\n          '@type': scope\n        },\n        notification_settings: settings\n      });\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(settings) {\n      if (!settings) return false;\n      var mute_for = settings.mute_for;\n      return mute_for === 0;\n    }\n  }, {\n    key: \"showPreview\",\n    value: function showPreview(settings) {\n      if (!settings) return false;\n      var show_preview = settings.show_preview;\n      return show_preview;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          onClose = _this$props.onClose;\n      var _this$state2 = this.state,\n          privateChatsSettings = _this$state2.privateChatsSettings,\n          groupChatsSettings = _this$state2.groupChatsSettings,\n          channelChatsSettings = _this$state2.channelChatsSettings,\n          contactJoined = _this$state2.contactJoined;\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"header-master\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        className: \"header-left-button\",\n        onClick: onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(ArrowBackIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"header-status grow cursor-pointer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"header-status-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, t('Notifications')))), React.createElement(\"div\", {\n        className: \"sidebar-page-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sidebar-page-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(SectionHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, t('NotificationsPrivateChats')), React.createElement(\"div\", {\n        className: \"settings-item\",\n        onClick: function onClick() {\n          return _this2.handleMuteFor('privateChatsSettings');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        color: \"primary\",\n        className: \"settings-item-control\",\n        checked: this.isEnabled(privateChatsSettings),\n        tabIndex: -1,\n        inputProps: {\n          'aria-labelledby': 'label-1'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(ListItemText, {\n        id: \"label-1\",\n        primary: t('NotificationsForPrivateChats'),\n        secondary: this.isEnabled(privateChatsSettings) ? t('NotificationsEnabled') : t('NotificationsDisabled'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"settings-item\",\n        onClick: function onClick() {\n          return _this2.handleShowPreview('privateChatsSettings');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        color: \"primary\",\n        className: \"settings-item-control\",\n        checked: this.showPreview(privateChatsSettings),\n        tabIndex: -1,\n        inputProps: {\n          'aria-labelledby': 'label-2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(ListItemText, {\n        id: \"label-2\",\n        primary: t('MessagePreview'),\n        secondary: this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"sidebar-page-section-divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"sidebar-page-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(SectionHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, t('NotificationsGroups')), React.createElement(\"div\", {\n        className: \"settings-item\",\n        onClick: function onClick() {\n          return _this2.handleMuteFor('groupChatsSettings');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        color: \"primary\",\n        className: \"settings-item-control\",\n        checked: this.isEnabled(groupChatsSettings),\n        tabIndex: -1,\n        inputProps: {\n          'aria-labelledby': 'label-1'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(ListItemText, {\n        id: \"label-1\",\n        primary: t('NotificationsForGroups'),\n        secondary: this.isEnabled(groupChatsSettings) ? t('NotificationsEnabled') : t('NotificationsDisabled'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"settings-item\",\n        onClick: function onClick() {\n          return _this2.handleShowPreview('groupChatsSettings');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        color: \"primary\",\n        className: \"settings-item-control\",\n        checked: this.showPreview(groupChatsSettings),\n        tabIndex: -1,\n        inputProps: {\n          'aria-labelledby': 'label-2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), React.createElement(ListItemText, {\n        id: \"label-2\",\n        primary: t('MessagePreview'),\n        secondary: this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"sidebar-page-section-divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"sidebar-page-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(SectionHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, t('NotificationsChannels')), React.createElement(\"div\", {\n        className: \"settings-item\",\n        onClick: function onClick() {\n          return _this2.handleMuteFor('channelChatsSettings');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        color: \"primary\",\n        className: \"settings-item-control\",\n        checked: this.isEnabled(channelChatsSettings),\n        tabIndex: -1,\n        inputProps: {\n          'aria-labelledby': 'label-1'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), React.createElement(ListItemText, {\n        id: \"label-1\",\n        primary: t('NotificationsForChannels'),\n        secondary: this.isEnabled(channelChatsSettings) ? t('NotificationsEnabled') : t('NotificationsDisabled'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"settings-item\",\n        onClick: function onClick() {\n          return _this2.handleShowPreview('channelChatsSettings');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        color: \"primary\",\n        className: \"settings-item-control\",\n        checked: this.showPreview(channelChatsSettings),\n        tabIndex: -1,\n        inputProps: {\n          'aria-labelledby': 'label-2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), React.createElement(ListItemText, {\n        id: \"label-2\",\n        primary: t('MessagePreview'),\n        secondary: this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"sidebar-page-section-divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"sidebar-page-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(SectionHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, t('NotificationsOther')), React.createElement(\"div\", {\n        className: \"settings-item\",\n        onClick: this.handleContactJoined,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        color: \"primary\",\n        className: \"settings-item-control\",\n        checked: contactJoined,\n        tabIndex: -1,\n        inputProps: {\n          'aria-labelledby': 'label-1'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }), React.createElement(ListItemText, {\n        id: \"label-1\",\n        primary: t('ContactJoined'),\n        secondary: contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Notifications;\n}(React.Component);\n\nNotifications.propTypes = {\n  onClose: PropTypes.func\n};\nvar enhance = compose(withSaveRef(), withTranslation(), withRestoreRef());\nexport default enhance(Notifications);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnLeft/Settings/Notifications.js"],"names":["React","PropTypes","withTranslation","compose","withRestoreRef","withSaveRef","Checkbox","IconButton","ListItemText","ArrowBackIcon","SectionHeader","NotificationStore","OptionStore","TdLibController","Notifications","props","handleMuteFor","property","settings","state","mute_for","newSettings","setState","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","get","privateChatsSettings","groupChatsSettings","channelChatsSettings","value","setScopeNotificationSettings","setContactJoinedOption","oldContactJoined","send","name","scope","oldSettings","oldMuteFor","oldShowPreview","notification_settings","t","onClose","isEnabled","showPreview","Component","propTypes","func","enhance"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n"]},"metadata":{},"sourceType":"module"}