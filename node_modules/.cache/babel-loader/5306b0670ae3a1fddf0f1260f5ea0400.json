{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/MainPage.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nvar MainPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MainPage, _React$Component);\n\n  function MainPage(props) {\n    var _this;\n\n    _classCallCheck(this, MainPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MainPage).call(this, props));\n\n    _this.onClientUpdatePageWidth = function (update) {\n      var isSmallWidth = update.isSmallWidth;\n\n      _this.setState({\n        isSmallWidth: isSmallWidth\n      });\n    };\n\n    _this.onClientUpdateInstantViewContent = function (update) {\n      var content = update.content;\n\n      _this.setState({\n        instantViewContent: content\n      });\n    };\n\n    _this.onClientUpdateOpenChat = function (update) {\n      var chatId = update.chatId,\n          messageId = update.messageId,\n          popup = update.popup;\n\n      _this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    _this.onClientUpdateOpenUser = function (update) {\n      var userId = update.userId,\n          popup = update.popup;\n\n      _this.handleSelectUser(userId, popup);\n    };\n\n    _this.onClientUpdateChatDetailsVisibility = function (update) {\n      var isChatDetailsVisible = AppStore.isChatDetailsVisible;\n\n      _this.setState({\n        isChatDetailsVisible: isChatDetailsVisible\n      });\n    };\n\n    _this.onClientUpdateMediaViewerContent = function (update) {\n      var mediaViewerContent = AppStore.mediaViewerContent;\n\n      _this.setState({\n        mediaViewerContent: mediaViewerContent\n      });\n    };\n\n    _this.onClientUpdateProfileMediaViewerContent = function (update) {\n      var profileMediaViewerContent = AppStore.profileMediaViewerContent;\n\n      _this.setState({\n        profileMediaViewerContent: profileMediaViewerContent\n      });\n    };\n\n    _this.onClientUpdateForward = function (update) {\n      var info = update.info;\n\n      _this.setState({\n        forwardInfo: info\n      });\n    };\n\n    _this.handleSelectChat = function (chatId) {\n      var messageId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var popup = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var currentChatId = AppStore.getChatId();\n      var currentDialogChatId = AppStore.dialogChatId;\n      var currentMessageId = AppStore.getMessageId();\n\n      if (popup) {\n        if (currentDialogChatId !== chatId) {\n          TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: chatId\n          });\n        }\n\n        return;\n      }\n\n      if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n        _this.dialogDetailsRef.current.scrollToMessage();\n\n        if (messageId) {\n          highlightMessage(chatId, messageId);\n        }\n      } else if (currentChatId === chatId && !messageId) {\n        _this.dialogDetailsRef.current.scrollToStart();\n      } else {\n        TdLibController.setChatId(chatId, messageId);\n      }\n    };\n\n    _this.handleSelectUser =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(userId, popup) {\n        var chat;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (userId) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                _context.next = 4;\n                return TdLibController.send({\n                  '@type': 'createPrivateChat',\n                  user_id: userId,\n                  force: true\n                });\n\n              case 4:\n                chat = _context.sent;\n\n                _this.handleSelectChat(chat.id, null, popup);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.dialogDetailsRef = React.createRef();\n    var _isChatDetailsVisible = AppStore.isChatDetailsVisible,\n        _mediaViewerContent = AppStore.mediaViewerContent,\n        _profileMediaViewerContent = AppStore.profileMediaViewerContent,\n        _isSmallWidth = AppStore.isSmallWidth;\n    _this.state = {\n      isChatDetailsVisible: _isChatDetailsVisible,\n      mediaViewerContent: _mediaViewerContent,\n      profileMediaViewerContent: _profileMediaViewerContent,\n      isSmallWidth: _isSmallWidth,\n      forwardInfo: null,\n      instantViewContent: null\n    };\n    /*this.store = localForage.createInstance({\n                name: 'tdlib'\n            });*/\n    //this.initDB();\n\n    return _this;\n  }\n\n  _createClass(MainPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n      ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n      AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n      AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n      AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n      AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n      AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n      InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n      ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n      AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n      AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n      AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n      AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n      AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n      InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          instantViewContent = _this$state.instantViewContent,\n          isChatDetailsVisible = _this$state.isChatDetailsVisible,\n          mediaViewerContent = _this$state.mediaViewerContent,\n          profileMediaViewerContent = _this$state.profileMediaViewerContent,\n          forwardInfo = _this$state.forwardInfo,\n          isSmallWidth = _this$state.isSmallWidth;\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: classNames('page', {\n          'page-small': isSmallWidth,\n          'page-third-column': isChatDetailsVisible\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Dialogs, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(DialogDetails, {\n        ref: this.dialogDetailsRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), isChatDetailsVisible && React.createElement(ChatInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      })), instantViewContent && React.createElement(InstantViewer, Object.assign({}, instantViewContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      })), mediaViewerContent && React.createElement(MediaViewer, Object.assign({}, mediaViewerContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      })), profileMediaViewerContent && React.createElement(ProfileMediaViewer, Object.assign({}, profileMediaViewerContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      })), forwardInfo && React.createElement(ForwardDialog, Object.assign({}, forwardInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MainPage;\n}(React.Component);\n\nMainPage.propTypes = {};\nvar enhance = compose(withLanguage, withSnackbarNotifications);\nexport default enhance(MainPage);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/MainPage.js"],"names":["React","classNames","compose","withLanguage","withSnackbarNotifications","ForwardDialog","ChatInfo","Dialogs","DialogDetails","InstantViewer","MediaViewer","ProfileMediaViewer","highlightMessage","AppStore","ChatStore","InstantViewStore","UserStore","TdLibController","MainPage","props","onClientUpdatePageWidth","update","isSmallWidth","setState","onClientUpdateInstantViewContent","content","instantViewContent","onClientUpdateOpenChat","chatId","messageId","popup","handleSelectChat","onClientUpdateOpenUser","userId","handleSelectUser","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","info","forwardInfo","currentChatId","getChatId","currentDialogChatId","dialogChatId","currentMessageId","getMessageId","clientUpdate","dialogDetailsRef","current","scrollToMessage","scrollToStart","setChatId","send","user_id","force","chat","id","createRef","state","on","off","Component","propTypes","enhance"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"]},"metadata":{},"sourceType":"module"}