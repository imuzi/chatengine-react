{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Tile/HeaderChatSubtitle.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nvar HeaderChatSubtitle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HeaderChatSubtitle, _React$Component);\n\n  function HeaderChatSubtitle() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, HeaderChatSubtitle);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HeaderChatSubtitle)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onUpdateChatOnlineMemberCount = function (update) {\n      var chatId = _this.props.chatId;\n      if (chatId !== update.chat_id) return;\n\n      _this.forceUpdate();\n    };\n\n    _this.onUpdateChatTitle = function (update) {\n      var chatId = _this.props.chatId;\n      if (chatId !== update.chat_id) return;\n\n      _this.forceUpdate();\n    };\n\n    _this.onUpdateUserChatAction = function (update) {\n      var chatId = _this.props.chatId;\n      if (chatId !== update.chat_id) return;\n\n      _this.forceUpdate();\n    };\n\n    _this.onUpdateUserStatus = function (update) {\n      var chatId = _this.props.chatId;\n      var chat = ChatStore.get(chatId);\n      if (!chat) return;\n      if (!chat.type) return;\n\n      switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n          {\n            var fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n\n            if (fullInfo && fullInfo.members) {\n              var member = fullInfo.members.find(function (x) {\n                return x.user_id === update.user_id;\n              });\n\n              if (member) {\n                _this.forceUpdate();\n              }\n            }\n\n            break;\n          }\n\n        case 'chatTypePrivate':\n          {\n            if (chat.type.user_id === update.user_id) {\n              _this.forceUpdate();\n            }\n\n            break;\n          }\n\n        case 'chatTypeSecret':\n          {\n            if (chat.type.user_id === update.user_id) {\n              _this.forceUpdate();\n            }\n\n            break;\n          }\n\n        case 'chatTypeSupergroup':\n          {\n            break;\n          }\n      }\n    };\n\n    _this.onUpdateUserFullInfo = function (update) {\n      var chatId = _this.props.chatId;\n      var chat = ChatStore.get(chatId);\n      if (!chat) return;\n      if (!chat.type) return;\n\n      if ((chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') && chat.type.user_id === update.user_id) {\n        _this.forceUpdate();\n      }\n    };\n\n    _this.onUpdateBasicGroupFullInfo = function (update) {\n      var chatId = _this.props.chatId;\n      var chat = ChatStore.get(chatId);\n      if (!chat) return;\n      if (!chat.type) return;\n\n      if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n        _this.forceUpdate();\n      }\n    };\n\n    _this.onUpdateSupergroupFullInfo = function (update) {\n      var chatId = _this.props.chatId;\n      var chat = ChatStore.get(chatId);\n      if (!chat) return;\n      if (!chat.type) return;\n\n      if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n        _this.forceUpdate();\n      }\n    };\n\n    _this.onUpdateBasicGroup = function (update) {\n      var chatId = _this.props.chatId;\n      var chat = ChatStore.get(chatId);\n      if (!chat) return;\n      if (!chat.type) return;\n\n      if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n        _this.forceUpdate();\n      }\n    };\n\n    _this.onUpdateSupergroup = function (update) {\n      var chatId = _this.props.chatId;\n      var chat = ChatStore.get(chatId);\n      if (!chat) return;\n      if (!chat.type) return;\n\n      if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n        _this.forceUpdate();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(HeaderChatSubtitle, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n      ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n      UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n      ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n      UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n      BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n      SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n      BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n      SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n      ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n      UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n      ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n      UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n      BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n      SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n      BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n      SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var chatId = this.props.chatId;\n      var subtitle = getChatSubtitle(chatId, true);\n      var isAccentSubtitle = isAccentChatSubtitle(chatId);\n      return React.createElement(\"div\", {\n        className: classNames('header-chat-subtitle', {\n          'header-chat-subtitle-accent': isAccentSubtitle\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, subtitle);\n    }\n  }]);\n\n  return HeaderChatSubtitle;\n}(React.Component);\n\nHeaderChatSubtitle.propTypes = {\n  chatId: PropTypes.number.isRequired\n};\nexport default HeaderChatSubtitle;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Tile/HeaderChatSubtitle.js"],"names":["React","PropTypes","classNames","getChatSubtitle","isAccentChatSubtitle","ChatStore","UserStore","BasicGroupStore","SupergroupStore","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","update","chatId","props","chat_id","forceUpdate","onUpdateChatTitle","onUpdateUserChatAction","onUpdateUserStatus","chat","get","type","fullInfo","getFullInfo","basic_group_id","members","member","find","x","user_id","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","id","onUpdateSupergroup","supergroup","on","off","subtitle","isAccentSubtitle","Component","propTypes","number","isRequired"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n"]},"metadata":{},"sourceType":"module"}