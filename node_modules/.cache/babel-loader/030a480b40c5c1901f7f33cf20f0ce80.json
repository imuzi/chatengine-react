{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Message/MessageMenu.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nvar MessageMenu =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MessageMenu, _React$PureComponent);\n\n  function MessageMenu() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MessageMenu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MessageMenu)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      confirmStopPoll: false\n    };\n\n    _this.handleConfirmStopPoll = function (event) {\n      var dialog = _this.state.dialog;\n      if (dialog) return;\n\n      _this.setState({\n        confirmStopPoll: true,\n        contextMenu: false\n      });\n    };\n\n    _this.handleCloseConfirm = function (event) {\n      if (event) {\n        event.stopPropagation();\n      }\n\n      _this.setState({\n        confirmStopPoll: false\n      });\n    };\n\n    _this.handleStopPoll = function (event) {\n      event.stopPropagation();\n      var _this$props = _this.props,\n          chatId = _this$props.chatId,\n          messageId = _this$props.messageId;\n      var confirmStopPoll = _this.state.confirmStopPoll;\n\n      if (confirmStopPoll) {\n        _this.setState({\n          confirmStopPoll: false\n        });\n      }\n\n      stopPoll(chatId, messageId);\n    };\n\n    _this.handleUnvote = function (event) {\n      if (event) {\n        event.stopPropagation();\n      }\n\n      var _this$props2 = _this.props,\n          chatId = _this$props2.chatId,\n          messageId = _this$props2.messageId,\n          onClose = _this$props2.onClose;\n      onClose(event);\n      cancelPollAnswer(chatId, messageId);\n    };\n\n    _this.handleCopyLink = function (event) {\n      var onClose = _this.props.onClose;\n      var copyLink = _this.state.copyLink;\n      onClose(event);\n      if (!copyLink) return;\n      copy(copyLink);\n    };\n\n    _this.handleReply = function (event) {\n      var _this$props3 = _this.props,\n          chatId = _this$props3.chatId,\n          messageId = _this$props3.messageId,\n          onClose = _this$props3.onClose;\n      clearSelection();\n      onClose(event);\n      replyMessage(chatId, messageId);\n    };\n\n    _this.handlePin = function (event) {\n      var _this$props4 = _this.props,\n          chatId = _this$props4.chatId,\n          messageId = _this$props4.messageId,\n          onClose = _this$props4.onClose;\n      clearSelection();\n      onClose(event);\n\n      if (isMessagePinned(chatId, messageId)) {\n        unpinMessage(chatId);\n      } else {\n        pinMessage(chatId, messageId);\n      }\n    };\n\n    _this.handleForward = function (event) {\n      var _this$props5 = _this.props,\n          chatId = _this$props5.chatId,\n          messageId = _this$props5.messageId,\n          onClose = _this$props5.onClose;\n      onClose(event);\n      forwardMessages(chatId, [messageId]);\n    };\n\n    _this.handleEdit = function (event) {\n      var _this$props6 = _this.props,\n          chatId = _this$props6.chatId,\n          messageId = _this$props6.messageId,\n          onClose = _this$props6.onClose;\n      clearSelection();\n      onClose(event);\n      editMessage(chatId, messageId);\n    };\n\n    _this.handleSelect = function (event) {\n      var _this$props7 = _this.props,\n          chatId = _this$props7.chatId,\n          messageId = _this$props7.messageId,\n          onClose = _this$props7.onClose;\n      onClose(event);\n      selectMessage(chatId, messageId, true);\n    };\n\n    _this.handleDelete = function (event) {\n      var _this$props8 = _this.props,\n          chatId = _this$props8.chatId,\n          messageId = _this$props8.messageId,\n          onClose = _this$props8.onClose;\n      onClose(event);\n      deleteMessages(chatId, [messageId]);\n    };\n\n    _this.handleDownload =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var _this$props9, chatId, messageId, onClose, message, content, audio, file, file_id, result, blob;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props9 = _this.props, chatId = _this$props9.chatId, messageId = _this$props9.messageId, onClose = _this$props9.onClose;\n                onClose(event);\n                message = MessageStore.get(chatId, messageId);\n\n                if (message) {\n                  _context.next = 5;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 5:\n                content = message.content;\n\n                if (content) {\n                  _context.next = 8;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 8:\n                audio = content.audio;\n\n                if (audio) {\n                  _context.next = 11;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 11:\n                file = audio.audio;\n\n                if (file) {\n                  _context.next = 14;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 14:\n                file_id = file.id;\n                _context.next = 17;\n                return TdLibController.send({\n                  '@type': 'downloadFile',\n                  file_id: file_id,\n                  priority: 1,\n                  offset: 10 * 1024,\n                  limit: 1024,\n                  synchronous: true\n                });\n\n              case 17:\n                result = _context.sent;\n                _context.next = 20;\n                return TdLibController.send({\n                  '@type': 'readFilePart',\n                  file_id: file_id,\n                  offset: 10 * 1024,\n                  count: 1024\n                });\n\n              case 20:\n                blob = _context.sent;\n                console.log('[file] result', result, blob);\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(MessageMenu, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props10 = this.props,\n          t = _this$props10.t,\n          chatId = _this$props10.chatId,\n          messageId = _this$props10.messageId,\n          anchorPosition = _this$props10.anchorPosition,\n          canCopyLink = _this$props10.canCopyLink,\n          open = _this$props10.open,\n          onClose = _this$props10.onClose;\n      var confirmStopPoll = this.state.confirmStopPoll;\n      var isPinned = isMessagePinned(chatId, messageId);\n      var canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n      var canBeClosed = canMessageBeClosed(chatId, messageId);\n      var canBeReplied = canSendMessages(chatId);\n      var canBePinned = canPinMessages(chatId);\n      var canBeForwarded = canMessageBeForwarded(chatId, messageId);\n      var canBeDeleted = canMessageBeDeleted(chatId, messageId);\n      var canBeEdited = canMessageBeEdited(chatId, messageId);\n      var canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n      return React.createElement(React.Fragment, null, React.createElement(Popover, {\n        open: open,\n        onClose: onClose,\n        anchorReference: \"anchorPosition\",\n        anchorPosition: anchorPosition,\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right'\n        },\n        transformOrigin: {\n          vertical: 'top',\n          horizontal: 'left'\n        },\n        onMouseDown: function onMouseDown(e) {\n          return e.stopPropagation();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(MenuList, {\n        onClick: function onClick(e) {\n          return e.stopPropagation();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, canCopyLink && React.createElement(MenuItem, {\n        onClick: this.handleCopyLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, t('CopyLink')), canBeReplied && React.createElement(MenuItem, {\n        onClick: this.handleReply,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, t('Reply')), canBePinned && React.createElement(MenuItem, {\n        onClick: this.handlePin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, isPinned ? t('Unpin') : t('Pin')), canBeSelected && React.createElement(MenuItem, {\n        onClick: this.handleSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, t('Select')), canBeForwarded && React.createElement(MenuItem, {\n        onClick: this.handleForward,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, t('Forward')), canBeEdited && React.createElement(MenuItem, {\n        onClick: this.handleEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, t('Edit')), canBeDeleted && React.createElement(MenuItem, {\n        onClick: this.handleDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, t('Delete')), canBeUnvoted && React.createElement(MenuItem, {\n        onClick: this.handleUnvote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, t('Unvote')), canBeClosed && React.createElement(MenuItem, {\n        onClick: this.handleConfirmStopPoll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, t('StopPoll')))), React.createElement(Dialog, {\n        transitionDuration: 0,\n        open: confirmStopPoll,\n        onClose: this.handleCloseConfirm,\n        \"aria-labelledby\": \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, t('StopPollAlertTitle')), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, t('StopPollAlertText'))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleCloseConfirm,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, t('Cancel')), React.createElement(Button, {\n        onClick: this.handleStopPoll,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, t('Stop')))));\n    }\n  }]);\n\n  return MessageMenu;\n}(React.PureComponent);\n\nMessageMenu.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  messageId: PropTypes.number.isRequired,\n  anchorPosition: PropTypes.object,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  canCopyLink: PropTypes.bool\n};\nexport default withTranslation()(MessageMenu);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Message/MessageMenu.js"],"names":["React","PropTypes","withTranslation","Button","DialogActions","Dialog","DialogContent","DialogContentText","DialogTitle","MenuItem","MenuList","Popover","canMessageBeClosed","canMessageBeDeleted","canMessageBeEdited","canMessageBeForwarded","canMessageBeUnvoted","isMessagePinned","canPinMessages","canSendMessages","cancelPollAnswer","stopPoll","copy","clearSelection","deleteMessages","editMessage","forwardMessages","replyMessage","selectMessage","pinMessage","unpinMessage","MessageStore","TdLibController","MessageMenu","state","confirmStopPoll","handleConfirmStopPoll","event","dialog","setState","contextMenu","handleCloseConfirm","stopPropagation","handleStopPoll","props","chatId","messageId","handleUnvote","onClose","handleCopyLink","copyLink","handleReply","handlePin","handleForward","handleEdit","handleSelect","handleDelete","handleDownload","message","get","content","audio","file","file_id","id","send","priority","offset","limit","synchronous","result","count","blob","console","log","t","anchorPosition","canCopyLink","open","isPinned","canBeUnvoted","canBeClosed","canBeReplied","canBePinned","canBeForwarded","canBeDeleted","canBeEdited","canBeSelected","hasSelectedMessage","vertical","horizontal","e","PureComponent","propTypes","number","isRequired","object","bool","func"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose } = this.props;\n        const { copyLink } = this.state;\n\n        onClose(event);\n\n        if (!copyLink) return;\n        copy(copyLink);\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = async event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { audio } = content;\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { id: file_id } = file;\n\n        const result = await TdLibController.send({\n            '@type': 'downloadFile',\n            file_id,\n            priority: 1,\n            offset: 10 * 1024,\n            limit: 1024,\n            synchronous: true\n        });\n\n        const blob = await TdLibController.send({\n            '@type': 'readFilePart',\n            file_id,\n            offset: 10 * 1024,\n            count: 1024\n        });\n\n        console.log('[file] result', result, blob);\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, canCopyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId);\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>{t('Download')}</MenuItem>*/}\n                        {canCopyLink && <MenuItem onClick={this.handleCopyLink}>{t('CopyLink')}</MenuItem>}\n                        {canBeReplied && <MenuItem onClick={this.handleReply}>{t('Reply')}</MenuItem>}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>{isPinned ? t('Unpin') : t('Pin')}</MenuItem>\n                        )}\n                        {canBeSelected && <MenuItem onClick={this.handleSelect}>{t('Select')}</MenuItem>}\n                        {canBeForwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {canBeEdited && <MenuItem onClick={this.handleEdit}>{t('Edit')}</MenuItem>}\n                        {canBeDeleted && <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>}\n                        {canBeUnvoted && <MenuItem onClick={this.handleUnvote}>{t('Unvote')}</MenuItem>}\n                        {canBeClosed && <MenuItem onClick={this.handleConfirmStopPoll}>{t('StopPoll')}</MenuItem>}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    canCopyLink: PropTypes.bool\n};\n\nexport default withTranslation()(MessageMenu);"]},"metadata":{},"sourceType":"module"}