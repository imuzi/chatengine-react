{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Message/Media/PollOption.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CheckIcon from '../../../Assets/Icons/Check';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport PollRadio from './PollRadio';\nimport PollPercentage from './PollPercentage';\nimport './PollOption.css';\n\nvar PollOption =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PollOption, _React$Component);\n\n  function PollOption() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PollOption);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PollOption)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getTitleString = function (count) {\n      var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (key) {\n        return key;\n      };\n      var canBeSelected = _this.props.canBeSelected;\n      if (canBeSelected) return null;\n      if (!count) return t('NoVotes').toLowerCase();\n      if (count === 1) return '1 vote';\n      return count + ' votes';\n    };\n\n    _this.handleClick = function (event) {\n      var _this$props = _this.props,\n          canBeSelected = _this$props.canBeSelected,\n          onVote = _this$props.onVote;\n      if (!canBeSelected) return;\n      event.stopPropagation();\n      onVote();\n    };\n\n    return _this;\n  }\n\n  _createClass(PollOption, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          option = _this$props2.option,\n          onChange = _this$props2.onChange,\n          canBeSelected = _this$props2.canBeSelected,\n          closed = _this$props2.closed,\n          maxVoterCount = _this$props2.maxVoterCount,\n          t = _this$props2.t,\n          type = _this$props2.type,\n          isCorrect = _this$props2.isCorrect;\n      if (!option) return null;\n      var text = option.text,\n          voter_count = option.voter_count,\n          vote_percentage = option.vote_percentage,\n          is_chosen = option.is_chosen,\n          isMultiChoosen = option.isMultiChoosen,\n          is_being_chosen = option.is_being_chosen;\n      var value = 1.5;\n\n      if (voter_count) {\n        value = voter_count / maxVoterCount * 100;\n      }\n\n      return React.createElement(\"div\", {\n        className: \"poll-option\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classNames('poll-option-wrapper', canBeSelected ? 'poll-option-unselected' : 'poll-option-selected'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"poll-option-text-wrapper\",\n        title: this.getTitleString(voter_count, t),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(PollPercentage, {\n        value: vote_percentage,\n        chosen: is_chosen,\n        closed: closed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(PollRadio, {\n        hidden: !canBeSelected,\n        chosen: is_chosen || isMultiChoosen,\n        beingChosen: is_being_chosen,\n        onChange: onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), (is_chosen || isCorrect) && React.createElement(\"div\", {\n        className: classNames('poll-option-mark', {\n          'poll-option-mark-correct': type === 'correct'\n        }, {\n          'poll-option-mark-incorrect': type === 'incorrect'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, type === 'incorrect' ? React.createElement(CloseIcon, {\n        className: \"poll-option-mark-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }) : React.createElement(CheckIcon, {\n        className: \"poll-option-mark-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"poll-option-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, text))), React.createElement(LinearProgress, {\n        classes: {\n          root: 'poll-option-progress-root',\n          bar: classNames('poll-option-progress-bar', {\n            'poll-option-progress-bar-correct': type === 'correct'\n          }, {\n            'poll-option-progress-bar-incorrect': type === 'incorrect'\n          })\n        },\n        color: \"primary\",\n        variant: \"determinate\",\n        value: canBeSelected ? 0 : Math.max(1.5, value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PollOption;\n}(React.Component);\n\nPollOption.propTypes = {\n  type: PropTypes.oneOf(['regular', 'correct', 'incorrect']).isRequired,\n  option: PropTypes.object.isRequired,\n  onVote: PropTypes.func.isRequired,\n  canBeSelected: PropTypes.bool,\n  closed: PropTypes.bool,\n  maxVoterCount: PropTypes.number\n};\nexport default withTranslation()(PollOption);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Message/Media/PollOption.js"],"names":["React","PropTypes","classNames","withTranslation","LinearProgress","CheckIcon","CloseIcon","PollRadio","PollPercentage","PollOption","getTitleString","count","t","key","canBeSelected","props","toLowerCase","handleClick","event","onVote","stopPropagation","option","onChange","closed","maxVoterCount","type","isCorrect","text","voter_count","vote_percentage","is_chosen","isMultiChoosen","is_being_chosen","value","root","bar","Math","max","Component","propTypes","oneOf","isRequired","object","func","bool","number"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CheckIcon from '../../../Assets/Icons/Check';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport PollRadio from './PollRadio';\nimport PollPercentage from './PollPercentage';\nimport './PollOption.css';\n\nclass PollOption extends React.Component {\n    getTitleString = (count, t = key => key) => {\n        const { canBeSelected } = this.props;\n        if (canBeSelected) return null;\n\n        if (!count) return t('NoVotes').toLowerCase();\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleClick = event => {\n        const { canBeSelected, onVote } = this.props;\n        if (!canBeSelected) return;\n\n        event.stopPropagation();\n\n        onVote();\n    };\n\n    render() {\n        const { option, onChange, canBeSelected, closed, maxVoterCount, t, type, isCorrect } = this.props;\n        if (!option) return null;\n\n        const { text, voter_count, vote_percentage, is_chosen, isMultiChoosen, is_being_chosen } = option;\n\n        let value = 1.5;\n        if (voter_count) {\n            value = (voter_count / maxVoterCount) * 100;\n        }\n\n        return (\n            <div className='poll-option' onClick={this.handleClick}>\n                <div\n                    className={classNames(\n                        'poll-option-wrapper',\n                        canBeSelected ? 'poll-option-unselected' : 'poll-option-selected'\n                    )}>\n                    <div className='poll-option-text-wrapper' title={this.getTitleString(voter_count, t)}>\n                        <PollPercentage value={vote_percentage} chosen={is_chosen} closed={closed} />\n                        <PollRadio\n                            hidden={!canBeSelected}\n                            chosen={is_chosen || isMultiChoosen}\n                            beingChosen={is_being_chosen}\n                            onChange={onChange}\n                        />\n                        {(is_chosen || isCorrect) && (\n                            <div\n                                className={classNames(\n                                    'poll-option-mark',\n                                    { 'poll-option-mark-correct': type === 'correct' },\n                                    { 'poll-option-mark-incorrect': type === 'incorrect' }\n                                )}>\n                                {type === 'incorrect' ? (\n                                    <CloseIcon className='poll-option-mark-icon' />\n                                ) : (\n                                    <CheckIcon className='poll-option-mark-icon' />\n                                )}\n                            </div>\n                        )}\n                        <div className='poll-option-text'>{text}</div>\n                    </div>\n                </div>\n                <LinearProgress\n                    classes={{\n                        root: 'poll-option-progress-root',\n                        bar: classNames(\n                            'poll-option-progress-bar',\n                            { 'poll-option-progress-bar-correct': type === 'correct' },\n                            { 'poll-option-progress-bar-incorrect': type === 'incorrect' }\n                        )\n                    }}\n                    color='primary'\n                    variant='determinate'\n                    value={canBeSelected ? 0 : Math.max(1.5, value)}\n                />\n            </div>\n        );\n    }\n}\n\nPollOption.propTypes = {\n    type: PropTypes.oneOf(['regular', 'correct', 'incorrect']).isRequired,\n    option: PropTypes.object.isRequired,\n    onVote: PropTypes.func.isRequired,\n    canBeSelected: PropTypes.bool,\n    closed: PropTypes.bool,\n    maxVoterCount: PropTypes.number\n};\n\nexport default withTranslation()(PollOption);\n"]},"metadata":{},"sourceType":"module"}