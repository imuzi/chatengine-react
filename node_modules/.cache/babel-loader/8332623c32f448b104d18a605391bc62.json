{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnLeft/Contacts.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nvar UserListItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserListItem, _React$Component);\n\n  function UserListItem() {\n    _classCallCheck(this, UserListItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UserListItem).apply(this, arguments));\n  }\n\n  _createClass(UserListItem, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState, nextContext) {\n      var _this$props = this.props,\n          userId = _this$props.userId,\n          style = _this$props.style;\n\n      if (nextProps.userId !== userId) {\n        return true;\n      }\n\n      if (nextProps.style.top !== style.top) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          userId = _this$props2.userId,\n          _onClick = _this$props2.onClick,\n          style = _this$props2.style;\n      return React.createElement(ListItem, {\n        className: \"user-list-item\",\n        onClick: function onClick() {\n          return _onClick(userId);\n        },\n        button: true,\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(User, {\n        userId: userId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return UserListItem;\n}(React.Component);\n\nvar Contacts =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Contacts, _React$Component2);\n\n  function Contacts(props) {\n    var _this;\n\n    _classCallCheck(this, Contacts);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Contacts).call(this, props));\n\n    _this.handleScroll = function (event) {\n      _this.handleDebounceScroll();\n\n      _this.handleThrottleScroll();\n    };\n\n    _this.loadRenderIdsContent = function () {\n      var _this$state = _this.state,\n          items = _this$state.items,\n          searchItems = _this$state.searchItems;\n      var currentItems = searchItems || items;\n\n      var _ref = currentItems === searchItems ? _this.searchListRef : _this.listRef,\n          current = _ref.current;\n\n      if (!current) return;\n      var renderIds = current.getListRenderIds();\n\n      if (renderIds.size > 0) {\n        var userIds = [];\n\n        _toConsumableArray(renderIds.keys()).forEach(function (key) {\n          userIds.push(currentItems.user_ids[key]);\n        });\n\n        var store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n      }\n    };\n\n    _this.handleOpenUser = function (userId) {\n      openUser(userId, false);\n\n      _this.handleClose();\n    };\n\n    _this.renderItem = function (_ref2, items) {\n      var index = _ref2.index,\n          style = _ref2.style;\n      var userId = items.user_ids[index];\n      return React.createElement(UserListItem, {\n        key: userId,\n        userId: userId,\n        onClick: function onClick() {\n          return _this.handleOpenUser(userId);\n        },\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      });\n    };\n\n    _this.handleSearch =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(text) {\n        var query, searchItems, store;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                query = text.trim();\n\n                if (query) {\n                  _context.next = 4;\n                  break;\n                }\n\n                _this.setState({\n                  searchItems: null\n                });\n\n                return _context.abrupt(\"return\");\n\n              case 4:\n                _context.next = 6;\n                return TdLibController.send({\n                  '@type': 'searchContacts',\n                  query: query,\n                  limit: 1000\n                });\n\n              case 6:\n                searchItems = _context.sent;\n                searchItems.user_ids = searchItems.user_ids.sort(function (x, y) {\n                  return getUserFullName(x).localeCompare(getUserFullName(y));\n                });\n                store = FileStore.getStore();\n                loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n                _this.setState({\n                  searchItems: searchItems\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.handleClose = function () {\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateContacts',\n        open: false\n      });\n    };\n\n    _this.searchInputRef = React.createRef();\n    _this.listRef = React.createRef();\n    _this.searchListRef = React.createRef();\n    _this.state = {\n      items: null,\n      searchItems: null\n    };\n    _this.handleDebounceScroll = debounce(_this.handleDebounceScroll, 100, false);\n    _this.handleThrottleScroll = throttle(_this.handleThrottleScroll, 200, false);\n    return _this;\n  }\n\n  _createClass(Contacts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var current = this.searchInputRef.current;\n\n      if (current) {\n        setTimeout(function () {\n          return current.focus();\n        }, 50);\n      }\n\n      this.loadContent();\n    }\n  }, {\n    key: \"handleDebounceScroll\",\n    value: function handleDebounceScroll() {\n      this.loadRenderIdsContent();\n    }\n  }, {\n    key: \"handleThrottleScroll\",\n    value: function handleThrottleScroll() {\n      this.loadRenderIdsContent();\n    }\n  }, {\n    key: \"loadContent\",\n    value: function () {\n      var _loadContent = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var contacts, store;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                contacts = CacheStore.contacts;\n\n                if (contacts) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                _context2.next = 4;\n                return TdLibController.send({\n                  '@type': 'getContacts'\n                });\n\n              case 4:\n                contacts = _context2.sent;\n                contacts.user_ids = contacts.user_ids.sort(function (x, y) {\n                  return getUserFullName(x).localeCompare(getUserFullName(y));\n                });\n                CacheStore.contacts = contacts;\n\n              case 7:\n                store = FileStore.getStore();\n                loadUsersContent(store, contacts.user_ids.slice(0, 20));\n                this.setState({\n                  items: contacts\n                });\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadContent() {\n        return _loadContent.apply(this, arguments);\n      }\n\n      return loadContent;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var popup = this.props.popup;\n      var _this$state2 = this.state,\n          items = _this$state2.items,\n          searchItems = _this$state2.searchItems;\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"header-master\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        className: \"header-left-button\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, popup ? React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }) : React.createElement(ArrowBackIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      })), React.createElement(SearchInput, {\n        inputRef: this.searchInputRef,\n        onChange: this.handleSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"contacts-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, items && React.createElement(VirtualizedList, {\n        ref: this.listRef,\n        className: \"contacts-list\",\n        source: items.user_ids,\n        rowHeight: 72,\n        overScanCount: 20,\n        renderItem: function renderItem(x) {\n          return _this2.renderItem(x, items);\n        },\n        onScroll: this.handleScroll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), searchItems && React.createElement(VirtualizedList, {\n        ref: this.searchListRef,\n        className: \"contacts-list contacts-search-list\",\n        source: searchItems.user_ids,\n        rowHeight: 72,\n        overScanCount: 20,\n        renderItem: function renderItem(x) {\n          return _this2.renderItem(x, searchItems);\n        },\n        onScroll: this.handleScroll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Contacts;\n}(React.Component);\n\nContacts.propTypes = {\n  popup: PropTypes.bool\n};\nexport default Contacts;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnLeft/Contacts.js"],"names":["React","PropTypes","IconButton","ListItem","ArrowBackIcon","CloseIcon","User","SearchInput","VirtualizedList","loadUsersContent","debounce","throttle","openUser","getUserFullName","CacheStore","FileStore","TdLibController","UserListItem","nextProps","nextState","nextContext","props","userId","style","top","onClick","Component","Contacts","handleScroll","event","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","state","items","searchItems","currentItems","searchListRef","listRef","current","renderIds","getListRenderIds","size","userIds","keys","forEach","key","push","user_ids","store","getStore","handleOpenUser","handleClose","renderItem","index","handleSearch","text","query","trim","setState","send","limit","sort","x","y","localeCompare","slice","clientUpdate","open","searchInputRef","createRef","setTimeout","focus","loadContent","contacts","popup","propTypes","bool"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content'>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n"]},"metadata":{},"sourceType":"module"}