{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnRight/ChatInfo.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nvar ChatInfo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ChatInfo, _React$Component);\n\n  function ChatInfo(props) {\n    var _this;\n\n    _classCallCheck(this, ChatInfo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatInfo).call(this, props));\n\n    _this.onClientUpdatePageWidth = function (update) {\n      var isSmallWidth = update.isSmallWidth;\n      if (!isSmallWidth) return;\n      var popup = _this.props.popup;\n      if (popup) return;\n\n      _this.handleCloseChatDetails();\n    };\n\n    _this.onClientUpdateChatId = function (update) {\n      var popup = _this.props.popup;\n      var chatId = _this.state.chatId;\n      if (popup) return;\n      if (chatId === update.nextChatId) return;\n      _this.sharedAudios = null;\n      _this.sharedDocuments = null;\n      _this.sharedLinks = null;\n      _this.sharedPhotos = null;\n      _this.sharedVideos = null;\n      _this.sharedVoiceNotes = null;\n\n      _this.setState({\n        chatId: update.nextChatId,\n        migratedChatId: 0,\n        userChatId: null,\n        openGroupInCommon: false,\n        openSharedAudios: false,\n        openSharedDocuments: false,\n        openSharedLinks: false,\n        openSharedMedia: false,\n        openSharedPhotos: false,\n        openSharedVideos: false,\n        openSharedVoiceNotes: false,\n        counters: ChatStore.getCounters(update.nextChatId),\n        migratedCounters: null\n      });\n    };\n\n    _this.loadContent = function (chatId) {\n      _this.loadChatCounters(chatId);\n\n      _this.loadMigratedCounters(chatId);\n\n      var photo = getPhotoFromChat(chatId);\n      if (!photo) return;\n      loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    _this.loadChatCounters =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(chatId) {\n        var counters;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getChatCounters(chatId);\n\n              case 2:\n                counters = _context.sent;\n                ChatStore.setCounters(chatId, counters);\n\n                if (!(chatId !== _this.state.chatId)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 6:\n                _this.setState({\n                  counters: counters\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.loadMigratedCounters =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(chatId) {\n        var fullInfo, basic_group_id, chat, counters;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (isSupergroup(chatId)) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n\n                if (fullInfo) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 5:\n                basic_group_id = fullInfo.upgraded_from_basic_group_id;\n\n                if (basic_group_id) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 8:\n                _context2.next = 10;\n                return TdLibController.send({\n                  '@type': 'createBasicGroupChat',\n                  basic_group_id: basic_group_id,\n                  force: true\n                });\n\n              case 10:\n                chat = _context2.sent;\n\n                if (chat) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 13:\n                _context2.next = 15;\n                return getChatCounters(chat.id);\n\n              case 15:\n                counters = _context2.sent;\n                ChatStore.setCounters(chat.id, counters);\n\n                if (!(_this.state.chatId !== chatId)) {\n                  _context2.next = 19;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 19:\n                _this.setState({\n                  migratedChatId: chat.id,\n                  migratedCounters: ChatStore.getCounters(chat.id)\n                });\n\n              case 20:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.handleOpenSharedMedia = function () {\n      _this.setState({\n        openSharedMedia: true\n      });\n    };\n\n    _this.handleCloseSharedMedia = function () {\n      _this.setState({\n        openSharedMedia: false\n      });\n    };\n\n    _this.handleOpenGroupInCommon = function () {\n      _this.setState({\n        openGroupInCommon: true\n      });\n    };\n\n    _this.handleCloseGroupsInCommon = function () {\n      _this.setState({\n        openGroupInCommon: false\n      });\n    };\n\n    _this.handleCloseChatDetails = function () {\n      var popup = _this.props.popup;\n      var userChatId = _this.state.userChatId;\n\n      if (userChatId) {\n        _this.setState({\n          userChatId: null\n        });\n      } else if (popup) {\n        TdLibController.clientUpdate({\n          '@type': 'clientUpdateDialogChatId',\n          chatId: 0\n        });\n      } else {\n        AppStore.changeChatDetailsVisibility(false);\n      }\n    };\n\n    _this.handleOpenSharedDocuments = function () {\n      _this.setState({\n        openSharedDocuments: true\n      });\n    };\n\n    _this.handleCloseSharedDocuments = function () {\n      _this.setState({\n        openSharedDocuments: false\n      });\n    };\n\n    _this.handleOpenSharedAudios = function () {\n      _this.setState({\n        openSharedAudios: true\n      });\n    };\n\n    _this.handleCloseSharedAudios = function () {\n      _this.setState({\n        openSharedAudios: false\n      });\n    };\n\n    _this.handleOpenSharedVoiceNotes = function () {\n      _this.setState({\n        openSharedVoiceNotes: true\n      });\n    };\n\n    _this.handleCloseSharedVoiceNotes = function () {\n      _this.setState({\n        openSharedVoiceNotes: false\n      });\n    };\n\n    _this.handleOpenSharedLinks = function () {\n      _this.setState({\n        openSharedLinks: true\n      });\n    };\n\n    _this.handleCloseSharedLinks = function () {\n      _this.setState({\n        openSharedLinks: false\n      });\n    };\n\n    _this.handleOpenSharedPhotos = function () {\n      _this.setState({\n        openSharedPhotos: true\n      });\n    };\n\n    _this.handleCloseSharedPhotos = function () {\n      _this.setState({\n        openSharedPhotos: false\n      });\n    };\n\n    _this.handleOpenSharedVideos = function () {\n      _this.setState({\n        openSharedVideos: true\n      });\n    };\n\n    _this.handleCloseSharedVideos = function () {\n      _this.setState({\n        openSharedVideos: false\n      });\n    };\n\n    _this.detailsRef = React.createRef();\n    var _popup = props.popup;\n    var _chatId = AppStore.chatId,\n        dialogChatId = AppStore.dialogChatId;\n    _this.state = {\n      chatId: _popup ? dialogChatId : _chatId,\n      migratedChatId: 0,\n      userChatId: null,\n      openGroupInCommon: false,\n      openSharedAudios: false,\n      openSharedDocuments: false,\n      openSharedLinks: false,\n      openSharedMedia: false,\n      openSharedPhotos: false,\n      openSharedVideos: false,\n      openSharedVoiceNotes: false,\n      counters: null,\n      migratedCounters: null\n    };\n    return _this;\n  }\n\n  _createClass(ChatInfo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadContent(this.state.chatId);\n      AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n      AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n      AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      var chatId = this.state.chatId;\n\n      if (chatId !== prevState.chatId) {\n        this.loadContent(chatId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          popup = _this$props.popup;\n      var _this$state = this.state,\n          chatId = _this$state.chatId,\n          counters = _this$state.counters,\n          migratedChatId = _this$state.migratedChatId,\n          migratedCounters = _this$state.migratedCounters,\n          userChatId = _this$state.userChatId,\n          openSharedAudios = _this$state.openSharedAudios,\n          openSharedDocuments = _this$state.openSharedDocuments,\n          openSharedLinks = _this$state.openSharedLinks,\n          openSharedMedia = _this$state.openSharedMedia,\n          openSharedPhotos = _this$state.openSharedPhotos,\n          openSharedVideos = _this$state.openSharedVideos,\n          openSharedVoiceNotes = _this$state.openSharedVoiceNotes,\n          openGroupInCommon = _this$state.openGroupInCommon;\n      var currentChatId = chatId || userChatId;\n      var minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n      var content = null;\n\n      if (openSharedMedia) {\n        content = React.createElement(SharedMedia, {\n          chatId: currentChatId,\n          popup: popup,\n          minHeight: minHeight,\n          onClose: this.handleCloseSharedMedia,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        });\n      } else if (openSharedAudios) {\n        this.sharedAudios = this.sharedAudios || React.createElement(SharedAudios, {\n          chatId: currentChatId,\n          migratedChatId: migratedChatId,\n          popup: popup,\n          minHeight: minHeight,\n          onClose: this.handleCloseSharedAudios,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        });\n        content = this.sharedAudios;\n      } else if (openSharedDocuments) {\n        this.sharedDocuments = this.sharedDocuments || React.createElement(SharedDocuments, {\n          chatId: currentChatId,\n          migratedChatId: migratedChatId,\n          popup: popup,\n          minHeight: minHeight,\n          onClose: this.handleCloseSharedDocuments,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        });\n        content = this.sharedDocuments;\n      } else if (openSharedLinks) {\n        this.sharedLinks = this.sharedLinks || React.createElement(SharedLinks, {\n          chatId: currentChatId,\n          migratedChatId: migratedChatId,\n          popup: popup,\n          minHeight: minHeight,\n          onClose: this.handleCloseSharedLinks,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        });\n        content = this.sharedLinks;\n      } else if (openSharedPhotos) {\n        this.sharedPhotos = this.sharedPhotos || React.createElement(SharedPhotos, {\n          chatId: currentChatId,\n          migratedChatId: migratedChatId,\n          popup: popup,\n          minHeight: minHeight,\n          onClose: this.handleCloseSharedPhotos,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307\n          },\n          __self: this\n        });\n        content = this.sharedPhotos;\n      } else if (openSharedVideos) {\n        this.sharedVideos = this.sharedVideos || React.createElement(SharedVideos, {\n          chatId: currentChatId,\n          migratedChatId: migratedChatId,\n          popup: popup,\n          minHeight: minHeight,\n          onClose: this.handleCloseSharedVideos,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319\n          },\n          __self: this\n        });\n        content = this.sharedVideos;\n      } else if (openSharedVoiceNotes) {\n        this.sharedVoiceNotes = this.sharedVoiceNotes || React.createElement(SharedVoiceNotes, {\n          chatId: currentChatId,\n          migratedChatId: migratedChatId,\n          popup: popup,\n          minHeight: minHeight,\n          onClose: this.handleCloseSharedVoiceNotes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331\n          },\n          __self: this\n        });\n        content = this.sharedVoiceNotes;\n      } else if (openGroupInCommon) {\n        content = React.createElement(GroupsInCommon, {\n          chatId: currentChatId,\n          popup: popup,\n          minHeight: minHeight,\n          onClose: this.handleCloseGroupsInCommon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343\n          },\n          __self: this\n        });\n      } else {\n        content = React.createElement(ChatDetails, {\n          ref: this.detailsRef,\n          chatId: currentChatId,\n          popup: popup,\n          backButton: userChatId === chatId,\n          counters: counters,\n          migratedCounters: migratedCounters,\n          onOpenGroupInCommon: this.handleOpenGroupInCommon,\n          onOpenSharedAudios: this.handleOpenSharedAudios,\n          onOpenSharedDocuments: this.handleOpenSharedDocuments,\n          onOpenSharedMedia: this.handleOpenSharedMedia,\n          onOpenSharedLinks: this.handleOpenSharedLinks,\n          onOpenSharedPhotos: this.handleOpenSharedPhotos,\n          onOpenSharedVideos: this.handleOpenSharedVideos,\n          onOpenSharedVoiceNotes: this.handleOpenSharedVoiceNotes,\n          onClose: this.handleCloseChatDetails,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352\n          },\n          __self: this\n        });\n      }\n\n      return popup ? React.createElement(React.Fragment, null, content) : React.createElement(\"div\", {\n        className: classNames('chat-info', {\n          'right-column': !popup\n        }, className),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, content);\n    }\n  }]);\n\n  return ChatInfo;\n}(React.Component);\n\nChatInfo.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object,\n  popup: PropTypes.bool\n};\nChatInfo.defaultProps = {\n  className: null,\n  classes: null,\n  popup: false\n};\nexport default ChatInfo;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnRight/ChatInfo.js"],"names":["React","PropTypes","classNames","ChatDetails","GroupsInCommon","SharedAudios","SharedDocuments","SharedLinks","SharedMedia","SharedPhotos","SharedVideos","SharedVoiceNotes","getChatCounters","getPhotoFromChat","getSupergroupId","isSupergroup","loadProfileMediaViewerContent","AppStore","ChatStore","SupergroupStore","TdLibController","ChatInfo","props","onClientUpdatePageWidth","update","isSmallWidth","popup","handleCloseChatDetails","onClientUpdateChatId","chatId","state","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","setState","migratedChatId","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","counters","getCounters","migratedCounters","loadContent","loadChatCounters","loadMigratedCounters","photo","setCounters","fullInfo","getFullInfo","basic_group_id","upgraded_from_basic_group_id","send","force","chat","id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","clientUpdate","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","createRef","dialogChatId","on","off","prevProps","prevState","snapshot","className","currentChatId","minHeight","current","getContentHeight","content","Component","propTypes","string","classes","object","bool","defaultProps"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            AppStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n"]},"metadata":{},"sourceType":"module"}