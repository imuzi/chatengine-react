{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Tile/SharedMedia/SharedPhoto.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nvar SharedPhoto =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SharedPhoto, _React$Component);\n\n  function SharedPhoto(props) {\n    var _this;\n\n    _classCallCheck(this, SharedPhoto);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SharedPhoto).call(this, props));\n\n    _this.onClientUpdatePhotoBlob = function (update) {\n      var _this$state = _this.state,\n          photoSize = _this$state.photoSize,\n          thumbSize = _this$state.thumbSize;\n      var fileId = update.fileId;\n\n      if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n        _this.forceUpdate();\n      } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n        _this.forceUpdate();\n      }\n    };\n\n    _this.handleOpenContextMenu =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var contextMenu, left, top;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (event) {\n                  event.preventDefault();\n                  event.stopPropagation();\n                }\n\n                contextMenu = _this.state.contextMenu;\n\n                if (contextMenu) {\n                  _this.setState({\n                    contextMenu: false\n                  });\n                } else {\n                  left = event.clientX;\n                  top = event.clientY;\n\n                  _this.setState({\n                    contextMenu: true,\n                    left: left,\n                    top: top\n                  });\n                }\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleCloseContextMenu = function (event) {\n      if (event) {\n        event.stopPropagation();\n      }\n\n      _this.setState({\n        contextMenu: false\n      });\n    };\n\n    var photo = props.photo,\n        size = props.size,\n        thumbnailSize = props.thumbnailSize;\n    _this.state = {\n      contextMenu: false,\n      left: 0,\n      top: 0,\n      photoSize: getSize(photo.sizes, size),\n      thumbSize: getSize(photo.sizes, thumbnailSize),\n      minithumbnail: photo.minithumbnail\n    };\n    return _this;\n  }\n\n  _createClass(SharedPhoto, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          chatId = _this$props.chatId,\n          messageId = _this$props.messageId,\n          openMedia = _this$props.openMedia,\n          showOpenMessage = _this$props.showOpenMessage,\n          style = _this$props.style;\n      var _this$state2 = this.state,\n          minithumbnail = _this$state2.minithumbnail,\n          thumbSize = _this$state2.thumbSize,\n          photoSize = _this$state2.photoSize,\n          contextMenu = _this$state2.contextMenu,\n          left = _this$state2.left,\n          top = _this$state2.top;\n      if (!photoSize) return null;\n      var miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n      var thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n      var src = getSrc(photoSize.photo);\n      var isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"shared-photo\",\n        style: style,\n        onClick: openMedia,\n        onContextMenu: this.handleOpenContextMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"shared-photo-content\",\n        style: {\n          backgroundImage: \"url(\".concat(thumbSrc || miniSrc, \")\"),\n          backgroundSize: 'cover'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, src !== thumbSrc && React.createElement(\"div\", {\n        className: \"shared-photo-main-content\",\n        style: {\n          backgroundImage: \"url(\".concat(src, \")\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }))), React.createElement(ContextMenu, {\n        chatId: chatId,\n        messageId: messageId,\n        anchorPosition: {\n          top: top,\n          left: left\n        },\n        open: contextMenu,\n        showOpenMessage: showOpenMessage,\n        onClose: this.handleCloseContextMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SharedPhoto;\n}(React.Component);\n\nSharedPhoto.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  messageId: PropTypes.number.isRequired,\n  photo: PropTypes.object.isRequired,\n  showOpenMessage: PropTypes.bool.isRequired,\n  openMedia: PropTypes.func,\n  size: PropTypes.number,\n  thumbnailSize: PropTypes.number,\n  style: PropTypes.object\n};\nSharedPhoto.defaultProps = {\n  size: PHOTO_SIZE,\n  thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\nexport default SharedPhoto;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Tile/SharedMedia/SharedPhoto.js"],"names":["React","PropTypes","ContextMenu","getSrc","getSize","isBlurredThumbnail","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","FileStore","SharedPhoto","props","onClientUpdatePhotoBlob","update","state","photoSize","thumbSize","fileId","photo","id","forceUpdate","handleOpenContextMenu","event","preventDefault","stopPropagation","contextMenu","setState","left","clientX","top","clientY","handleCloseContextMenu","size","thumbnailSize","sizes","minithumbnail","on","off","chatId","messageId","openMedia","showOpenMessage","style","miniSrc","data","thumbSrc","src","isBlurred","backgroundImage","backgroundSize","Component","propTypes","number","isRequired","object","bool","func","defaultProps"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n"]},"metadata":{},"sourceType":"module"}