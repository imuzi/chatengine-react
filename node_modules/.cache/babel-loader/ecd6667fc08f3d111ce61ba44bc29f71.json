{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/InstantView/Blocks/Embedded.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIframeResizer from '../../Additional/IframeResizer';\nimport Caption from './Caption';\n\nvar Embedded =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Embedded, _React$Component);\n\n  function Embedded() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Embedded);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Embedded)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Embedded, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setIframeSource();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      var _this$props = this.props,\n          url = _this$props.url,\n          html = _this$props.html;\n\n      if (url !== prevProps.url || html !== prevProps.html) {\n        this.setIframeSource();\n      }\n    }\n  }, {\n    key: \"setIframeSource\",\n    value: function setIframeSource() {\n      var _this$props2 = this.props,\n          url = _this$props2.url,\n          html = _this$props2.html;\n      this.setState({\n        url: url,\n        html: html\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          url = _this$state.url,\n          html = _this$state.html;\n      var _this$props3 = this.props,\n          width = _this$props3.width,\n          height = _this$props3.height,\n          caption = _this$props3.caption,\n          isFullWidth = _this$props3.isFullWidth,\n          allowScrolling = _this$props3.allowScrolling;\n      var options = {\n        scrolling: allowScrolling\n      };\n      var hasWidthHeight = width > 0 && height > 0;\n      var hasSource = Boolean(url) || Boolean(html);\n      return React.createElement(\"figure\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, hasSource && React.createElement(React.Fragment, null, hasWidthHeight ? React.createElement(\"iframe\", {\n        src: url ? url : null,\n        srcDoc: url ? null : html,\n        width: width > 0 ? width : null,\n        height: height > 0 ? height : null,\n        allowFullScreen: isFullWidth,\n        scrolling: allowScrolling ? 'auto' : 'no',\n        frameBorder: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }) : React.createElement(ReactIframeResizer, {\n        content: html,\n        src: url,\n        iframeResizerOptions: options,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), React.createElement(Caption, {\n        text: caption.text,\n        credit: caption.credit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if (props.url !== state.prevUrl || props.html !== state.prevHtml) {\n        return {\n          url: null,\n          html: null,\n          prevUrl: props.url,\n          prevHtml: props.html\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Embedded;\n}(React.Component);\n\nEmbedded.propTypes = {\n  url: PropTypes.string.isRequired,\n  html: PropTypes.string.isRequired,\n  posterPhoto: PropTypes.object,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  caption: PropTypes.object.isRequired,\n  isFullWidth: PropTypes.bool.isRequired,\n  allowScrolling: PropTypes.bool.isRequired\n};\nexport default Embedded;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/InstantView/Blocks/Embedded.js"],"names":["React","PropTypes","ReactIframeResizer","Caption","Embedded","state","setIframeSource","prevProps","prevState","snapshot","props","url","html","setState","width","height","caption","isFullWidth","allowScrolling","options","scrolling","hasWidthHeight","hasSource","Boolean","text","credit","prevUrl","prevHtml","Component","propTypes","string","isRequired","posterPhoto","object","number","bool"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIframeResizer from '../../Additional/IframeResizer';\nimport Caption from './Caption';\n\nclass Embedded extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.url !== state.prevUrl || props.html !== state.prevHtml) {\n            return {\n                url: null,\n                html: null,\n                prevUrl: props.url,\n                prevHtml: props.html\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.setIframeSource();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { url, html } = this.props;\n\n        if (url !== prevProps.url || html !== prevProps.html) {\n            this.setIframeSource();\n        }\n    }\n\n    setIframeSource() {\n        const { url, html } = this.props;\n\n        this.setState({\n            url,\n            html\n        });\n    }\n\n    render() {\n        const { url, html } = this.state;\n        const { width, height, caption, isFullWidth, allowScrolling } = this.props;\n\n        const options = {\n            scrolling: allowScrolling\n        };\n\n        const hasWidthHeight = width > 0 && height > 0;\n        const hasSource = Boolean(url) || Boolean(html);\n\n        return (\n            <figure>\n                {hasSource && (\n                    <>\n                        {hasWidthHeight ? (\n                            <iframe\n                                src={url ? url : null}\n                                srcDoc={url ? null : html}\n                                width={width > 0 ? width : null}\n                                height={height > 0 ? height : null}\n                                allowFullScreen={isFullWidth}\n                                scrolling={allowScrolling ? 'auto' : 'no'}\n                                frameBorder={0}\n                            />\n                        ) : (\n                            <ReactIframeResizer\n                                content={html}\n                                src={url}\n                                iframeResizerOptions={options}\n                                style={{ width: '100%' }}\n                            />\n                        )}\n                    </>\n                )}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        );\n    }\n}\n\nEmbedded.propTypes = {\n    url: PropTypes.string.isRequired,\n    html: PropTypes.string.isRequired,\n    posterPhoto: PropTypes.object,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired,\n    isFullWidth: PropTypes.bool.isRequired,\n    allowScrolling: PropTypes.bool.isRequired\n};\n\nexport default Embedded;\n"]},"metadata":{},"sourceType":"module"}