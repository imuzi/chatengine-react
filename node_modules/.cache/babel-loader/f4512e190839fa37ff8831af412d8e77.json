{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Additional/NotificationTimer.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nvar NotificationTimer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NotificationTimer, _React$Component);\n\n  function NotificationTimer(props) {\n    var _this;\n\n    _classCallCheck(this, NotificationTimer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NotificationTimer).call(this, props));\n\n    _this.handleTimer = function () {\n      var now = new Date();\n      var seconds = _this.expire - now;\n      var value = 100 - seconds / _this.props.timeout * 100; // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n\n      _this.setState({\n        seconds: seconds > 0 ? seconds : 0,\n        value: value > 100 ? 100 : value\n      });\n\n      if (now >= _this.expire) {\n        if (_this.timerId) {\n          clearInterval(_this.timerId);\n          _this.timerId = null;\n        }\n      }\n    };\n\n    _this.state = {\n      seconds: _this.props.timeout / 1000,\n      value: 0\n    };\n    return _this;\n  }\n\n  _createClass(NotificationTimer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.startTime = new Date();\n      this.expire = this.startTime;\n      this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n      this.timerId = setInterval(this.handleTimer, 100);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.timerId) {\n        clearInterval(this.timerId);\n        this.timerId = null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          value = _this$state.value,\n          seconds = _this$state.seconds;\n      return React.createElement(\"div\", {\n        className: \"notification-timer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"notification-timer-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, (seconds / 1000).toFixed())), React.createElement(\"div\", {\n        className: \"notification-timer-progress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(CircularProgress, {\n        size: 32,\n        value: 100 - value,\n        variant: \"static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return NotificationTimer;\n}(React.Component);\n\nNotificationTimer.propTypes = {\n  timeout: PropTypes.number.isRequired\n};\nexport default NotificationTimer;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Additional/NotificationTimer.js"],"names":["React","PropTypes","Typography","CircularProgress","NotificationTimer","props","handleTimer","now","Date","seconds","expire","value","timeout","setState","timerId","clearInterval","state","startTime","setMilliseconds","getMilliseconds","setInterval","toFixed","Component","propTypes","number","isRequired"],"mappings":";;;;;;;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,4CAAvB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAO,yBAAP;;IAEMC,iB;;;;;AACF,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,2FAAMA,KAAN;;AADe,UAgBnBC,WAhBmB,GAgBL,YAAM;AAChB,UAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACA,UAAMC,OAAO,GAAG,MAAKC,MAAL,GAAcH,GAA9B;AACA,UAAMI,KAAK,GAAG,MAAOF,OAAO,GAAG,MAAKJ,KAAL,CAAWO,OAAtB,GAAiC,GAArD,CAHgB,CAIhB;;AACA,YAAKC,QAAL,CAAc;AACVJ,QAAAA,OAAO,EAAEA,OAAO,GAAG,CAAV,GAAcA,OAAd,GAAwB,CADvB;AAEVE,QAAAA,KAAK,EAAEA,KAAK,GAAG,GAAR,GAAc,GAAd,GAAoBA;AAFjB,OAAd;;AAKA,UAAIJ,GAAG,IAAI,MAAKG,MAAhB,EAAwB;AACpB,YAAI,MAAKI,OAAT,EAAkB;AACdC,UAAAA,aAAa,CAAC,MAAKD,OAAN,CAAb;AACA,gBAAKA,OAAL,GAAe,IAAf;AACH;AACJ;AACJ,KAhCkB;;AAGf,UAAKE,KAAL,GAAa;AACTP,MAAAA,OAAO,EAAE,MAAKJ,KAAL,CAAWO,OAAX,GAAqB,IADrB;AAETD,MAAAA,KAAK,EAAE;AAFE,KAAb;AAHe;AAOlB;;;;wCAEmB;AAChB,WAAKM,SAAL,GAAiB,IAAIT,IAAJ,EAAjB;AACA,WAAKE,MAAL,GAAc,KAAKO,SAAnB;AACA,WAAKP,MAAL,CAAYQ,eAAZ,CAA4B,KAAKR,MAAL,CAAYS,eAAZ,KAAgC,KAAKd,KAAL,CAAWO,OAAvE;AACA,WAAKE,OAAL,GAAeM,WAAW,CAAC,KAAKd,WAAN,EAAmB,GAAnB,CAA1B;AACH;;;2CAoBsB;AACnB,UAAI,KAAKQ,OAAT,EAAkB;AACdC,QAAAA,aAAa,CAAC,KAAKD,OAAN,CAAb;AACA,aAAKA,OAAL,GAAe,IAAf;AACH;AACJ;;;6BAEQ;AAAA,wBACsB,KAAKE,KAD3B;AAAA,UACGL,KADH,eACGA,KADH;AAAA,UACUF,OADV,eACUA,OADV;AAGL,aACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B,CAACA,OAAO,GAAG,IAAX,EAAiBY,OAAjB,EAA7B,CADJ,CADJ,EAII;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AAAkB,QAAA,IAAI,EAAE,EAAxB;AAA4B,QAAA,KAAK,EAAE,MAAMV,KAAzC;AAAgD,QAAA,OAAO,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CADJ;AAUH;;;;EAvD2BX,KAAK,CAACsB,S;;AA0DtClB,iBAAiB,CAACmB,SAAlB,GAA8B;AAC1BX,EAAAA,OAAO,EAAEX,SAAS,CAACuB,MAAV,CAAiBC;AADA,CAA9B;AAIA,eAAerB,iBAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n"]},"metadata":{},"sourceType":"module"}