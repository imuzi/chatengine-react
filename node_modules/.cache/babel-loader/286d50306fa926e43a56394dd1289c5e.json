{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Message/DayMeta.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nvar DayMeta =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DayMeta, _React$Component);\n\n  function DayMeta() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DayMeta);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DayMeta)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onClientUpdateLanguage = function () {\n      _this.forceUpdate();\n    };\n\n    return _this;\n  }\n\n  _createClass(DayMeta, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          date = _this$props.date,\n          i18n = _this$props.i18n;\n      var showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n      var options = showYear ? {\n        day: 'numeric',\n        month: 'long',\n        year: 'numeric'\n      } : {\n        day: 'numeric',\n        month: 'long'\n      };\n      return React.createElement(\"div\", {\n        className: \"day-meta\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"day-meta-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, new Date(date * 1000).toLocaleDateString([i18n.language], options))));\n    }\n  }]);\n\n  return DayMeta;\n}(React.Component);\n\nDayMeta.propTypes = {\n  date: PropTypes.number.isRequired\n};\nexport default withTranslation()(DayMeta);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Message/DayMeta.js"],"names":["React","PropTypes","withTranslation","LocalizationStore","DayMeta","onClientUpdateLanguage","forceUpdate","on","off","props","date","i18n","showYear","Date","setMonth","getMonth","options","day","month","year","toLocaleDateString","language","Component","propTypes","number","isRequired"],"mappings":";;;;;;;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,OAAO,eAAP;;IAEMC,O;;;;;;;;;;;;;;;;;;UASFC,sB,GAAyB,YAAM;AAC3B,YAAKC,WAAL;AACH,K;;;;;;;wCAVmB;AAChBH,MAAAA,iBAAiB,CAACI,EAAlB,CAAqB,4BAArB,EAAmD,KAAKF,sBAAxD;AACH;;;2CAEsB;AACnBF,MAAAA,iBAAiB,CAACK,GAAlB,CAAsB,4BAAtB,EAAoD,KAAKH,sBAAzD;AACH;;;6BAMQ;AAAA,wBACkB,KAAKI,KADvB;AAAA,UACGC,IADH,eACGA,IADH;AAAA,UACSC,IADT,eACSA,IADT;AAGL,UAAMC,QAAQ,GAAG,IAAIC,IAAJ,CAASH,IAAI,GAAG,IAAhB,IAAwB,IAAIG,IAAJ,GAAWC,QAAX,CAAoB,IAAID,IAAJ,GAAWE,QAAX,KAAwB,CAA5C,CAAzC;AACA,UAAMC,OAAO,GAAGJ,QAAQ,GAClB;AACIK,QAAAA,GAAG,EAAE,SADT;AAEIC,QAAAA,KAAK,EAAE,MAFX;AAGIC,QAAAA,IAAI,EAAE;AAHV,OADkB,GAMlB;AACIF,QAAAA,GAAG,EAAE,SADT;AAEIC,QAAAA,KAAK,EAAE;AAFX,OANN;AAWA,aACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,IAAIL,IAAJ,CAASH,IAAI,GAAG,IAAhB,EAAsBU,kBAAtB,CAAyC,CAACT,IAAI,CAACU,QAAN,CAAzC,EAA0DL,OAA1D,CAAN,CADJ,CADJ,CADJ;AAOH;;;;EAnCiBhB,KAAK,CAACsB,S;;AAsC5BlB,OAAO,CAACmB,SAAR,GAAoB;AAChBb,EAAAA,IAAI,EAAET,SAAS,CAACuB,MAAV,CAAiBC;AADP,CAApB;AAIA,eAAevB,eAAe,GAAGE,OAAH,CAA9B","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n"]},"metadata":{},"sourceType":"module"}