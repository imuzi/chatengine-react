{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Player/PlaybackRateButton.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nvar PlaybackRateButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PlaybackRateButton, _React$Component);\n\n  function PlaybackRateButton(props) {\n    var _this;\n\n    _classCallCheck(this, PlaybackRateButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlaybackRateButton).call(this, props));\n\n    _this.onClientUpdateMediaPlaybackRate = function (update) {\n      var playbackRate = update.playbackRate;\n\n      _this.setState({\n        playbackRate: playbackRate\n      });\n    };\n\n    _this.handlePlaybackRate = function () {\n      var playbackRate = _this.state.playbackRate;\n      var nextPlaybackRate = playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaPlaybackRate',\n        playbackRate: nextPlaybackRate\n      });\n    };\n\n    var _playbackRate = PlayerStore.playbackRate;\n    _this.state = {\n      playbackRate: _playbackRate\n    };\n    return _this;\n  }\n\n  _createClass(PlaybackRateButton, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var playbackRate = this.state.playbackRate;\n      return React.createElement(IconButton, {\n        className: \"header-player-button\",\n        color: playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default',\n        onClick: this.handlePlaybackRate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header-player-playback-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"2X\"));\n    }\n  }]);\n\n  return PlaybackRateButton;\n}(React.Component);\n\nexport default PlaybackRateButton;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Player/PlaybackRateButton.js"],"names":["React","IconButton","PlayerStore","TdLibController","PLAYER_PLAYBACKRATE_FAST","PLAYER_PLAYBACKRATE_NORMAL","PlaybackRateButton","props","onClientUpdateMediaPlaybackRate","update","playbackRate","setState","handlePlaybackRate","state","nextPlaybackRate","clientUpdate","on","off","Component"],"mappings":";;;;;;;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,SAASC,wBAAT,EAAmCC,0BAAnC,QAAqE,iBAArE;;IAEMC,kB;;;;;AACF,8BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,4FAAMA,KAAN;;AADe,UAkBnBC,+BAlBmB,GAkBe,UAAAC,MAAM,EAAI;AAAA,UAChCC,YADgC,GACfD,MADe,CAChCC,YADgC;;AAGxC,YAAKC,QAAL,CAAc;AAAED,QAAAA,YAAY,EAAZA;AAAF,OAAd;AACH,KAtBkB;;AAAA,UAwBnBE,kBAxBmB,GAwBE,YAAM;AAAA,UACfF,YADe,GACE,MAAKG,KADP,CACfH,YADe;AAGvB,UAAMI,gBAAgB,GAClBJ,YAAY,KAAKL,0BAAjB,GAA8CD,wBAA9C,GAAyEC,0BAD7E;AAGAF,MAAAA,eAAe,CAACY,YAAhB,CAA6B;AACzB,iBAAS,+BADgB;AAEzBL,QAAAA,YAAY,EAAEI;AAFW,OAA7B;AAIH,KAlCkB;;AAAA,QAGPJ,aAHO,GAGUR,WAHV,CAGPQ,YAHO;AAKf,UAAKG,KAAL,GAAa;AACTH,MAAAA,YAAY,EAAZA;AADS,KAAb;AALe;AAQlB;;;;wCAEmB;AAChBR,MAAAA,WAAW,CAACc,EAAZ,CAAe,+BAAf,EAAgD,KAAKR,+BAArD;AACH;;;2CAEsB;AACnBN,MAAAA,WAAW,CAACe,GAAZ,CAAgB,+BAAhB,EAAiD,KAAKT,+BAAtD;AACH;;;6BAoBQ;AAAA,UACGE,YADH,GACoB,KAAKG,KADzB,CACGH,YADH;AAGL,aACI,oBAAC,UAAD;AACI,QAAA,SAAS,EAAC,sBADd;AAEI,QAAA,KAAK,EAAEA,YAAY,GAAGL,0BAAf,GAA4C,SAA5C,GAAwD,SAFnE;AAGI,QAAA,OAAO,EAAE,KAAKO,kBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,CADJ;AAQH;;;;EAhD4BZ,KAAK,CAACkB,S;;AAmDvC,eAAeZ,kBAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default PlaybackRateButton;\n"]},"metadata":{},"sourceType":"module"}