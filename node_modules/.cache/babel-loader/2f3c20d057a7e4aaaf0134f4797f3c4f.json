{"ast":null,"code":"/*\n * Date Format 1.2.3\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by Scott Trenda <scott.trenda.net>\n * and Kris Kowal <cixar.com/~kris.kowal/>\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to dateFormat.masks.default.\n */\nvar dateFormat = function () {\n  var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZWN]|\"[^\"]*\"|'[^']*'/g;\n  var timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\n  var timezoneClip = /[^-+\\dA-Z]/g; // Regexes and supporting functions are cached through closure\n\n  return function (date, mask, utc, gmt) {\n    // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)\n    if (arguments.length === 1 && kindOf(date) === 'string' && !/\\d/.test(date)) {\n      mask = date;\n      date = undefined;\n    }\n\n    date = date || new Date();\n\n    if (!(date instanceof Date)) {\n      date = new Date(date);\n    }\n\n    if (isNaN(date)) {\n      throw TypeError('Invalid date');\n    }\n\n    mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']); // Allow setting the utc/gmt argument via the mask\n\n    var maskSlice = mask.slice(0, 4);\n\n    if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {\n      mask = mask.slice(4);\n      utc = true;\n\n      if (maskSlice === 'GMT:') {\n        gmt = true;\n      }\n    }\n\n    var _ = utc ? 'getUTC' : 'get';\n\n    var d = date[_ + 'Date']();\n\n    var D = date[_ + 'Day']();\n\n    var m = date[_ + 'Month']();\n\n    var y = date[_ + 'FullYear']();\n\n    var H = date[_ + 'Hours']();\n\n    var M = date[_ + 'Minutes']();\n\n    var s = date[_ + 'Seconds']();\n\n    var L = date[_ + 'Milliseconds']();\n\n    var o = utc ? 0 : date.getTimezoneOffset();\n    var W = getWeek(date);\n    var N = getDayOfWeek(date);\n    var flags = {\n      d: d,\n      dd: pad(d),\n      ddd: dateFormat.i18n.dayNames[D],\n      dddd: dateFormat.i18n.dayNames[D + 7],\n      m: m + 1,\n      mm: pad(m + 1),\n      mmm: dateFormat.i18n.monthNames[m],\n      mmmm: dateFormat.i18n.monthNames[m + 12],\n      yy: String(y).slice(2),\n      yyyy: y,\n      h: H % 12 || 12,\n      hh: pad(H % 12 || 12),\n      H: H,\n      HH: pad(H),\n      M: M,\n      MM: pad(M),\n      s: s,\n      ss: pad(s),\n      l: pad(L, 3),\n      L: pad(Math.round(L / 10)),\n      t: H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],\n      tt: H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],\n      T: H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],\n      TT: H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],\n      Z: gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\n      o: (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\n      S: ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10],\n      W: W,\n      N: N\n    };\n    return mask.replace(token, function (match) {\n      if (match in flags) {\n        return flags[match];\n      }\n\n      return match.slice(1, match.length - 1);\n    });\n  };\n}();\n\ndateFormat.masks = {\n  default: 'ddd mmm dd yyyy HH:MM:ss',\n  shortDate: 'm/d/yy',\n  mediumDate: 'mmm d, yyyy',\n  longDate: 'mmmm d, yyyy',\n  fullDate: 'dddd, mmmm d, yyyy',\n  shortTime: 'h:MM TT',\n  mediumTime: 'h:MM:ss TT',\n  longTime: 'h:MM:ss TT Z',\n  isoDate: 'yyyy-mm-dd',\n  isoTime: 'HH:MM:ss',\n  isoDateTime: \"yyyy-mm-dd'T'HH:MM:sso\",\n  isoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\",\n  expiresHeaderFormat: 'ddd, dd mmm yyyy HH:MM:ss Z'\n}; // Internationalization strings\n\ndateFormat.i18n = {\n  dayNames: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  monthNames: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  timeNames: ['a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM']\n};\n\nfunction pad(val, len) {\n  val = String(val);\n  len = len || 2;\n\n  while (val.length < len) {\n    val = '0' + val;\n  }\n\n  return val;\n}\n/**\n * Get the ISO 8601 week number\n * Based on comments from\n * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n *\n * @param  {Object} `date`\n * @return {Number}\n */\n\n\nfunction getWeek(date) {\n  // Remove time components of date\n  var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate()); // Change date to Thursday same week\n\n  targetThursday.setDate(targetThursday.getDate() - (targetThursday.getDay() + 6) % 7 + 3); // Take January 4th as it is always in week 1 (see ISO 8601)\n\n  var firstThursday = new Date(targetThursday.getFullYear(), 0, 4); // Change date to Thursday same week\n\n  firstThursday.setDate(firstThursday.getDate() - (firstThursday.getDay() + 6) % 7 + 3); // Check if daylight-saving-time-switch occurred and correct for it\n\n  var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();\n  targetThursday.setHours(targetThursday.getHours() - ds); // Number of weeks between target Thursday and first Thursday\n\n  var weekDiff = (targetThursday - firstThursday) / (86400000 * 7);\n  return 1 + Math.floor(weekDiff);\n}\n/**\n * Get ISO-8601 numeric representation of the day of the week\n * 1 (for Monday) through 7 (for Sunday)\n *\n * @param  {Object} `date`\n * @return {Number}\n */\n\n\nfunction getDayOfWeek(date) {\n  var dow = date.getDay();\n\n  if (dow === 0) {\n    dow = 7;\n  }\n\n  return dow;\n}\n/**\n * kind-of shortcut\n * @param  {*} val\n * @return {String}\n */\n\n\nfunction kindOf(val) {\n  if (val === null) {\n    return 'null';\n  }\n\n  if (val === undefined) {\n    return 'undefined';\n  }\n\n  if (typeof val !== 'object') {\n    return typeof val;\n  }\n\n  if (Array.isArray(val)) {\n    return 'array';\n  }\n\n  return {}.toString.call(val).slice(8, -1).toLowerCase();\n}\n\nexport default dateFormat;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Utils/Date.js"],"names":["dateFormat","token","timezone","timezoneClip","date","mask","utc","gmt","arguments","length","kindOf","test","undefined","Date","isNaN","TypeError","String","masks","maskSlice","slice","_","d","D","m","y","H","M","s","L","o","getTimezoneOffset","W","getWeek","N","getDayOfWeek","flags","dd","pad","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","l","Math","round","t","timeNames","tt","T","TT","Z","match","pop","replace","floor","abs","S","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","expiresHeaderFormat","val","len","targetThursday","getFullYear","getMonth","getDate","setDate","getDay","firstThursday","ds","setHours","getHours","weekDiff","dow","Array","isArray","toString","call","toLowerCase"],"mappings":"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","sourcesContent":["/*\n * Date Format 1.2.3\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by Scott Trenda <scott.trenda.net>\n * and Kris Kowal <cixar.com/~kris.kowal/>\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to dateFormat.masks.default.\n */\n\nconst dateFormat = (function() {\n    const token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZWN]|\"[^\"]*\"|'[^']*'/g;\n    const timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\n    const timezoneClip = /[^-+\\dA-Z]/g;\n\n    // Regexes and supporting functions are cached through closure\n    return function(date, mask, utc, gmt) {\n        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)\n        if (arguments.length === 1 && kindOf(date) === 'string' && !/\\d/.test(date)) {\n            mask = date;\n            date = undefined;\n        }\n\n        date = date || new Date();\n\n        if (!(date instanceof Date)) {\n            date = new Date(date);\n        }\n\n        if (isNaN(date)) {\n            throw TypeError('Invalid date');\n        }\n\n        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);\n\n        // Allow setting the utc/gmt argument via the mask\n        var maskSlice = mask.slice(0, 4);\n        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {\n            mask = mask.slice(4);\n            utc = true;\n            if (maskSlice === 'GMT:') {\n                gmt = true;\n            }\n        }\n\n        var _ = utc ? 'getUTC' : 'get';\n        var d = date[_ + 'Date']();\n        var D = date[_ + 'Day']();\n        var m = date[_ + 'Month']();\n        var y = date[_ + 'FullYear']();\n        var H = date[_ + 'Hours']();\n        var M = date[_ + 'Minutes']();\n        var s = date[_ + 'Seconds']();\n        var L = date[_ + 'Milliseconds']();\n        var o = utc ? 0 : date.getTimezoneOffset();\n        var W = getWeek(date);\n        var N = getDayOfWeek(date);\n        var flags = {\n            d: d,\n            dd: pad(d),\n            ddd: dateFormat.i18n.dayNames[D],\n            dddd: dateFormat.i18n.dayNames[D + 7],\n            m: m + 1,\n            mm: pad(m + 1),\n            mmm: dateFormat.i18n.monthNames[m],\n            mmmm: dateFormat.i18n.monthNames[m + 12],\n            yy: String(y).slice(2),\n            yyyy: y,\n            h: H % 12 || 12,\n            hh: pad(H % 12 || 12),\n            H: H,\n            HH: pad(H),\n            M: M,\n            MM: pad(M),\n            s: s,\n            ss: pad(s),\n            l: pad(L, 3),\n            L: pad(Math.round(L / 10)),\n            t: H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],\n            tt: H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],\n            T: H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],\n            TT: H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],\n            Z: gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\n            o: (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + (Math.abs(o) % 60), 4),\n            S: ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (((d % 100) - (d % 10) != 10) * d) % 10],\n            W: W,\n            N: N\n        };\n\n        return mask.replace(token, function(match) {\n            if (match in flags) {\n                return flags[match];\n            }\n            return match.slice(1, match.length - 1);\n        });\n    };\n})();\n\ndateFormat.masks = {\n    default: 'ddd mmm dd yyyy HH:MM:ss',\n    shortDate: 'm/d/yy',\n    mediumDate: 'mmm d, yyyy',\n    longDate: 'mmmm d, yyyy',\n    fullDate: 'dddd, mmmm d, yyyy',\n    shortTime: 'h:MM TT',\n    mediumTime: 'h:MM:ss TT',\n    longTime: 'h:MM:ss TT Z',\n    isoDate: 'yyyy-mm-dd',\n    isoTime: 'HH:MM:ss',\n    isoDateTime: \"yyyy-mm-dd'T'HH:MM:sso\",\n    isoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\",\n    expiresHeaderFormat: 'ddd, dd mmm yyyy HH:MM:ss Z'\n};\n\n// Internationalization strings\ndateFormat.i18n = {\n    dayNames: [\n        'Sun',\n        'Mon',\n        'Tue',\n        'Wed',\n        'Thu',\n        'Fri',\n        'Sat',\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday'\n    ],\n    monthNames: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec',\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'\n    ],\n    timeNames: ['a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM']\n};\n\nfunction pad(val, len) {\n    val = String(val);\n    len = len || 2;\n    while (val.length < len) {\n        val = '0' + val;\n    }\n    return val;\n}\n\n/**\n * Get the ISO 8601 week number\n * Based on comments from\n * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getWeek(date) {\n    // Remove time components of date\n    var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\n    // Change date to Thursday same week\n    targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);\n\n    // Take January 4th as it is always in week 1 (see ISO 8601)\n    var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);\n\n    // Change date to Thursday same week\n    firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);\n\n    // Check if daylight-saving-time-switch occurred and correct for it\n    var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();\n    targetThursday.setHours(targetThursday.getHours() - ds);\n\n    // Number of weeks between target Thursday and first Thursday\n    var weekDiff = (targetThursday - firstThursday) / (86400000 * 7);\n    return 1 + Math.floor(weekDiff);\n}\n\n/**\n * Get ISO-8601 numeric representation of the day of the week\n * 1 (for Monday) through 7 (for Sunday)\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getDayOfWeek(date) {\n    var dow = date.getDay();\n    if (dow === 0) {\n        dow = 7;\n    }\n    return dow;\n}\n\n/**\n * kind-of shortcut\n * @param  {*} val\n * @return {String}\n */\nfunction kindOf(val) {\n    if (val === null) {\n        return 'null';\n    }\n\n    if (val === undefined) {\n        return 'undefined';\n    }\n\n    if (typeof val !== 'object') {\n        return typeof val;\n    }\n\n    if (Array.isArray(val)) {\n        return 'array';\n    }\n\n    return {}.toString\n        .call(val)\n        .slice(8, -1)\n        .toLowerCase();\n}\n\nexport default dateFormat;\n"]},"metadata":{},"sourceType":"module"}