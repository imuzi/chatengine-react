{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnMiddle/StickersPickerHeader.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport Animator from '../../Utils/Animatior';\nimport Sticker from './../Message/Media/Sticker';\nimport { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerStore from '../../Stores/StickerStore';\nimport './StickersPickerHeader.css';\n\nvar StickersPickerHeader =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StickersPickerHeader, _React$Component);\n\n  function StickersPickerHeader(props) {\n    var _this;\n\n    _classCallCheck(this, StickersPickerHeader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StickersPickerHeader).call(this, props));\n\n    _this.onClientUpdateStickerSetPosition = function (update) {\n      var position = update.position;\n\n      _this.setState({\n        position: position\n      });\n    };\n\n    _this.scrollToPosition = function () {\n      var position = _this.state.position;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          animator = _assertThisInitialize.animator,\n          anchorRef = _assertThisInitialize.anchorRef,\n          scrollRef = _assertThisInitialize.scrollRef;\n\n      var scroll = scrollRef.current;\n      var anchor = anchorRef.current;\n      var anchorNode = ReactDOM.findDOMNode(anchor);\n      var scrollFrom = scroll.scrollLeft;\n      var scrollTo = position * 44 - 147;\n      var anchorFrom = Number(anchorNode.style.left.replace('px', ''));\n      var anchorTo = position * 44;\n\n      if (animator) {\n        animator.stop();\n      }\n\n      _this.animator = new Animator(0, [{\n        from: scrollFrom,\n        to: scrollTo,\n        func: function func(left) {\n          return scroll.scrollLeft = left;\n        }\n      }, {\n        from: Math.abs(anchorTo - anchorFrom) > 338 ? anchorTo - Math.sign(anchorTo - anchorFrom) * 338 : anchorFrom,\n        to: anchorTo,\n        func: function func(left) {\n          return anchorNode.style.left = left + 'px';\n        }\n      }]);\n      setTimeout(function () {\n        if (!_this.animator) return;\n\n        _this.animator.start();\n      }, 0); // this.animator.start();\n    };\n\n    _this.handleWheel = function (event) {\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          scrollRef = _assertThisInitialize2.scrollRef;\n\n      if (event.deltaX === 0) {\n        var scroll = scrollRef.current;\n        scroll.scrollLeft += event.deltaY;\n      }\n    };\n\n    _this.handleSelect = function (sticker) {\n      var _this$props = _this.props,\n          stickers = _this$props.stickers,\n          onSelect = _this$props.onSelect;\n      onSelect(stickers.indexOf(sticker));\n    };\n\n    _this.scrollRef = React.createRef();\n    _this.anchorRef = React.createRef();\n    _this.state = {\n      position: 0\n    };\n    return _this;\n  }\n\n  _createClass(StickersPickerHeader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      StickerStore.on('clientUpdateStickerSetPosition', this.onClientUpdateStickerSetPosition);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      StickerStore.off('clientUpdateStickerSetPosition', this.onClientUpdateStickerSetPosition);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      if (prevState.position !== this.state.position) {\n        this.scrollToPosition();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var stickers = this.props.stickers;\n      var items = stickers.map(function (x) {\n        return React.createElement(Sticker, {\n          key: x.sticker.id,\n          className: \"stickers-picker-header-sticker\",\n          style: {\n            width: 32,\n            height: 32\n          },\n          sticker: x,\n          play: false,\n          autoplay: false,\n          blur: false,\n          displaySize: 32,\n          preview: true,\n          source: StickerSourceEnum.PICKER_HEADER,\n          openMedia: function openMedia() {\n            return _this2.handleSelect(x);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: \"stickers-picker-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        ref: this.scrollRef,\n        className: \"stickers-picker-header-scroll\",\n        onWheel: this.handleWheel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"stickers-picker-header-items\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, items), React.createElement(\"div\", {\n        ref: this.anchorRef,\n        className: \"stickers-picker-header-anchor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return StickersPickerHeader;\n}(React.Component);\n\nStickersPickerHeader.propTypes = {\n  stickers: PropTypes.array.isRequired,\n  onSelect: PropTypes.func.isRequired\n};\nexport default StickersPickerHeader;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnMiddle/StickersPickerHeader.js"],"names":["React","ReactDOM","PropTypes","Animator","Sticker","StickerSourceEnum","StickerStore","StickersPickerHeader","props","onClientUpdateStickerSetPosition","update","position","setState","scrollToPosition","state","animator","anchorRef","scrollRef","scroll","current","anchor","anchorNode","findDOMNode","scrollFrom","scrollLeft","scrollTo","anchorFrom","Number","style","left","replace","anchorTo","stop","from","to","func","Math","abs","sign","setTimeout","start","handleWheel","event","deltaX","deltaY","handleSelect","sticker","stickers","onSelect","indexOf","createRef","on","off","prevProps","prevState","snapshot","items","map","x","id","width","height","PICKER_HEADER","Component","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport Animator from '../../Utils/Animatior';\nimport Sticker from './../Message/Media/Sticker';\nimport { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerStore from '../../Stores/StickerStore';\nimport './StickersPickerHeader.css';\n\nclass StickersPickerHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.scrollRef = React.createRef();\n        this.anchorRef = React.createRef();\n\n        this.state = { position: 0 };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSetPosition', this.onClientUpdateStickerSetPosition);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSetPosition', this.onClientUpdateStickerSetPosition);\n    }\n\n    onClientUpdateStickerSetPosition = update => {\n        const { position } = update;\n\n        this.setState({ position });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.position !== this.state.position) {\n            this.scrollToPosition();\n        }\n    }\n\n    scrollToPosition = () => {\n        const { position } = this.state;\n        const { animator, anchorRef, scrollRef } = this;\n\n        const scroll = scrollRef.current;\n        const anchor = anchorRef.current;\n        const anchorNode = ReactDOM.findDOMNode(anchor);\n\n        const scrollFrom = scroll.scrollLeft;\n        const scrollTo = position * 44 - 147;\n\n        const anchorFrom = Number(anchorNode.style.left.replace('px', ''));\n        const anchorTo = position * 44;\n\n        if (animator) {\n            animator.stop();\n        }\n\n        this.animator = new Animator(0, [\n            {\n                from: scrollFrom,\n                to: scrollTo,\n                func: left => (scroll.scrollLeft = left)\n            },\n            {\n                from:\n                    Math.abs(anchorTo - anchorFrom) > 338\n                        ? anchorTo - Math.sign(anchorTo - anchorFrom) * 338\n                        : anchorFrom,\n                to: anchorTo,\n                func: left => (anchorNode.style.left = left + 'px')\n            }\n        ]);\n\n        setTimeout(() => {\n            if (!this.animator) return;\n\n            this.animator.start();\n        }, 0);\n        // this.animator.start();\n    };\n\n    handleWheel = event => {\n        const { scrollRef } = this;\n\n        if (event.deltaX === 0) {\n            const scroll = scrollRef.current;\n\n            scroll.scrollLeft += event.deltaY;\n        }\n    };\n\n    handleSelect = sticker => {\n        const { stickers, onSelect } = this.props;\n\n        onSelect(stickers.indexOf(sticker));\n    };\n\n    render() {\n        const { stickers } = this.props;\n\n        const items = stickers.map(x => (\n            <Sticker\n                key={x.sticker.id}\n                className='stickers-picker-header-sticker'\n                style={{ width: 32, height: 32 }}\n                sticker={x}\n                play={false}\n                autoplay={false}\n                blur={false}\n                displaySize={32}\n                preview\n                source={StickerSourceEnum.PICKER_HEADER}\n                openMedia={() => this.handleSelect(x)}\n            />\n        ));\n\n        return (\n            <div className='stickers-picker-header'>\n                <div ref={this.scrollRef} className='stickers-picker-header-scroll' onWheel={this.handleWheel}>\n                    <div className='stickers-picker-header-items'>{items}</div>\n                    <div ref={this.anchorRef} className='stickers-picker-header-anchor' />\n                </div>\n            </div>\n        );\n    }\n}\n\nStickersPickerHeader.propTypes = {\n    stickers: PropTypes.array.isRequired,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default StickersPickerHeader;\n"]},"metadata":{},"sourceType":"module"}