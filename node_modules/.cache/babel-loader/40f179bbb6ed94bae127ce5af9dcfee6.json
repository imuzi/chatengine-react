{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Viewer/ProfileMediaViewerContent.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nvar ProfileMediaViewerContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProfileMediaViewerContent, _React$Component);\n\n  function ProfileMediaViewerContent(props) {\n    var _this;\n\n    _classCallCheck(this, ProfileMediaViewerContent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProfileMediaViewerContent).call(this, props));\n\n    _this.onClientUpdateChatBlob = function (update) {\n      var _this$props = _this.props,\n          chatId = _this$props.chatId,\n          photo = _this$props.photo;\n\n      if (chatId === update.chatId && photo.big.id === update.fileId) {\n        var file = FileStore.get(update.fileId) || _this.state.file;\n\n        _this.setState({\n          file: file\n        });\n      }\n    };\n\n    _this.onClientUpdateUserBlob = function (update) {\n      var _this$props2 = _this.props,\n          chatId = _this$props2.chatId,\n          photo = _this$props2.photo;\n      var userId = getChatUserId(chatId);\n\n      if (userId === update.userId && photo.big.id === update.fileId) {\n        var file = FileStore.get(update.fileId) || _this.state.file;\n\n        _this.setState({\n          file: file\n        });\n      }\n    };\n\n    _this.handleContentClick = function (event) {\n      if (event) event.stopPropagation();\n\n      _this.props.onClick(event);\n    };\n\n    var _this$props3 = _this.props,\n        _chatId = _this$props3.chatId,\n        _photo = _this$props3.photo;\n    var _file = _photo.big;\n    _file = FileStore.get(_file.id) || _file;\n    _this.state = {\n      prevChatId: _chatId,\n      prevPhoto: _photo,\n      width: PROFILE_PHOTO_BIG_SIZE,\n      height: PROFILE_PHOTO_BIG_SIZE,\n      file: _file\n    };\n    return _this;\n  }\n\n  _createClass(ProfileMediaViewerContent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n      FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n      FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          width = _this$state.width,\n          height = _this$state.height,\n          file = _this$state.file;\n      if (!file) return null;\n      var blob = FileStore.getBlob(file.id) || file.blob;\n      var src = FileStore.getBlobUrl(blob);\n      return React.createElement(\"div\", {\n        className: \"media-viewer-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"media-viewer-content-image\",\n        src: src,\n        alt: \"\",\n        onClick: this.handleContentClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(FileProgress, {\n        file: file,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var chatId = props.chatId,\n          photo = props.photo;\n\n      if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n        return {\n          prevChatId: chatId,\n          prevPhoto: photo,\n          width: PROFILE_PHOTO_BIG_SIZE,\n          height: PROFILE_PHOTO_BIG_SIZE,\n          file: photo.big\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return ProfileMediaViewerContent;\n}(React.Component);\n\nProfileMediaViewerContent.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  photo: PropTypes.object.isRequired\n};\nexport default ProfileMediaViewerContent;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Viewer/ProfileMediaViewerContent.js"],"names":["React","PropTypes","FileProgress","getChatUserId","PROFILE_PHOTO_BIG_SIZE","FileStore","ProfileMediaViewerContent","props","onClientUpdateChatBlob","update","chatId","photo","big","id","fileId","file","get","state","setState","onClientUpdateUserBlob","userId","handleContentClick","event","stopPropagation","onClick","prevChatId","prevPhoto","width","height","on","off","blob","getBlob","src","getBlobUrl","Component","propTypes","number","isRequired","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n"]},"metadata":{},"sourceType":"module"}