{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Message/Message.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { getEmojiMatches, getText, getWebPage, openMedia, showMessageForward, isMetaBubble, canMessageBeForwarded, getMessageStyle } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage, openReply, replyMessage, forwardMessages } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nvar Message =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Message, _Component);\n\n  function Message(props) {\n    var _this;\n\n    _classCallCheck(this, Message);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Message).call(this, props));\n\n    _this.onClientUpdateClearSelection = function (update) {\n      if (!_this.state.selected) return;\n\n      _this.setState({\n        selected: false\n      });\n    };\n\n    _this.onClientUpdateMessageShake = function (update) {\n      var _this$props = _this.props,\n          chatId = _this$props.chatId,\n          messageId = _this$props.messageId;\n      var shook = _this.state.shook;\n\n      if (chatId === update.chatId && messageId === update.messageId) {\n        if (shook) {\n          _this.setState({\n            shook: false\n          }, function () {\n            setTimeout(function () {\n              _this.setState({\n                shook: true\n              });\n            }, 0);\n          });\n        } else {\n          _this.setState({\n            shook: true\n          });\n        }\n      }\n    };\n\n    _this.onClientUpdateMessageHighlighted = function (update) {\n      var _this$props2 = _this.props,\n          chatId = _this$props2.chatId,\n          messageId = _this$props2.messageId;\n      var _this$state = _this.state,\n          selected = _this$state.selected,\n          highlighted = _this$state.highlighted;\n      if (selected) return;\n\n      if (chatId === update.chatId && messageId === update.messageId) {\n        if (highlighted) {\n          _this.setState({\n            highlighted: false\n          }, function () {\n            setTimeout(function () {\n              _this.setState({\n                highlighted: true\n              });\n            }, 0);\n          });\n        } else {\n          _this.setState({\n            highlighted: true\n          });\n        }\n      } else if (highlighted) {\n        _this.setState({\n          highlighted: false\n        });\n      }\n    };\n\n    _this.onClientUpdateMessageSelected = function (update) {\n      var _this$props3 = _this.props,\n          chatId = _this$props3.chatId,\n          messageId = _this$props3.messageId;\n      var selected = update.selected;\n\n      if (chatId === update.chatId && messageId === update.messageId) {\n        _this.setState({\n          selected: selected,\n          highlighted: false\n        });\n      }\n    };\n\n    _this.onUpdateMessageEdited = function (update) {\n      var chat_id = update.chat_id,\n          message_id = update.message_id;\n      var _this$props4 = _this.props,\n          chatId = _this$props4.chatId,\n          messageId = _this$props4.messageId;\n\n      if (chatId === chat_id && messageId === message_id) {\n        _this.forceUpdate();\n      }\n    };\n\n    _this.onUpdateMessageViews = function (update) {\n      var chat_id = update.chat_id,\n          message_id = update.message_id;\n      var _this$props5 = _this.props,\n          chatId = _this$props5.chatId,\n          messageId = _this$props5.messageId;\n\n      if (chatId === chat_id && messageId === message_id) {\n        _this.forceUpdate();\n      }\n    };\n\n    _this.onUpdateMessageContent = function (update) {\n      var chat_id = update.chat_id,\n          message_id = update.message_id;\n      var _this$props6 = _this.props,\n          chatId = _this$props6.chatId,\n          messageId = _this$props6.messageId;\n      var emojiMatches = _this.state.emojiMatches;\n      if (chatId !== chat_id) return;\n      if (messageId !== message_id) return;\n      var newEmojiMatches = getEmojiMatches(chatId, messageId);\n\n      if (newEmojiMatches !== emojiMatches) {\n        _this.setState({\n          emojiMatches: getEmojiMatches(chatId, messageId)\n        });\n      } else {\n        _this.forceUpdate();\n      }\n    };\n\n    _this.handleSelectUser = function (userId) {\n      openUser(userId, true);\n    };\n\n    _this.handleSelectChat = function (chatId) {\n      openChat(chatId, null, true);\n    };\n\n    _this.handleSelection = function () {\n      if (!_this.mouseDown) return;\n      var selection = window.getSelection().toString();\n      if (selection) return;\n      var _this$props7 = _this.props,\n          chatId = _this$props7.chatId,\n          messageId = _this$props7.messageId;\n      var selected = !MessageStore.selectedItems.has(\"chatId=\".concat(chatId, \"_messageId=\").concat(messageId));\n      selectMessage(chatId, messageId, selected);\n    };\n\n    _this.handleDateClick = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var _this$props8 = _this.props,\n          chatId = _this$props8.chatId,\n          messageId = _this$props8.messageId;\n      var canBeReplied = canSendMessages(chatId);\n\n      if (canBeReplied) {\n        replyMessage(chatId, messageId);\n        return;\n      }\n\n      var canBeForwarded = canMessageBeForwarded(chatId, messageId);\n\n      if (canBeForwarded) {\n        forwardMessages(chatId, [messageId]);\n      }\n    };\n\n    _this.openMedia = function (event) {\n      if (event) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      var _this$props9 = _this.props,\n          chatId = _this$props9.chatId,\n          messageId = _this$props9.messageId;\n      openMedia(chatId, messageId);\n    };\n\n    _this.handleAnimationEnd = function () {\n      _this.setState({\n        highlighted: false\n      });\n    };\n\n    _this.handleMouseDown = function () {\n      _this.mouseDown = true;\n    };\n\n    _this.handleMouseOver = function () {\n      _this.mouseDown = false;\n    };\n\n    _this.handleMouseOut = function () {\n      _this.mouseOut = false;\n    };\n\n    _this.handleReplyClick = function () {\n      var _this$props10 = _this.props,\n          chatId = _this$props10.chatId,\n          messageId = _this$props10.messageId;\n      openReply(chatId, messageId);\n    };\n\n    _this.handleOpenContextMenu =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var contextMenu, left, top, canCopyLink;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (event) {\n                  event.preventDefault();\n                  event.stopPropagation();\n                }\n\n                contextMenu = _this.state.contextMenu;\n\n                if (!contextMenu) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _this.setState({\n                  contextMenu: false\n                });\n\n                _context.next = 12;\n                break;\n\n              case 6:\n                if (!(MessageStore.selectedItems.size > 1)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 8:\n                left = event.clientX;\n                top = event.clientY;\n                canCopyLink = event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n                _this.setState({\n                  contextMenu: true,\n                  canCopyLink: canCopyLink,\n                  left: left,\n                  top: top\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleCloseContextMenu = function (event) {\n      if (event) {\n        event.stopPropagation();\n      }\n\n      _this.setState({\n        contextMenu: false\n      });\n    };\n\n    var _this$props11 = _this.props,\n        _chatId = _this$props11.chatId,\n        _messageId = _this$props11.messageId;\n    _this.state = {\n      message: MessageStore.get(_chatId, _messageId),\n      emojiMatches: getEmojiMatches(_chatId, _messageId),\n      selected: false,\n      highlighted: false,\n      shook: false,\n      contextMenu: false,\n      canCopyLink: false,\n      left: 0,\n      top: 0\n    };\n    return _this;\n  }\n\n  _createClass(Message, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      var _this$props12 = this.props,\n          chatId = _this$props12.chatId,\n          messageId = _this$props12.messageId,\n          sendingState = _this$props12.sendingState,\n          showUnreadSeparator = _this$props12.showUnreadSeparator,\n          showTail = _this$props12.showTail,\n          showTitle = _this$props12.showTitle;\n      var _this$state2 = this.state,\n          contextMenu = _this$state2.contextMenu,\n          selected = _this$state2.selected,\n          highlighted = _this$state2.highlighted,\n          shook = _this$state2.shook,\n          emojiMatches = _this$state2.emojiMatches;\n\n      if (nextProps.chatId !== chatId) {\n        // console.log('Message.shouldComponentUpdate true chatId');\n        return true;\n      }\n\n      if (nextProps.messageId !== messageId) {\n        // console.log('Message.shouldComponentUpdate true messageId');\n        return true;\n      }\n\n      if (nextProps.sendingState !== sendingState) {\n        // console.log('Message.shouldComponentUpdate true sendingState');\n        return true;\n      }\n\n      if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n        // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n        return true;\n      }\n\n      if (nextProps.showTail !== showTail) {\n        // console.log('Message.shouldComponentUpdate true showTail');\n        return true;\n      }\n\n      if (nextProps.showTitle !== showTitle) {\n        // console.log('Message.shouldComponentUpdate true showTitle');\n        return true;\n      }\n\n      if (nextState.contextMenu !== contextMenu) {\n        // console.log('Message.shouldComponentUpdate true contextMenu');\n        return true;\n      }\n\n      if (nextState.selected !== selected) {\n        // console.log('Message.shouldComponentUpdate true selected');\n        return true;\n      }\n\n      if (nextState.highlighted !== highlighted) {\n        // console.log('Message.shouldComponentUpdate true highlighted');\n        return true;\n      }\n\n      if (nextState.shook !== shook) {\n        // console.log('Message.shouldComponentUpdate true shook');\n        return true;\n      }\n\n      if (nextState.emojiMatches !== emojiMatches) {\n        // console.log('Message.shouldComponentUpdate true emojiMatches');\n        return true;\n      } // console.log('Message.shouldComponentUpdate false');\n\n\n      return false;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n      MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n      MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n      MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n      MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n      MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n      MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n      MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n      MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n      MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n      MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n      MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n      MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props13 = this.props,\n          t = _this$props13.t,\n          chatId = _this$props13.chatId,\n          messageId = _this$props13.messageId,\n          showUnreadSeparator = _this$props13.showUnreadSeparator,\n          showTail = _this$props13.showTail,\n          showTitle = _this$props13.showTitle,\n          showDate = _this$props13.showDate;\n      var _this$state3 = this.state,\n          emojiMatches = _this$state3.emojiMatches,\n          selected = _this$state3.selected,\n          highlighted = _this$state3.highlighted,\n          shook = _this$state3.shook,\n          canCopyLink = _this$state3.canCopyLink,\n          contextMenu = _this$state3.contextMenu,\n          left = _this$state3.left,\n          top = _this$state3.top; // console.log('Message.render', messageId);\n\n      var message = MessageStore.get(chatId, messageId);\n      if (!message) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, \"[empty message]\");\n      var is_outgoing = message.is_outgoing,\n          views = message.views,\n          date = message.date,\n          edit_date = message.edit_date,\n          reply_to_message_id = message.reply_to_message_id,\n          forward_info = message.forward_info,\n          sender_user_id = message.sender_user_id;\n      var isOutgoing = is_outgoing && !isChannelChat(chatId);\n      var inlineMeta = React.createElement(Meta, {\n        className: \"meta-hidden\",\n        key: \"\".concat(chatId, \"_\").concat(messageId, \"_meta\"),\n        chatId: chatId,\n        messageId: messageId,\n        date: date,\n        editDate: edit_date,\n        views: views,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      });\n      var text = getText(message, inlineMeta, t);\n      var hasCaption = text !== null && text.length > 0;\n      var showForward = showMessageForward(chatId, messageId);\n      var showReply = Boolean(reply_to_message_id);\n      var suppressTitle = isPrivateChat(chatId);\n      var hasTitle = !suppressTitle && showTitle || showForward || showReply;\n      var webPage = getWebPage(message);\n      var media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\n      var tile = null;\n\n      if (showTail) {\n        tile = sender_user_id ? React.createElement(UserTile, {\n          small: true,\n          userId: sender_user_id,\n          onSelect: this.handleSelectUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 387\n          },\n          __self: this\n        }) : React.createElement(ChatTile, {\n          small: true,\n          chatId: chatId,\n          onSelect: this.handleSelectChat,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389\n          },\n          __self: this\n        });\n      }\n\n      var style = getMessageStyle(chatId, messageId);\n      var withBubble = message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, showDate && React.createElement(DayMeta, {\n        date: date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classNames('message', {\n          'message-short': !tile,\n          'message-out': isOutgoing,\n          'message-selected': selected,\n          'message-highlighted': highlighted && !selected,\n          'message-top': showTitle && !showTail,\n          'message-bottom': !showTitle && showTail,\n          'message-middle': !showTitle && !showTail,\n          'message-bubble-hidden': !withBubble\n        }),\n        onMouseOver: this.handleMouseOver,\n        onMouseOut: this.handleMouseOut,\n        onMouseDown: this.handleMouseDown,\n        onClick: this.handleSelection,\n        onAnimationEnd: this.handleAnimationEnd,\n        onContextMenu: this.handleOpenContextMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, showUnreadSeparator && React.createElement(UnreadSeparator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"message-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"message-padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, React.createElement(CheckMarkIcon, {\n        className: \"message-select-tick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: classNames('message-wrapper', {\n          'message-wrapper-shook': shook\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, tile, React.createElement(\"div\", {\n        className: classNames('message-content', {\n          'message-bubble': withBubble,\n          'message-bubble-out': withBubble && isOutgoing\n        }),\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, withBubble && (showTitle && !suppressTitle || showForward) && React.createElement(\"div\", {\n        className: \"message-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }, showTitle && !showForward && React.createElement(MessageAuthor, {\n        chatId: chatId,\n        openChat: true,\n        userId: sender_user_id,\n        openUser: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }), showForward && React.createElement(Forward, {\n        forwardInfo: forward_info,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      })), showReply && React.createElement(Reply, {\n        chatId: chatId,\n        messageId: reply_to_message_id,\n        onClick: this.handleReplyClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }), media, React.createElement(\"div\", {\n        className: classNames('message-text', {\n          'message-text-1emoji': emojiMatches === 1,\n          'message-text-2emoji': emojiMatches === 2,\n          'message-text-3emoji': emojiMatches === 3\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, text), webPage && React.createElement(WebPage, {\n        chatId: chatId,\n        messageId: messageId,\n        openMedia: this.openMedia,\n        meta: inlineMeta,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }), withBubble && React.createElement(Meta, {\n        className: classNames('meta-text', {\n          'meta-bubble': isMetaBubble(chatId, messageId)\n        }),\n        chatId: chatId,\n        messageId: messageId,\n        date: date,\n        editDate: edit_date,\n        views: views,\n        onDateClick: this.handleDateClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"message-tile-padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"message-padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }))), React.createElement(MessageMenu, {\n        chatId: chatId,\n        messageId: messageId,\n        anchorPosition: {\n          top: top,\n          left: left\n        },\n        open: contextMenu,\n        onClose: this.handleCloseContextMenu,\n        canCopyLink: canCopyLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Message;\n}(Component);\n\nvar enhance = compose(withSaveRef(), withTranslation(), withRestoreRef());\nexport default enhance(Message);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Message/Message.js"],"names":["React","Component","classNames","compose","withTranslation","CheckMarkIcon","DayMeta","Reply","Forward","Meta","MessageAuthor","MessageMenu","UserTile","ChatTile","UnreadSeparator","WebPage","getEmojiMatches","getText","getWebPage","openMedia","showMessageForward","isMetaBubble","canMessageBeForwarded","getMessageStyle","getMedia","canSendMessages","isChannelChat","isPrivateChat","openUser","openChat","selectMessage","openReply","replyMessage","forwardMessages","withRestoreRef","withSaveRef","MessageStore","TdLibController","Message","props","onClientUpdateClearSelection","update","state","selected","setState","onClientUpdateMessageShake","chatId","messageId","shook","setTimeout","onClientUpdateMessageHighlighted","highlighted","onClientUpdateMessageSelected","onUpdateMessageEdited","chat_id","message_id","forceUpdate","onUpdateMessageViews","onUpdateMessageContent","emojiMatches","newEmojiMatches","handleSelectUser","userId","handleSelectChat","handleSelection","mouseDown","selection","window","getSelection","toString","selectedItems","has","handleDateClick","e","preventDefault","stopPropagation","canBeReplied","canBeForwarded","event","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","handleOpenContextMenu","contextMenu","size","left","clientX","top","clientY","canCopyLink","target","tagName","href","handleCloseContextMenu","message","get","nextProps","nextState","sendingState","showUnreadSeparator","showTail","showTitle","on","off","t","showDate","is_outgoing","views","date","edit_date","reply_to_message_id","forward_info","sender_user_id","isOutgoing","inlineMeta","text","hasCaption","length","showForward","showReply","Boolean","suppressTitle","hasTitle","webPage","media","tile","style","withBubble","content","enhance"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply, replyMessage, forwardMessages\n} from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            canCopyLink: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const canCopyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                canCopyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { t, chatId, messageId, showUnreadSeparator, showTail, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            canCopyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const text = getText(message, inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\n\n        let tile = null;\n        if (showTail) {\n            tile = sender_user_id ? (\n                <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble =\n            message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-top': showTitle && !showTail,\n                        'message-bottom': !showTitle && showTail,\n                        'message-middle': !showTitle && !showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'message-wrapper-shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && (\n                                    <Meta\n                                        className={classNames('meta-text', {\n                                            'meta-bubble': isMetaBubble(chatId, messageId)\n                                        })}\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        date={date}\n                                        editDate={edit_date}\n                                        views={views}\n                                        onDateClick={this.handleDateClick}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    canCopyLink={canCopyLink}\n                />\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Message);\n"]},"metadata":{},"sourceType":"module"}