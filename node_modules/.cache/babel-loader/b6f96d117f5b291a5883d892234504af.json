{"ast":null,"code":"/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport dateFormat from '../Utils/Date';\nimport { getFirstLetter, getLetters, getSize } from './Common';\nimport { PROFILE_PHOTO_BIG_SIZE, PROFILE_PHOTO_SMALL_SIZE, SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport UserStore from '../Stores/UserStore';\n\nfunction getUserStatus(user) {\n  if (!user) return null;\n  if (!user.status) return null;\n\n  if (user.id === SERVICE_NOTIFICATIONS_USER_ID) {\n    return 'service notifications';\n  }\n\n  if (user.type && user.type['@type'] === 'userTypeBot') {\n    return 'bot';\n  }\n\n  switch (user.status['@type']) {\n    case 'userStatusEmpty':\n      {\n        return 'last seen a long time ago';\n      }\n\n    case 'userStatusLastMonth':\n      {\n        return 'last seen within a month';\n      }\n\n    case 'userStatusLastWeek':\n      {\n        return 'last seen within a week';\n      }\n\n    case 'userStatusOffline':\n      {\n        var was_online = user.status.was_online;\n        if (!was_online) return 'offline';\n        var now = new Date();\n        var wasOnline = new Date(was_online * 1000);\n\n        if (wasOnline > now) {\n          return 'last seen just now';\n        }\n\n        var diff = new Date(now - wasOnline); // within a minute\n\n        if (diff.getTime() / 1000 < 60) {\n          return 'last seen just now';\n        } // within an hour\n\n\n        if (diff.getTime() / 1000 < 60 * 60) {\n          var minutes = Math.floor(diff.getTime() / 1000 / 60);\n          return \"last seen \".concat(minutes === 1 ? '1 minute' : minutes + ' minutes', \" ago\");\n        } // today\n\n\n        var today = new Date();\n        today.setHours(0, 0, 0, 0);\n\n        if (wasOnline > today) {\n          // up to 6 hours ago\n          if (diff.getTime() / 1000 < 6 * 60 * 60) {\n            var hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\n            return \"last seen \".concat(hours === 1 ? '1 hour' : hours + ' hours', \" ago\");\n          } // other\n\n\n          return \"last seen today at \".concat(dateFormat(wasOnline, 'H:MM'));\n        } // yesterday\n\n\n        var yesterday = new Date();\n        yesterday.setDate(now.getDate() - 1);\n        today.setHours(0, 0, 0, 0);\n\n        if (wasOnline > yesterday) {\n          return \"last seen yesterday at \".concat(dateFormat(wasOnline, 'H:MM'));\n        }\n\n        return \"last seen \".concat(dateFormat(wasOnline, 'dd.mm.yyyy'));\n      }\n\n    case 'userStatusOnline':\n      {\n        return 'online';\n      }\n\n    case 'userStatusRecently':\n      {\n        return 'last seen recently';\n      }\n  }\n\n  return null;\n}\n\nfunction isUserOnline(user) {\n  if (!user) return false;\n  var id = user.id,\n      status = user.status,\n      type = user.type;\n  if (!status) return false;\n  if (!type) return false;\n  if (id === SERVICE_NOTIFICATIONS_USER_ID) return false;\n  return status['@type'] === 'userStatusOnline' && type['@type'] !== 'userTypeBot';\n}\n\nfunction getUserFullName(userId, user) {\n  var t = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (k) {\n    return k;\n  };\n  user = UserStore.get(userId) || user;\n  if (!user) return null;\n  var _user = user,\n      type = _user.type,\n      first_name = _user.first_name,\n      last_name = _user.last_name;\n  if (!type) return null;\n\n  switch (type['@type']) {\n    case 'userTypeBot':\n    case 'userTypeRegular':\n      {\n        if (first_name && last_name) return \"\".concat(first_name, \" \").concat(last_name);\n        if (first_name) return first_name;\n        if (last_name) return last_name;\n      }\n\n    case 'userTypeDeleted':\n    case 'userTypeUnknown':\n      {\n        return t('HiddenName');\n      }\n  }\n\n  return null;\n}\n\nfunction getUserShortName(userId) {\n  var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (k) {\n    return k;\n  };\n  var user = UserStore.get(userId);\n  if (!user) return null;\n  var type = user.type,\n      first_name = user.first_name,\n      last_name = user.last_name;\n  if (!type) return null;\n\n  switch (type['@type']) {\n    case 'userTypeBot':\n    case 'userTypeRegular':\n      {\n        if (first_name) return first_name;\n        if (last_name) return last_name;\n      }\n\n    case 'userTypeDeleted':\n    case 'userTypeUnknown':\n      {\n        return t('HiddenName');\n      }\n  }\n\n  return null;\n}\n\nfunction isUserBlocked(userId) {\n  var fullInfo = UserStore.getFullInfo(userId);\n\n  if (fullInfo) {\n    return fullInfo.is_blocked;\n  }\n\n  return false;\n}\n\nfunction getUserLetters(userId, firstName, lastName, t) {\n  var user = UserStore.get(userId);\n  if (!user && !(firstName || lastName)) return null;\n  var title = getUserFullName(userId, null, t) || \"\".concat(firstName, \" \").concat(lastName).trim();\n  var letters = getLetters(title);\n\n  if (letters && letters.length > 0) {\n    return letters;\n  }\n\n  if (user) {\n    firstName = user.first_name;\n    lastName = user.last_name;\n  }\n\n  var firstNameSymbol = getFirstLetter(firstName) || firstName.charAt(0);\n  if (firstNameSymbol) return firstNameSymbol;\n  var lastNameSymbol = getFirstLetter(lastName) || lastName.charAt(0);\n  if (lastNameSymbol) return lastNameSymbol;\n  return '';\n}\n\nfunction getUserStatusOrder(user) {\n  if (!user) return 0;\n  if (!user.status) return 0;\n  if (user.type['@type'] === 'userTypeBot') return 0;\n\n  switch (user.status['@type']) {\n    case 'userStatusEmpty':\n      {\n        return 1;\n      }\n\n    case 'userStatusLastMonth':\n      {\n        return 10;\n      }\n\n    case 'userStatusLastWeek':\n      {\n        return 100;\n      }\n\n    case 'userStatusOffline':\n      {\n        return user.status.was_online;\n      }\n\n    case 'userStatusOnline':\n      {\n        return user.status.expires;\n      }\n\n    case 'userStatusRecently':\n      {\n        return 1000;\n      }\n  }\n}\n\nfunction getProfilePhoto(photo) {\n  if (!photo) return null;\n  var id = photo.id,\n      sizes = photo.sizes;\n  if (!sizes) return null;\n  if (!sizes.length) return null;\n\n  var _getSize = getSize(sizes, PROFILE_PHOTO_SMALL_SIZE),\n      small = _getSize.photo;\n\n  var _getSize2 = getSize(sizes, PROFILE_PHOTO_BIG_SIZE),\n      big = _getSize2.photo;\n\n  return {\n    '@type': 'profilePhoto',\n    id: id,\n    small: small,\n    big: big\n  };\n}\n\nfunction getProfilePhotoDateHint(userProfilePhoto) {\n  if (!userProfilePhoto) return null;\n  var added_date = userProfilePhoto.added_date;\n  if (!added_date) return null;\n  var date = new Date(added_date * 1000);\n  return dateFormat(date, 'H:MM:ss d.mm.yyyy');\n}\n\nexport function isDeletedUser(userId) {\n  var user = UserStore.get(userId);\n  return user && user.type['@type'] === 'userTypeDeleted';\n}\nexport { getUserStatus, isUserOnline, getUserFullName, isUserBlocked, getUserLetters, getUserStatusOrder, getProfilePhoto, getProfilePhotoDateHint, getUserShortName };","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Utils/User.js"],"names":["dateFormat","getFirstLetter","getLetters","getSize","PROFILE_PHOTO_BIG_SIZE","PROFILE_PHOTO_SMALL_SIZE","SERVICE_NOTIFICATIONS_USER_ID","UserStore","getUserStatus","user","status","id","type","was_online","now","Date","wasOnline","diff","getTime","minutes","Math","floor","today","setHours","hours","yesterday","setDate","getDate","isUserOnline","getUserFullName","userId","t","k","get","first_name","last_name","getUserShortName","isUserBlocked","fullInfo","getFullInfo","is_blocked","getUserLetters","firstName","lastName","title","trim","letters","length","firstNameSymbol","charAt","lastNameSymbol","getUserStatusOrder","expires","getProfilePhoto","photo","sizes","small","big","getProfilePhotoDateHint","userProfilePhoto","added_date","date","isDeletedUser"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport dateFormat from '../Utils/Date';\nimport { getFirstLetter, getLetters, getSize } from './Common';\nimport { PROFILE_PHOTO_BIG_SIZE, PROFILE_PHOTO_SMALL_SIZE, SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport UserStore from '../Stores/UserStore';\n\nfunction getUserStatus(user) {\n    if (!user) return null;\n    if (!user.status) return null;\n\n    if (user.id === SERVICE_NOTIFICATIONS_USER_ID) {\n        return 'service notifications';\n    }\n\n    if (user.type && user.type['@type'] === 'userTypeBot') {\n        return 'bot';\n    }\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 'last seen a long time ago';\n        }\n        case 'userStatusLastMonth': {\n            return 'last seen within a month';\n        }\n        case 'userStatusLastWeek': {\n            return 'last seen within a week';\n        }\n        case 'userStatusOffline': {\n            let { was_online } = user.status;\n            if (!was_online) return 'offline';\n\n            const now = new Date();\n            const wasOnline = new Date(was_online * 1000);\n            if (wasOnline > now) {\n                return 'last seen just now';\n            }\n\n            let diff = new Date(now - wasOnline);\n\n            // within a minute\n            if (diff.getTime() / 1000 < 60) {\n                return 'last seen just now';\n            }\n\n            // within an hour\n            if (diff.getTime() / 1000 < 60 * 60) {\n                const minutes = Math.floor(diff.getTime() / 1000 / 60);\n                return `last seen ${minutes === 1 ? '1 minute' : minutes + ' minutes'} ago`;\n            }\n\n            // today\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > today) {\n                // up to 6 hours ago\n                if (diff.getTime() / 1000 < 6 * 60 * 60) {\n                    const hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\n                    return `last seen ${hours === 1 ? '1 hour' : hours + ' hours'} ago`;\n                }\n\n                // other\n                return `last seen today at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            // yesterday\n            let yesterday = new Date();\n            yesterday.setDate(now.getDate() - 1);\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > yesterday) {\n                return `last seen yesterday at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            return `last seen ${dateFormat(wasOnline, 'dd.mm.yyyy')}`;\n        }\n        case 'userStatusOnline': {\n            return 'online';\n        }\n        case 'userStatusRecently': {\n            return 'last seen recently';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserOnline(user) {\n    if (!user) return false;\n\n    const { id, status, type } = user;\n    if (!status) return false;\n    if (!type) return false;\n    if (id === SERVICE_NOTIFICATIONS_USER_ID) return false;\n\n    return status['@type'] === 'userStatusOnline' && type['@type'] !== 'userTypeBot';\n}\n\nfunction getUserFullName(userId, user, t = k => k) {\n    user = UserStore.get(userId) || user;\n    if (!user) return null;\n\n    const { type, first_name, last_name } = user;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (first_name && last_name) return `${first_name} ${last_name}`;\n            if (first_name) return first_name;\n            if (last_name) return last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return t('HiddenName');\n        }\n    }\n\n    return null;\n}\n\nfunction getUserShortName(userId, t = k => k) {\n    const user = UserStore.get(userId);\n    if (!user) return null;\n\n    const { type, first_name, last_name } = user;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (first_name) return first_name;\n            if (last_name) return last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return t('HiddenName');\n        }\n    }\n\n    return null;\n}\n\nfunction isUserBlocked(userId) {\n    const fullInfo = UserStore.getFullInfo(userId);\n    if (fullInfo) {\n        return fullInfo.is_blocked;\n    }\n\n    return false;\n}\n\nfunction getUserLetters(userId, firstName, lastName, t) {\n    const user = UserStore.get(userId);\n    if (!user && !(firstName || lastName)) return null;\n\n    const title = getUserFullName(userId, null, t) || `${firstName} ${lastName}`.trim();\n    const letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    if (user) {\n        firstName = user.first_name;\n        lastName = user.last_name;\n    }\n\n    const firstNameSymbol = getFirstLetter(firstName) || firstName.charAt(0);\n    if (firstNameSymbol) return firstNameSymbol;\n\n    const lastNameSymbol = getFirstLetter(lastName) || lastName.charAt(0);\n    if (lastNameSymbol) return lastNameSymbol;\n\n    return '';\n}\n\nfunction getUserStatusOrder(user) {\n    if (!user) return 0;\n    if (!user.status) return 0;\n    if (user.type['@type'] === 'userTypeBot') return 0;\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 1;\n        }\n        case 'userStatusLastMonth': {\n            return 10;\n        }\n        case 'userStatusLastWeek': {\n            return 100;\n        }\n        case 'userStatusOffline': {\n            return user.status.was_online;\n        }\n        case 'userStatusOnline': {\n            return user.status.expires;\n        }\n        case 'userStatusRecently': {\n            return 1000;\n        }\n    }\n}\n\nfunction getProfilePhoto(photo) {\n    if (!photo) return null;\n\n    const { id, sizes } = photo;\n    if (!sizes) return null;\n    if (!sizes.length) return null;\n\n    const { photo: small } = getSize(sizes, PROFILE_PHOTO_SMALL_SIZE);\n    const { photo: big } = getSize(sizes, PROFILE_PHOTO_BIG_SIZE);\n\n    return {\n        '@type': 'profilePhoto',\n        id,\n        small,\n        big\n    };\n}\n\nfunction getProfilePhotoDateHint(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { added_date } = userProfilePhoto;\n    if (!added_date) return null;\n\n    const date = new Date(added_date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy');\n}\n\nexport function isDeletedUser(userId) {\n    const user = UserStore.get(userId);\n\n    return user && user.type['@type'] === 'userTypeDeleted';\n}\n\nexport {\n    getUserStatus,\n    isUserOnline,\n    getUserFullName,\n    isUserBlocked,\n    getUserLetters,\n    getUserStatusOrder,\n    getProfilePhoto,\n    getProfilePhotoDateHint,\n    getUserShortName\n};\n"]},"metadata":{},"sourceType":"module"}