{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Tile/DialogStatus.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nvar DialogStatus =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DialogStatus, _React$Component);\n\n  function DialogStatus(props) {\n    var _this;\n\n    _classCallCheck(this, DialogStatus);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DialogStatus).call(this, props));\n\n    _this.onUpdateUserStatus = function (update) {\n      var chatId = _this.props.chatId;\n      var chat = ChatStore.get(chatId);\n      if (!chat) return;\n      if (!chat.type) return;\n      var updateSubtitle = false;\n\n      switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n          {\n            var fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n\n            if (fullInfo && fullInfo.members) {\n              var member = fullInfo.members.find(function (x) {\n                return x.user_id === update.user_id;\n              });\n\n              if (member) {\n                updateSubtitle = true;\n              }\n            }\n\n            break;\n          }\n\n        case 'chatTypePrivate':\n          {\n            if (chat.type.user_id === update.user_id) {\n              updateSubtitle = true;\n            }\n\n            break;\n          }\n\n        case 'chatTypeSecret':\n          {\n            if (chat.type.user_id === update.user_id) {\n              updateSubtitle = true;\n            }\n\n            break;\n          }\n\n        case 'chatTypeSupergroup':\n          {\n            break;\n          }\n      }\n\n      if (updateSubtitle) {\n        _this.updateSubtitle(chatId);\n      }\n    };\n\n    _this.updateSubtitle = function (chatId) {\n      _this.setState({\n        subtitle: getChatSubtitleWithoutTyping(chatId),\n        isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n      });\n    };\n\n    _this.onUpdateUserFullInfo = function (update) {\n      var chatId = _this.props.chatId;\n      var chat = ChatStore.get(chatId);\n      if (!chat) return;\n      var type = chat.type;\n      if (!type) return;\n\n      if (type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') && type.user_id === update.user_id) {\n        _this.updateSubtitle(chatId);\n      }\n    };\n\n    _this.onUpdateBasicGroupFullInfo = function (update) {\n      var chatId = _this.props.chatId;\n      var chat = ChatStore.get(chatId);\n      if (!chat) return;\n      var type = chat.type;\n      if (!type) return;\n\n      if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n        _this.updateSubtitle(chatId);\n      }\n    };\n\n    _this.onUpdateSupergroupFullInfo = function (update) {\n      var chatId = _this.props.chatId;\n      var chat = ChatStore.get(chatId);\n      if (!chat) return;\n      var type = chat.type;\n      if (!type) return;\n\n      if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n        _this.updateSubtitle(chatId);\n      }\n    };\n\n    _this.onUpdateBasicGroup = function (update) {\n      var chatId = _this.props.chatId;\n      var chat = ChatStore.get(chatId);\n      if (!chat) return;\n      var type = chat.type;\n      if (!type) return;\n\n      if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n        _this.updateSubtitle(chatId);\n      }\n    };\n\n    _this.onUpdateSupergroup = function (update) {\n      var chatId = _this.props.chatId;\n      var chat = ChatStore.get(chatId);\n      if (!chat) return;\n      var type = chat.type;\n      if (!type) return;\n\n      if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n        _this.updateSubtitle(chatId);\n      }\n    };\n\n    var _chatId = _this.props.chatId;\n    _this.state = {\n      prevChatId: _chatId,\n      subtitle: getChatSubtitleWithoutTyping(_chatId),\n      isAccent: isAccentChatSubtitleWithoutTyping(_chatId)\n    };\n    return _this;\n  }\n\n  _createClass(DialogStatus, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      var chatId = this.props.chatId;\n      var _this$state = this.state,\n          subtitle = _this$state.subtitle,\n          isAccent = _this$state.isAccent;\n\n      if (nextProps.chatId !== chatId) {\n        return true;\n      }\n\n      if (nextState.subtitle !== subtitle) {\n        return true;\n      }\n\n      if (nextState.isAccent !== isAccent) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n      BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n      SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n      UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n      BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n      SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n      BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n      SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n      UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n      BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n      SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var externalSubtitle = this.props.subtitle;\n      var _this$state2 = this.state,\n          subtitle = _this$state2.subtitle,\n          isAccent = _this$state2.isAccent;\n      return React.createElement(\"div\", {\n        className: classNames('dialog-status', {\n          'dialog-status-accent': isAccent\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, externalSubtitle ? externalSubtitle + ', ' : null, subtitle);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if (props.chatId !== state.prevChatId) {\n        var chatId = props.chatId;\n        return {\n          prevChatId: chatId,\n          subtitle: getChatSubtitleWithoutTyping(chatId),\n          isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return DialogStatus;\n}(React.Component);\n\nexport default DialogStatus;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Tile/DialogStatus.js"],"names":["React","classNames","getChatSubtitleWithoutTyping","isAccentChatSubtitleWithoutTyping","ChatStore","UserStore","BasicGroupStore","SupergroupStore","DialogStatus","props","onUpdateUserStatus","update","chatId","chat","get","type","updateSubtitle","fullInfo","getFullInfo","basic_group_id","members","member","find","x","user_id","setState","subtitle","isAccent","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","id","onUpdateSupergroup","supergroup","state","prevChatId","nextProps","nextState","on","off","externalSubtitle","Component"],"mappings":";;;;;;;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,4BAAT,EAAuCC,iCAAvC,QAAgF,kBAAhF;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAO,oBAAP;;IAEMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;;AADe,UA+DnBC,kBA/DmB,GA+DE,UAAAC,MAAM,EAAI;AAAA,UACnBC,MADmB,GACR,MAAKH,KADG,CACnBG,MADmB;AAE3B,UAAMC,IAAI,GAAGT,SAAS,CAACU,GAAV,CAAcF,MAAd,CAAb;AACA,UAAI,CAACC,IAAL,EAAW;AACX,UAAI,CAACA,IAAI,CAACE,IAAV,EAAgB;AAEhB,UAAIC,cAAc,GAAG,KAArB;;AACA,cAAQH,IAAI,CAACE,IAAL,CAAU,OAAV,CAAR;AACI,aAAK,oBAAL;AAA2B;AACvB,gBAAME,QAAQ,GAAGX,eAAe,CAACY,WAAhB,CAA4BL,IAAI,CAACE,IAAL,CAAUI,cAAtC,CAAjB;;AACA,gBAAIF,QAAQ,IAAIA,QAAQ,CAACG,OAAzB,EAAkC;AAC9B,kBAAMC,MAAM,GAAGJ,QAAQ,CAACG,OAAT,CAAiBE,IAAjB,CAAsB,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACC,OAAF,KAAcb,MAAM,CAACa,OAAzB;AAAA,eAAvB,CAAf;;AACA,kBAAIH,MAAJ,EAAY;AACRL,gBAAAA,cAAc,GAAG,IAAjB;AACH;AACJ;;AACD;AACH;;AACD,aAAK,iBAAL;AAAwB;AACpB,gBAAIH,IAAI,CAACE,IAAL,CAAUS,OAAV,KAAsBb,MAAM,CAACa,OAAjC,EAA0C;AACtCR,cAAAA,cAAc,GAAG,IAAjB;AACH;;AACD;AACH;;AACD,aAAK,gBAAL;AAAuB;AACnB,gBAAIH,IAAI,CAACE,IAAL,CAAUS,OAAV,KAAsBb,MAAM,CAACa,OAAjC,EAA0C;AACtCR,cAAAA,cAAc,GAAG,IAAjB;AACH;;AACD;AACH;;AACD,aAAK,oBAAL;AAA2B;AACvB;AACH;AAzBL;;AA4BA,UAAIA,cAAJ,EAAoB;AAChB,cAAKA,cAAL,CAAoBJ,MAApB;AACH;AACJ,KArGkB;;AAAA,UAuGnBI,cAvGmB,GAuGF,UAAAJ,MAAM,EAAI;AACvB,YAAKa,QAAL,CAAc;AACVC,QAAAA,QAAQ,EAAExB,4BAA4B,CAACU,MAAD,CAD5B;AAEVe,QAAAA,QAAQ,EAAExB,iCAAiC,CAACS,MAAD;AAFjC,OAAd;AAIH,KA5GkB;;AAAA,UA8GnBgB,oBA9GmB,GA8GI,UAAAjB,MAAM,EAAI;AAAA,UACrBC,MADqB,GACV,MAAKH,KADK,CACrBG,MADqB;AAE7B,UAAMC,IAAI,GAAGT,SAAS,CAACU,GAAV,CAAcF,MAAd,CAAb;AACA,UAAI,CAACC,IAAL,EAAW;AAHkB,UAKrBE,IALqB,GAKZF,IALY,CAKrBE,IALqB;AAM7B,UAAI,CAACA,IAAL,EAAW;;AAEX,UACIA,IAAI,KACHA,IAAI,CAAC,OAAD,CAAJ,KAAkB,iBAAlB,IAAuCA,IAAI,CAAC,OAAD,CAAJ,KAAkB,gBADtD,CAAJ,IAEAA,IAAI,CAACS,OAAL,KAAiBb,MAAM,CAACa,OAH5B,EAIE;AACE,cAAKR,cAAL,CAAoBJ,MAApB;AACH;AACJ,KA7HkB;;AAAA,UA+HnBiB,0BA/HmB,GA+HU,UAAAlB,MAAM,EAAI;AAAA,UAC3BC,MAD2B,GAChB,MAAKH,KADW,CAC3BG,MAD2B;AAEnC,UAAMC,IAAI,GAAGT,SAAS,CAACU,GAAV,CAAcF,MAAd,CAAb;AACA,UAAI,CAACC,IAAL,EAAW;AAHwB,UAK3BE,IAL2B,GAKlBF,IALkB,CAK3BE,IAL2B;AAMnC,UAAI,CAACA,IAAL,EAAW;;AAEX,UAAIA,IAAI,IAAIA,IAAI,CAAC,OAAD,CAAJ,KAAkB,oBAA1B,IAAkDA,IAAI,CAACI,cAAL,KAAwBR,MAAM,CAACQ,cAArF,EAAqG;AACjG,cAAKH,cAAL,CAAoBJ,MAApB;AACH;AACJ,KA1IkB;;AAAA,UA4InBkB,0BA5ImB,GA4IU,UAAAnB,MAAM,EAAI;AAAA,UAC3BC,MAD2B,GAChB,MAAKH,KADW,CAC3BG,MAD2B;AAEnC,UAAMC,IAAI,GAAGT,SAAS,CAACU,GAAV,CAAcF,MAAd,CAAb;AACA,UAAI,CAACC,IAAL,EAAW;AAHwB,UAK3BE,IAL2B,GAKlBF,IALkB,CAK3BE,IAL2B;AAMnC,UAAI,CAACA,IAAL,EAAW;;AAEX,UAAIA,IAAI,IAAIA,IAAI,CAAC,OAAD,CAAJ,KAAkB,oBAA1B,IAAkDA,IAAI,CAACgB,aAAL,KAAuBpB,MAAM,CAACoB,aAApF,EAAmG;AAC/F,cAAKf,cAAL,CAAoBJ,MAApB;AACH;AACJ,KAvJkB;;AAAA,UAyJnBoB,kBAzJmB,GAyJE,UAAArB,MAAM,EAAI;AAAA,UACnBC,MADmB,GACR,MAAKH,KADG,CACnBG,MADmB;AAE3B,UAAMC,IAAI,GAAGT,SAAS,CAACU,GAAV,CAAcF,MAAd,CAAb;AACA,UAAI,CAACC,IAAL,EAAW;AAHgB,UAKnBE,IALmB,GAKVF,IALU,CAKnBE,IALmB;AAM3B,UAAI,CAACA,IAAL,EAAW;;AAEX,UAAIA,IAAI,IAAIA,IAAI,CAAC,OAAD,CAAJ,KAAkB,oBAA1B,IAAkDA,IAAI,CAACI,cAAL,KAAwBR,MAAM,CAACsB,WAAP,CAAmBC,EAAjG,EAAqG;AACjG,cAAKlB,cAAL,CAAoBJ,MAApB;AACH;AACJ,KApKkB;;AAAA,UAsKnBuB,kBAtKmB,GAsKE,UAAAxB,MAAM,EAAI;AAAA,UACnBC,MADmB,GACR,MAAKH,KADG,CACnBG,MADmB;AAE3B,UAAMC,IAAI,GAAGT,SAAS,CAACU,GAAV,CAAcF,MAAd,CAAb;AACA,UAAI,CAACC,IAAL,EAAW;AAHgB,UAKnBE,IALmB,GAKVF,IALU,CAKnBE,IALmB;AAM3B,UAAI,CAACA,IAAL,EAAW;;AAEX,UAAIA,IAAI,IAAIA,IAAI,CAAC,OAAD,CAAJ,KAAkB,oBAA1B,IAAkDA,IAAI,CAACgB,aAAL,KAAuBpB,MAAM,CAACyB,UAAP,CAAkBF,EAA/F,EAAmG;AAC/F,cAAKlB,cAAL,CAAoBJ,MAApB;AACH;AACJ,KAjLkB;;AAAA,QAGPA,OAHO,GAGI,MAAKH,KAHT,CAGPG,MAHO;AAKf,UAAKyB,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE1B,OADH;AAETc,MAAAA,QAAQ,EAAExB,4BAA4B,CAACU,OAAD,CAF7B;AAGTe,MAAAA,QAAQ,EAAExB,iCAAiC,CAACS,OAAD;AAHlC,KAAb;AALe;AAUlB;;;;0CAgBqB2B,S,EAAWC,S,EAAW;AAAA,UAChC5B,MADgC,GACrB,KAAKH,KADgB,CAChCG,MADgC;AAAA,wBAET,KAAKyB,KAFI;AAAA,UAEhCX,QAFgC,eAEhCA,QAFgC;AAAA,UAEtBC,QAFsB,eAEtBA,QAFsB;;AAIxC,UAAIY,SAAS,CAAC3B,MAAV,KAAqBA,MAAzB,EAAiC;AAC7B,eAAO,IAAP;AACH;;AAED,UAAI4B,SAAS,CAACd,QAAV,KAAuBA,QAA3B,EAAqC;AACjC,eAAO,IAAP;AACH;;AAED,UAAIc,SAAS,CAACb,QAAV,KAAuBA,QAA3B,EAAqC;AACjC,eAAO,IAAP;AACH;;AAED,aAAO,KAAP;AACH;;;wCAEmB;AAChBtB,MAAAA,SAAS,CAACoC,EAAV,CAAa,kBAAb,EAAiC,KAAK/B,kBAAtC;AACAJ,MAAAA,eAAe,CAACmC,EAAhB,CAAmB,kBAAnB,EAAuC,KAAKT,kBAA5C;AACAzB,MAAAA,eAAe,CAACkC,EAAhB,CAAmB,kBAAnB,EAAuC,KAAKN,kBAA5C;AACA9B,MAAAA,SAAS,CAACoC,EAAV,CAAa,oBAAb,EAAmC,KAAKb,oBAAxC;AACAtB,MAAAA,eAAe,CAACmC,EAAhB,CAAmB,0BAAnB,EAA+C,KAAKZ,0BAApD;AACAtB,MAAAA,eAAe,CAACkC,EAAhB,CAAmB,0BAAnB,EAA+C,KAAKX,0BAApD;AACH;;;2CAEsB;AACnBzB,MAAAA,SAAS,CAACqC,GAAV,CAAc,kBAAd,EAAkC,KAAKhC,kBAAvC;AACAJ,MAAAA,eAAe,CAACoC,GAAhB,CAAoB,kBAApB,EAAwC,KAAKV,kBAA7C;AACAzB,MAAAA,eAAe,CAACmC,GAAhB,CAAoB,kBAApB,EAAwC,KAAKP,kBAA7C;AACA9B,MAAAA,SAAS,CAACqC,GAAV,CAAc,oBAAd,EAAoC,KAAKd,oBAAzC;AACAtB,MAAAA,eAAe,CAACoC,GAAhB,CAAoB,0BAApB,EAAgD,KAAKb,0BAArD;AACAtB,MAAAA,eAAe,CAACmC,GAAhB,CAAoB,0BAApB,EAAgD,KAAKZ,0BAArD;AACH;;;6BAsHQ;AAAA,UACaa,gBADb,GACkC,KAAKlC,KADvC,CACGiB,QADH;AAAA,yBAE0B,KAAKW,KAF/B;AAAA,UAEGX,QAFH,gBAEGA,QAFH;AAAA,UAEaC,QAFb,gBAEaA,QAFb;AAIL,aACI;AAAK,QAAA,SAAS,EAAE1B,UAAU,CAAC,eAAD,EAAkB;AAAE,kCAAwB0B;AAA1B,SAAlB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKgB,gBAAgB,GAAGA,gBAAgB,GAAG,IAAtB,GAA6B,IADlD,EAEKjB,QAFL,CADJ;AAMH;;;6CAjL+BjB,K,EAAO4B,K,EAAO;AAC1C,UAAI5B,KAAK,CAACG,MAAN,KAAiByB,KAAK,CAACC,UAA3B,EAAuC;AAAA,YAC3B1B,MAD2B,GAChBH,KADgB,CAC3BG,MAD2B;AAGnC,eAAO;AACH0B,UAAAA,UAAU,EAAE1B,MADT;AAEHc,UAAAA,QAAQ,EAAExB,4BAA4B,CAACU,MAAD,CAFnC;AAGHe,UAAAA,QAAQ,EAAExB,iCAAiC,CAACS,MAAD;AAHxC,SAAP;AAKH;;AAED,aAAO,IAAP;AACH;;;;EAzBsBZ,KAAK,CAAC4C,S;;AAiMjC,eAAepC,YAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n"]},"metadata":{},"sourceType":"module"}