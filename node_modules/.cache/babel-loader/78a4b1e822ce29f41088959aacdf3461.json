{"ast":null,"code":"import _slicedToArray from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnRight/ChatDetails.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport { copy } from '../../Utils/Text';\nimport { getChatUsername, getChatPhoneNumber, getChatBio, isGroupChat, getGroupChatMembers, getChatFullInfo, isPrivateChat, getChatUserId, isMeChat } from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nvar ChatDetails =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ChatDetails, _React$Component);\n\n  function ChatDetails(props) {\n    var _this;\n\n    _classCallCheck(this, ChatDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatDetails).call(this, props));\n\n    _this.onUpdateBasicGroupFullInfo = function (update) {\n      var chat = ChatStore.get(_this.props.chatId);\n      if (!chat) return;\n\n      if (chat.type && chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n        _this.forceUpdate(); // update bio\n\n      }\n    };\n\n    _this.onUpdateSupergroupFullInfo = function (update) {\n      var chat = ChatStore.get(_this.props.chatId);\n      if (!chat) return;\n\n      if (chat.type && chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n        _this.forceUpdate(); // update bio\n\n      }\n    };\n\n    _this.onUpdateUserFullInfo = function (update) {\n      var chat = ChatStore.get(_this.props.chatId);\n      if (!chat) return;\n\n      if (chat.type && (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') && chat.type.user_id === update.user_id) {\n        _this.forceUpdate(); // update bio\n\n      }\n    };\n\n    _this.onUpdateUserStatus = function (update) {\n      if (_this.members.has(update.user_id)) {\n        _this.forceUpdate();\n      }\n    };\n\n    _this.loadContent = function () {\n      _this.loadChatContents();\n    };\n\n    _this.loadChatContents = function () {\n      var _this$props = _this.props,\n          chatId = _this$props.chatId,\n          popup = _this$props.popup;\n      var store = FileStore.getStore();\n      loadChatsContent(store, [chatId]);\n      var members = getGroupChatMembers(chatId).map(function (x) {\n        return x.user_id;\n      });\n      loadUsersContent(store, members);\n\n      if (popup) {\n        getChatFullInfo(chatId);\n      }\n    };\n\n    _this.handleUsernameHint = function () {\n      var _this$props2 = _this.props,\n          t = _this$props2.t,\n          chatId = _this$props2.chatId;\n      var username = getChatUsername(chatId);\n      if (!username) return;\n      var telegramUrlOption = OptionStore.get('t_me_url');\n      var usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://nebula.chat/';\n      copy(usernameLink + username);\n      var key = \"\".concat(chatId, \"_copy_username\");\n      var message = t('TextCopied');\n      var action = null;\n\n      _this.handleScheduledAction(key, message, action);\n    };\n\n    _this.handleScheduledAction = function (key, message, action) {\n      if (!key) return;\n      var enqueueSnackbar = _this.props.enqueueSnackbar;\n      if (!enqueueSnackbar) return;\n      var TRANSITION_DELAY = 150;\n\n      if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)) {\n        enqueueSnackbar(message, {\n          autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n          action: [React.createElement(IconButton, {\n            key: \"close\",\n            \"aria-label\": \"Close\",\n            color: \"inherit\",\n            className: \"notification-close-button\",\n            onClick: function onClick() {\n              return ApplicationStore.removeScheduledAction(key);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 253\n            },\n            __self: this\n          }, React.createElement(CloseIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 259\n            },\n            __self: this\n          }))]\n        });\n      }\n    };\n\n    _this.handlePhoneHint = function () {\n      var _this$props3 = _this.props,\n          t = _this$props3.t,\n          chatId = _this$props3.chatId;\n      var phoneNumber = getChatPhoneNumber(chatId);\n      if (!phoneNumber) return;\n      copy(formatPhoneNumber(phoneNumber));\n      var key = \"\".concat(chatId, \"_copy_phone\");\n      var message = t('PhoneCopied');\n      var action = null;\n\n      _this.handleScheduledAction(key, message, action);\n    };\n\n    _this.handleHeaderClick = function () {\n      _this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    _this.handleOpenViewer = function () {\n      var _this$props4 = _this.props,\n          chatId = _this$props4.chatId,\n          popup = _this$props4.popup;\n      var chat = ChatStore.get(chatId);\n      if (!chat) return;\n      if (!chat.photo) return;\n      setProfileMediaViewerContent({\n        chatId: chatId\n      });\n\n      if (popup) {\n        TdLibController.clientUpdate({\n          '@type': 'clientUpdateDialogChatId',\n          chatId: 0\n        });\n      }\n    };\n\n    _this.handleOpenChat = function () {\n      var _this$props5 = _this.props,\n          chatId = _this$props5.chatId,\n          popup = _this$props5.popup;\n      openChat(chatId, null, false);\n\n      if (popup) {\n        TdLibController.clientUpdate({\n          '@type': 'clientUpdateDialogChatId',\n          chatId: 0\n        });\n      }\n    };\n\n    _this.handleOpenUser = function (userId) {\n      openUser(userId, true);\n    };\n\n    _this.getContentHeight = function () {\n      if (!_this.chatDetailsListRef) return 0;\n      return _this.chatDetailsListRef.current.clientHeight;\n    };\n\n    _this.chatDetailsListRef = React.createRef();\n    var _chatId = _this.props.chatId;\n    _this.members = new Map();\n    _this.state = {\n      prevChatId: _chatId\n    };\n    return _this;\n  }\n\n  _createClass(ChatDetails, [{\n    key: \"getSnapshotBeforeUpdate\",\n    value: function getSnapshotBeforeUpdate(prevProps, prevState) {\n      var chatId = this.props.chatId;\n      var list = this.chatDetailsListRef.current;\n      var scrollTop = list.scrollTop,\n          scrollHeight = list.scrollHeight,\n          offsetHeight = list.offsetHeight;\n      var snapshot = {\n        scrollTop: scrollTop,\n        scrollHeight: scrollHeight,\n        offsetHeight: offsetHeight\n      }; // console.log(\n      //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n      // );\n\n      return snapshot;\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      var _this$props6 = this.props,\n          chatId = _this$props6.chatId,\n          theme = _this$props6.theme,\n          counters = _this$props6.counters,\n          migratedCounters = _this$props6.migratedCounters;\n\n      if (nextProps.chatId !== chatId) {\n        return true;\n      }\n\n      if (nextProps.counters !== counters) {\n        return true;\n      }\n\n      if (nextProps.migratedCounters !== migratedCounters) {\n        return true;\n      }\n\n      if (nextProps.theme !== theme) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      var chatId = this.props.chatId;\n\n      if (prevProps.chatId !== chatId) {\n        this.loadContent();\n      }\n\n      var list = this.chatDetailsListRef.current;\n      var scrollTop = snapshot.scrollTop,\n          scrollHeight = snapshot.scrollHeight,\n          offsetHeight = snapshot.offsetHeight;\n\n      if (prevProps.chatId === chatId) {\n        list.scrollTop = scrollTop;\n      } else {\n        list.scrollTop = 0;\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadContent();\n      UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n      UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n      BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n      SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n      UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n      BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n      SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props7 = this.props,\n          backButton = _this$props7.backButton,\n          className = _this$props7.className,\n          chatId = _this$props7.chatId,\n          onClose = _this$props7.onClose,\n          onOpenGroupInCommon = _this$props7.onOpenGroupInCommon,\n          onOpenSharedAudios = _this$props7.onOpenSharedAudios,\n          onOpenSharedDocuments = _this$props7.onOpenSharedDocuments,\n          onOpenSharedLinks = _this$props7.onOpenSharedLinks,\n          onOpenSharedMedia = _this$props7.onOpenSharedMedia,\n          onOpenSharedPhotos = _this$props7.onOpenSharedPhotos,\n          onOpenSharedVideos = _this$props7.onOpenSharedVideos,\n          onOpenSharedVoiceNotes = _this$props7.onOpenSharedVoiceNotes,\n          popup = _this$props7.popup,\n          t = _this$props7.t;\n      var _this$props8 = this.props,\n          counters = _this$props8.counters,\n          migratedCounters = _this$props8.migratedCounters;\n      counters = counters || [0, 0, 0, 0, 0, 0];\n      migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n      var _counters$map = counters.map(function (el, i) {\n        return el + migratedCounters[i];\n      }),\n          _counters$map2 = _slicedToArray(_counters$map, 6),\n          photoCount = _counters$map2[0],\n          videoCount = _counters$map2[1],\n          documentCount = _counters$map2[2],\n          audioCount = _counters$map2[3],\n          urlCount = _counters$map2[4],\n          voiceAndVideoNoteCount = _counters$map2[5];\n\n      var chat = ChatStore.get(chatId);\n\n      if (!chat) {\n        return React.createElement(\"div\", {\n          className: \"chat-details\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352\n          },\n          __self: this\n        }, React.createElement(ChatDetailsHeader, {\n          onClose: onClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          ref: this.chatDetailsListRef,\n          className: \"chat-details-list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354\n          },\n          __self: this\n        }));\n      }\n\n      var groupInCommonCount = 0;\n\n      if (isPrivateChat(chatId)) {\n        var fullInfo = UserStore.getFullInfo(chat.type.user_id);\n        groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n      }\n\n      var username = getChatUsername(chatId);\n      var phoneNumber = getChatPhoneNumber(chatId);\n      var bio = getChatBio(chatId);\n      var isGroup = isGroupChat(chatId);\n      var isMe = isMeChat(chatId);\n      var members = getGroupChatMembers(chatId);\n      var users = [];\n      this.members = new Map();\n      members.forEach(function (member) {\n        var user = UserStore.get(member.user_id);\n\n        if (user) {\n          _this2.members.set(user.id, user.id);\n\n          users.push(user);\n        }\n      });\n      var sortedUsers = users.sort(function (x, y) {\n        return getUserStatusOrder(y) - getUserStatusOrder(x);\n      });\n      var items = sortedUsers.map(function (user) {\n        return React.createElement(ListItem, {\n          button: true,\n          className: \"list-item\",\n          key: user.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386\n          },\n          __self: this\n        }, React.createElement(User, {\n          userId: user.id,\n          onSelect: _this2.handleOpenUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 387\n          },\n          __self: this\n        }));\n      });\n      var photo = chat.photo;\n      var content = React.createElement(React.Fragment, null, React.createElement(ChatDetailsHeader, {\n        chatId: chatId,\n        backButton: backButton,\n        onClose: onClose,\n        onClick: this.handleHeaderClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        ref: this.chatDetailsListRef,\n        className: \"chat-details-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chat-details-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, React.createElement(Chat, {\n        chatId: chatId,\n        big: true,\n        showStatus: true,\n        showSavedMessages: !popup,\n        onTileSelect: photo ? this.handleOpenViewer : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      })), (username || phoneNumber || bio) && React.createElement(React.Fragment, null, React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, username && React.createElement(ListItem, {\n        button: true,\n        className: \"list-item\",\n        onClick: this.handleUsernameHint,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, React.createElement(AlternateEmailIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: React.createElement(Typography, {\n          variant: \"inherit\",\n          noWrap: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 421\n          },\n          __self: this\n        }, username),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      })), phoneNumber && React.createElement(React.Fragment, null, React.createElement(ListItem, {\n        button: true,\n        className: \"list-item\",\n        onClick: this.handlePhoneHint,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }, React.createElement(CallIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: React.createElement(Typography, {\n          variant: \"inherit\",\n          noWrap: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 436\n          },\n          __self: this\n        }, formatPhoneNumber(phoneNumber)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }))), bio && React.createElement(ListItem, {\n        className: \"list-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, React.createElement(ErrorOutlineIcon, {\n        className: \"chat-details-info-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: bio,\n        style: {\n          whiteSpace: 'pre-wrap',\n          wordWrap: 'break-word'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      })))), (!isMe || isGroup || popup && !isGroup) && React.createElement(React.Fragment, null, React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }, !isMe && React.createElement(NotificationsListItem, {\n        chatId: chatId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }), popup && !isGroup && React.createElement(ListItem, {\n        button: true,\n        className: \"list-item\",\n        onClick: this.handleOpenChat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        inset: true,\n        primary: React.createElement(Typography, {\n          color: \"primary\",\n          variant: \"inherit\",\n          noWrap: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 469\n          },\n          __self: this\n        }, t('SendMessage').toUpperCase()),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      })))), (photoCount > 0 || videoCount > 0 || documentCount > 0 || audioCount > 0 || urlCount > 0 || voiceAndVideoNoteCount > 0 || groupInCommonCount > 0) && React.createElement(React.Fragment, null, React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }, photoCount > 0 && React.createElement(ListItem, {\n        button: true,\n        className: \"list-item\",\n        onClick: onOpenSharedPhotos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491\n        },\n        __self: this\n      }, React.createElement(PhotoIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: React.createElement(Typography, {\n          variant: \"inherit\",\n          noWrap: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 496\n          },\n          __self: this\n        }, photoCount === 1 ? '1 photo' : \"\".concat(photoCount, \" photos\")),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      })), videoCount > 0 && React.createElement(ListItem, {\n        button: true,\n        className: \"list-item\",\n        onClick: onOpenSharedVideos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }, React.createElement(VideocamIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: React.createElement(Typography, {\n          variant: \"inherit\",\n          noWrap: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 510\n          },\n          __self: this\n        }, videoCount === 1 ? '1 video' : \"\".concat(videoCount, \" videos\")),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      })), documentCount > 0 && React.createElement(ListItem, {\n        button: true,\n        className: \"list-item\",\n        onClick: onOpenSharedDocuments,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }, React.createElement(InsertDriveFileIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: React.createElement(Typography, {\n          variant: \"inherit\",\n          noWrap: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 524\n          },\n          __self: this\n        }, documentCount === 1 ? '1 file' : \"\".concat(documentCount, \" files\")),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      })), audioCount > 0 && React.createElement(ListItem, {\n        button: true,\n        className: \"list-item\",\n        onClick: onOpenSharedAudios,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      }, React.createElement(HeadsetIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: React.createElement(Typography, {\n          variant: \"inherit\",\n          noWrap: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 538\n          },\n          __self: this\n        }, audioCount === 1 ? '1 audio file' : \"\".concat(audioCount, \" audio files\")),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536\n        },\n        __self: this\n      })), urlCount > 0 && React.createElement(ListItem, {\n        button: true,\n        className: \"list-item\",\n        onClick: onOpenSharedLinks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        },\n        __self: this\n      }, React.createElement(InsertLinkIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: React.createElement(Typography, {\n          variant: \"inherit\",\n          noWrap: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 552\n          },\n          __self: this\n        }, urlCount === 1 ? '1 shared link' : \"\".concat(urlCount, \" shared links\")),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        },\n        __self: this\n      })), voiceAndVideoNoteCount > 0 && React.createElement(ListItem, {\n        button: true,\n        className: \"list-item\",\n        onClick: onOpenSharedVoiceNotes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }, React.createElement(MicIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: React.createElement(Typography, {\n          variant: \"inherit\",\n          noWrap: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 566\n          },\n          __self: this\n        }, voiceAndVideoNoteCount === 1 ? '1 voice message' : \"\".concat(voiceAndVideoNoteCount, \" voice messages\")),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564\n        },\n        __self: this\n      })), groupInCommonCount > 0 && React.createElement(ListItem, {\n        button: true,\n        className: \"list-item\",\n        onClick: onOpenGroupInCommon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      }, React.createElement(GroupIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: React.createElement(Typography, {\n          variant: \"inherit\",\n          noWrap: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 582\n          },\n          __self: this\n        }, groupInCommonCount === 1 ? '1 group in common' : \"\".concat(groupInCommonCount, \" groups in common\")),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580\n        },\n        __self: this\n      })))), items.length > 0 && React.createElement(React.Fragment, null, React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }, items))));\n      return popup ? React.createElement(React.Fragment, null, content) : React.createElement(\"div\", {\n        className: classNames('chat-details', className),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604\n        },\n        __self: this\n      }, content);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if (props.chatId !== state.prevChatId) {\n        return {\n          prevChatId: props.chatId\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return ChatDetails;\n}(React.Component);\n\nChatDetails.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  popup: PropTypes.bool,\n  onClose: PropTypes.func,\n  onOpenGroupInCommon: PropTypes.func,\n  onOpenSharedDocuments: PropTypes.func,\n  onOpenSharedMedia: PropTypes.func,\n  onOpenSharedLinks: PropTypes.func,\n  onOpenSharedPhotos: PropTypes.func,\n  onOpenSharedVideos: PropTypes.func,\n  onOpenSharedVoiceNotes: PropTypes.func\n};\nvar enhance = compose(withSaveRef(), withTranslation(), withSnackbar, withRestoreRef());\nexport default enhance(ChatDetails);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnRight/ChatDetails.js"],"names":["React","PropTypes","classNames","compose","withSnackbar","withTranslation","AlternateEmailIcon","GroupIcon","CallIcon","CloseIcon","Divider","ErrorOutlineIcon","HeadsetIcon","IconButton","InsertDriveFileIcon","InsertLinkIcon","List","ListItem","ListItemIcon","ListItemText","MicIcon","PhotoIcon","Typography","VideocamIcon","User","Chat","ChatDetailsHeader","NotificationsListItem","MoreListItem","copy","getChatUsername","getChatPhoneNumber","getChatBio","isGroupChat","getGroupChatMembers","getChatFullInfo","isPrivateChat","getChatUserId","isMeChat","getUserStatusOrder","loadUsersContent","loadChatsContent","formatPhoneNumber","openChat","openUser","setProfileMediaViewerContent","withRestoreRef","withSaveRef","NOTIFICATION_AUTO_HIDE_DURATION_MS","ChatStore","UserStore","BasicGroupStore","SupergroupStore","OptionStore","FileStore","ApplicationStore","TdLibController","ChatDetails","props","onUpdateBasicGroupFullInfo","update","chat","get","chatId","type","basic_group_id","forceUpdate","onUpdateSupergroupFullInfo","supergroup_id","onUpdateUserFullInfo","user_id","onUpdateUserStatus","members","has","loadContent","loadChatContents","popup","store","getStore","map","x","handleUsernameHint","t","username","telegramUrlOption","usernameLink","value","key","message","action","handleScheduledAction","enqueueSnackbar","TRANSITION_DELAY","addScheduledAction","autoHideDuration","removeScheduledAction","handlePhoneHint","phoneNumber","handleHeaderClick","chatDetailsListRef","current","scrollTop","handleOpenViewer","photo","clientUpdate","handleOpenChat","handleOpenUser","userId","getContentHeight","clientHeight","createRef","Map","state","prevChatId","prevProps","prevState","list","scrollHeight","offsetHeight","snapshot","nextProps","nextState","theme","counters","migratedCounters","on","off","backButton","className","onClose","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedMedia","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","el","i","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","fullInfo","getFullInfo","group_in_common_count","bio","isGroup","isMe","users","forEach","member","user","set","id","push","sortedUsers","sort","y","items","content","whiteSpace","wordWrap","toUpperCase","length","Component","propTypes","number","isRequired","bool","func","enhance"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport { copy } from '../../Utils/Text';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://nebula.chat/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className='list-item' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className='list-item'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {/*{isGroup && <MoreListItem chatId={chatId} />}*/}\n                                {popup && !isGroup && (\n                                    <ListItem button className='list-item' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n"]},"metadata":{},"sourceType":"module"}