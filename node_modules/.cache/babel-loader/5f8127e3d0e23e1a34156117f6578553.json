{"ast":null,"code":"import _slicedToArray from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar ActionScheduler = function ActionScheduler(actionCallback, cancelCallback) {\n  var _this = this;\n\n  _classCallCheck(this, ActionScheduler);\n\n  this.add = function (key, timeout, action, cancel) {\n    if (_this.actions.has(key)) {\n      return false;\n    }\n\n    var expire = new Date();\n    expire.setMilliseconds(expire.getMilliseconds() + timeout);\n\n    _this.actions.set(key, {\n      expire: expire,\n      action: action,\n      cancel: cancel\n    });\n\n    if (_this.timerId) {\n      clearTimeout(_this.timerId);\n    }\n\n    _this.setTimeout();\n\n    return true;\n  };\n\n  this.invoke =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(key) {\n      var item;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              item = _this.actions.get(key);\n\n              if (item) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              _this.actions.delete(key);\n\n              _context.next = 6;\n              return _this.actionCallback({\n                key: key,\n                action: item.action,\n                cancel: item.cancel\n              });\n\n            case 6:\n              if (!item.action) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 9;\n              return item.action();\n\n            case 9:\n              if (_this.timerId) {\n                clearTimeout(_this.timerId);\n              }\n\n              _this.setTimeout();\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  this.remove = function (key) {\n    var item = _this.actions.get(key);\n\n    if (!item) return;\n\n    _this.actions.delete(key);\n\n    _this.cancelCallback({\n      key: key,\n      action: item.action,\n      cancel: item.cancel\n    });\n\n    if (item.cancel) item.cancel();\n\n    if (_this.timerId) {\n      clearTimeout(_this.timerId);\n    }\n\n    _this.setTimeout();\n  };\n\n  this.setTimeout = function () {\n    var now = new Date();\n    var timeout = 1000000;\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = _this.actions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var _ref4 = _step.value;\n\n        var _ref3 = _slicedToArray(_ref4, 2);\n\n        var key = _ref3[0];\n        var value = _ref3[1];\n        var actionTimeout = value.expire - now;\n        if (actionTimeout < timeout) timeout = actionTimeout;\n        if (timeout < 0) timeout = 0;\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    if (timeout < 1000000) {\n      _this.timerId = setTimeout(_this.handleTimer, timeout);\n    }\n  };\n\n  this.handleTimer = function () {\n    var now = new Date();\n    var expired = [];\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = _this.actions[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var _ref7 = _step2.value;\n\n        var _ref6 = _slicedToArray(_ref7, 2);\n\n        var key = _ref6[0];\n        var value = _ref6[1];\n        var actionTimeout = value.expire - now;\n        if (actionTimeout <= 0) expired.push({\n          key: key,\n          value: value\n        });\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    for (var _i = 0, _expired = expired; _i < _expired.length; _i++) {\n      var item = _expired[_i];\n\n      _this.actions.delete(item.key);\n\n      _this.actionCallback({\n        key: item.key,\n        action: item.value.action,\n        cancel: item.value.cancel\n      });\n\n      if (item.value.action) item.value.action();\n    }\n\n    _this.setTimeout();\n  };\n\n  this.actions = new Map();\n  this.actionCallback = actionCallback;\n  this.cancelCallback = cancelCallback;\n};\n\nexport default ActionScheduler;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Utils/ActionScheduler.js"],"names":["ActionScheduler","actionCallback","cancelCallback","add","key","timeout","action","cancel","actions","has","expire","Date","setMilliseconds","getMilliseconds","set","timerId","clearTimeout","setTimeout","invoke","item","get","delete","remove","now","value","actionTimeout","handleTimer","expired","push","Map"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass ActionScheduler {\n    constructor(actionCallback, cancelCallback) {\n        this.actions = new Map();\n        this.actionCallback = actionCallback;\n        this.cancelCallback = cancelCallback;\n    }\n\n    add = (key, timeout, action, cancel) => {\n        if (this.actions.has(key)) {\n            return false;\n        }\n\n        let expire = new Date();\n        expire.setMilliseconds(expire.getMilliseconds() + timeout);\n\n        this.actions.set(key, { expire: expire, action: action, cancel: cancel });\n\n        if (this.timerId) {\n            clearTimeout(this.timerId);\n        }\n\n        this.setTimeout();\n\n        return true;\n    };\n\n    invoke = async key => {\n        const item = this.actions.get(key);\n        if (!item) return;\n\n        this.actions.delete(key);\n\n        await this.actionCallback({ key: key, action: item.action, cancel: item.cancel });\n        if (item.action) await item.action();\n\n        if (this.timerId) {\n            clearTimeout(this.timerId);\n        }\n\n        this.setTimeout();\n    };\n\n    remove = key => {\n        const item = this.actions.get(key);\n        if (!item) return;\n\n        this.actions.delete(key);\n\n        this.cancelCallback({ key: key, action: item.action, cancel: item.cancel });\n        if (item.cancel) item.cancel();\n\n        if (this.timerId) {\n            clearTimeout(this.timerId);\n        }\n\n        this.setTimeout();\n    };\n\n    setTimeout = () => {\n        let now = new Date();\n        let timeout = 1000000;\n        for (let [key, value] of this.actions) {\n            let actionTimeout = value.expire - now;\n            if (actionTimeout < timeout) timeout = actionTimeout;\n            if (timeout < 0) timeout = 0;\n        }\n\n        if (timeout < 1000000) {\n            this.timerId = setTimeout(this.handleTimer, timeout);\n        }\n    };\n\n    handleTimer = () => {\n        let now = new Date();\n        let expired = [];\n        for (let [key, value] of this.actions) {\n            let actionTimeout = value.expire - now;\n            if (actionTimeout <= 0) expired.push({ key: key, value: value });\n        }\n\n        for (let item of expired) {\n            this.actions.delete(item.key);\n            this.actionCallback({ key: item.key, action: item.value.action, cancel: item.value.cancel });\n            if (item.value.action) item.value.action();\n        }\n\n        this.setTimeout();\n    };\n}\n\nexport default ActionScheduler;\n"]},"metadata":{},"sourceType":"module"}