{"ast":null,"code":"import _defineProperty from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Message/Media/Sticker.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames'; // import Lottie from '../../Viewer/Lottie';\n\nimport { isBlurredThumbnail, isValidAnimatedSticker } from '../../../Utils/Media';\nimport { getFitSize } from '../../../Utils/Common';\nimport { getBlob, getSrc } from '../../../Utils/File';\nimport { inflateBlob } from '../../../Workers/BlobInflator';\nimport { STICKER_DISPLAY_SIZE } from '../../../Constants';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport FileStore from '../../../Stores/FileStore';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport StickerStore from '../../../Stores/StickerStore';\nimport './Sticker.css';\nvar Lottie = React.lazy(function () {\n  return import('../../Viewer/Lottie');\n});\nexport var StickerSourceEnum = Object.freeze({\n  HINTS: 'HINTS',\n  MESSAGE: 'MESSAGE',\n  PICKER_HEADER: 'PICKER_HEADER',\n  PICKER: 'PICKER',\n  PREVIEW: 'PREVIEW',\n  STICKER_SET: 'STICKER_SET',\n  UNKNOWN: 'UNKNOWN'\n});\n\nvar Sticker =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Sticker, _React$Component);\n\n  function Sticker(props) {\n    var _this;\n\n    _classCallCheck(this, Sticker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sticker).call(this, props));\n\n    _this.onClientUpdateInstantViewContent = function (update) {\n      _this.openIV = Boolean(InstantViewStore.getCurrent());\n\n      _this.startStopAnimation();\n    };\n\n    _this.onClientUpdateDialogChatId = function (update) {\n      _this.dialogChatId = ApplicationStore.dialogChatId;\n\n      _this.startStopAnimation();\n    };\n\n    _this.onClientUpdateMediaViewerContent = function (update) {\n      _this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n      _this.startStopAnimation();\n    };\n\n    _this.onClientUpdateProfileMediaViewerContent = function (update) {\n      _this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n      _this.startStopAnimation();\n    };\n\n    _this.onClientUpdateStickerPreview = function (update) {\n      _this.stickerPreview = update.sticker;\n\n      _this.startStopAnimation();\n    };\n\n    _this.onClientUpdateMessagesInView = function (update) {\n      var _this$props = _this.props,\n          chatId = _this$props.chatId,\n          messageId = _this$props.messageId;\n      var key = \"\".concat(chatId, \"_\").concat(messageId);\n      _this.inView = update.messages.has(key);\n\n      _this.startStopAnimation();\n    };\n\n    _this.onClientUpdateStickerSet = function (update) {\n      var stickerSet = update.stickerSet;\n      _this.openedStickerSet = stickerSet;\n\n      _this.startStopAnimation();\n    };\n\n    _this.onClientUpdateFocusWindow = function (update) {\n      var focused = update.focused;\n      var _this$props2 = _this.props,\n          chatId = _this$props2.chatId,\n          messageId = _this$props2.messageId,\n          sticker = _this$props2.sticker;\n      var isAnimated = isValidAnimatedSticker(sticker, chatId, messageId);\n      if (!isAnimated) return;\n      _this.windowFocused = focused;\n\n      _this.startStopAnimation();\n    };\n\n    _this.onClientUpdateStickerBlob = function (update) {\n      var _this$props$sticker = _this.props.sticker,\n          sticker = _this$props$sticker.sticker,\n          is_animated = _this$props$sticker.is_animated;\n      var fileId = update.fileId;\n      if (!sticker) return;\n\n      if (sticker.id === fileId) {\n        if (is_animated) {\n          _this.loadContent();\n        } else {\n          _this.forceUpdate();\n        }\n      }\n    };\n\n    _this.onClientUpdateStickerThumbnailBlob = function (update) {\n      var thumbnail = _this.props.sticker.thumbnail;\n      if (!thumbnail) return;\n      var fileId = update.fileId;\n\n      if (thumbnail.photo && thumbnail.photo.id === fileId) {\n        _this.forceUpdate();\n      }\n    };\n\n    _this.loadContent =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _this$props3, chatId, messageId, source, autoplay, play, is_animated, sticker, isAnimated, blob, animationData, result;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props3 = _this.props, chatId = _this$props3.chatId, messageId = _this$props3.messageId, source = _this$props3.sticker, autoplay = _this$props3.autoplay, play = _this$props3.play;\n              is_animated = source.is_animated, sticker = source.sticker;\n              isAnimated = isValidAnimatedSticker(source, chatId, messageId);\n\n              if (is_animated) {\n                _context.next = 5;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 5:\n              if (isAnimated) {\n                _context.next = 7;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 7:\n              if (play) {\n                _context.next = 9;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 9:\n              blob = getBlob(sticker);\n\n              if (blob) {\n                _context.next = 12;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 12:\n              animationData = null;\n              _context.prev = 13;\n              _context.next = 16;\n              return inflateBlob(blob);\n\n            case 16:\n              result = _context.sent;\n\n              if (result) {\n                _context.next = 19;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 19:\n              animationData = JSON.parse(result); // StickerStore.setAnimationData(blob, animationData);\n\n              _context.next = 25;\n              break;\n\n            case 22:\n              _context.prev = 22;\n              _context.t0 = _context[\"catch\"](13);\n              console.log('[Sticker] loadContent error', _context.t0);\n\n            case 25:\n              if (animationData) {\n                _context.next = 27;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 27:\n              if (autoplay) {\n                _this.setState({\n                  animationData: animationData\n                });\n              } else {\n                _this.animationData = animationData;\n              }\n\n            case 28:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[13, 22]]);\n    }));\n\n    _this.handleMouseEnter = function (event) {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          animationData = _assertThisInitialize.animationData; // console.log('[Sticker] handleMouseEnter', animationData);\n\n\n      if (animationData) {\n        _this.setState({\n          animationData: animationData\n        }, function () {\n          _this.handleAnimationMouseEnter();\n        });\n      }\n    };\n\n    _this.handleAnimationMouseEnter = function () {\n      // console.log('[Sticker] handleAnimationMouseEnter 1');\n      if (_this.props.autoplay) return;\n      _this.entered = true;\n      var player = _this.lottieRef.current;\n      if (!player) return; // console.log('[Sticker] handleAnimationMouseEnter 2');\n\n      _this.loopCount = 0;\n\n      _this.startStopAnimation();\n    };\n\n    _this.handleAnimationLoopComplete = function () {\n      if (_this.props.autoplay) return;\n      var player = _this.lottieRef.current;\n      if (!player) return;\n      if (!_this.entered) _this.loopCount += 1;\n\n      if (_this.loopCount > 2) {\n        var animationData = _this.state.animationData;\n\n        if (animationData) {\n          _this.setState({\n            animationData: null\n          });\n        }\n      }\n    };\n\n    _this.handleAnimationMouseOut = function () {\n      _this.entered = false;\n    };\n\n    _this.lottieRef = React.createRef();\n    _this.windowFocused = window.hasFocus;\n    _this.inView = false;\n    _this.stickerPreview = StickerStore.stickerPreview;\n    _this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n    _this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n    _this.openIV = Boolean(InstantViewStore.getCurrent());\n    _this.dialogChatId = ApplicationStore.dialogChatId;\n    _this.state = {\n      animationDate: null,\n      hasError: false\n    };\n    return _this;\n  }\n\n  _createClass(Sticker, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error, errorInfo) {\n      console.log('[Sticker] render error', error, errorInfo);\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState, nextContext) {\n      var _this$props4 = this.props,\n          chatId = _this$props4.chatId,\n          messageId = _this$props4.messageId,\n          sticker = _this$props4.sticker,\n          blur = _this$props4.blur,\n          displaySize = _this$props4.displaySize;\n      var animationData = this.state.animationData;\n\n      if (animationData !== nextState.animationData) {\n        return true;\n      }\n\n      if (chatId !== nextProps.chatId) {\n        return true;\n      }\n\n      if (messageId !== nextProps.messageId) {\n        return true;\n      }\n\n      if (sticker !== nextProps.sticker) {\n        return true;\n      }\n\n      if (blur !== nextProps.blur) {\n        return true;\n      }\n\n      if (displaySize !== nextProps.displaySize) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      if (prevProps.sticker !== this.props.sticker) {\n        this.loadContent();\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadContent();\n      ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n      ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n      ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n      ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n      InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n      FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n      FileStore.on('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n      MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n      StickerStore.on('clientUpdateStickerPreview', this.onClientUpdateStickerPreview);\n      StickerStore.on('clientUpdateStickerSet', this.onClientUpdateStickerSet);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n      ApplicationStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n      ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n      ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n      InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n      FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n      FileStore.off('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n      MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n      StickerStore.off('clientUpdateStickerPreview', this.onClientUpdateStickerPreview);\n      StickerStore.off('clientUpdateStickerSet', this.onClientUpdateStickerSet);\n    }\n  }, {\n    key: \"startStopAnimation\",\n    value: function startStopAnimation() {\n      var autoplay = this.props.autoplay;\n      var player = this.lottieRef.current;\n      if (!player) return;\n\n      if (this.windowFocused && !this.stickerPreview && !this.openMediaViewer && !this.openProfileMediaViewer && !this.openIV && !this.dialogChatId) {\n        if (this.entered) {\n          // console.log('[Sticker] play 1');\n          player.play();\n          this.pause = false;\n          return;\n        } // console.log('[Sticker] startStopAnimation', this.openedStickerSet);\n\n\n        if (!this.openedStickerSet) {\n          if (this.paused) {\n            // console.log('[Sticker] play 2');\n            player.play();\n            this.paused = false;\n            return;\n          }\n\n          if (autoplay && this.inView) {\n            // console.log('[Sticker] play 3');\n            player.play();\n            this.paused = false;\n            return;\n          }\n        }\n      } // console.log('[Sticker] pause');\n\n\n      this.paused = player.pause();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          chatId = _this$props5.chatId,\n          messageId = _this$props5.messageId,\n          autoplay = _this$props5.autoplay,\n          className = _this$props5.className,\n          displaySize = _this$props5.displaySize,\n          blur = _this$props5.blur,\n          source = _this$props5.sticker,\n          style = _this$props5.style,\n          openMedia = _this$props5.openMedia,\n          preview = _this$props5.preview;\n      var thumbnail = source.thumbnail,\n          sticker = source.sticker,\n          width = source.width,\n          height = source.height;\n      var _this$state = this.state,\n          animationData = _this$state.animationData,\n          hasError = _this$state.hasError;\n      var isAnimated = isValidAnimatedSticker(source, chatId, messageId);\n      var thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n      var src = getSrc(sticker);\n      var isBlurred = isBlurredThumbnail(thumbnail);\n\n      if (hasError) {\n        var _style = {\n          width: displaySize,\n          height: displaySize\n        };\n\n        if (process.env.NODE_ENV !== 'production') {\n          _style.background = '#ff000066';\n        }\n\n        return React.createElement(\"div\", {\n          className: classNames('sticker', className),\n          style: _style,\n          onClick: openMedia,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: classNames('sticker-image', {\n            'media-blurred': isBlurred && blur\n          }),\n          draggable: false,\n          src: thumbnailSrc,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368\n          },\n          __self: this\n        }));\n      }\n\n      var content = null;\n      var fitSize = getFitSize({\n        width: width,\n        height: height\n      }, displaySize);\n\n      if (fitSize) {\n        content = isAnimated ? React.createElement(React.Fragment, null, animationData ? React.createElement(React.Suspense, {\n          fallback: null,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384\n          },\n          __self: this\n        }, React.createElement(Lottie, {\n          ref: this.lottieRef,\n          options: {\n            autoplay: autoplay,\n            loop: true,\n            animationData: animationData,\n            renderer: 'svg',\n            rendererSettings: {\n              preserveAspectRatio: 'xMinYMin slice',\n              // Supports the same options as the svg element's preserveAspectRatio property\n              clearCanvas: false,\n              progressiveLoad: true,\n              // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\n              hideOnTransparent: true,\n              //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\n              className: 'lottie-svg'\n            }\n          },\n          eventListeners: [{\n            eventName: 'loopComplete',\n            callback: this.handleAnimationLoopComplete\n          }],\n          onMouseOut: this.handleAnimationMouseOut,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385\n          },\n          __self: this\n        })) : React.createElement(\"img\", {\n          className: classNames('sticker-image', {\n            'media-blurred': isBlurred && blur\n          }),\n          draggable: false,\n          src: thumbnailSrc,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410\n          },\n          __self: this\n        })) : React.createElement(React.Fragment, null, src && !preview ? React.createElement(\"img\", {\n          className: \"sticker-image\",\n          draggable: false,\n          src: src,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 421\n          },\n          __self: this\n        }) : React.createElement(\"img\", {\n          className: classNames('sticker-image', {\n            'media-blurred': isBlurred && blur\n          }),\n          draggable: false,\n          src: thumbnailSrc,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 423\n          },\n          __self: this\n        }));\n      }\n\n      var stickerStyle = _objectSpread({\n        width: fitSize ? fitSize.width : 0,\n        height: fitSize ? fitSize.height : 0\n      }, style);\n\n      return React.createElement(\"div\", {\n        className: classNames('sticker', className),\n        style: stickerStyle,\n        onClick: openMedia,\n        onMouseEnter: this.handleMouseEnter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, content);\n    }\n  }], [{\n    key: \"getDerivedStateFromError\",\n    value: function getDerivedStateFromError(error) {\n      return {\n        hasError: true\n      };\n    }\n  }]);\n\n  return Sticker;\n}(React.Component);\n\nSticker.propTypes = {\n  chatId: PropTypes.number,\n  messageId: PropTypes.number,\n  sticker: PropTypes.object.isRequired,\n  openMedia: PropTypes.func,\n  autoplay: PropTypes.bool,\n  play: PropTypes.bool,\n  blur: PropTypes.bool,\n  displaySize: PropTypes.number,\n  preview: PropTypes.bool,\n  source: PropTypes.string\n};\nSticker.defaultProps = {\n  chatId: 0,\n  messageId: 0,\n  openMedia: function openMedia() {},\n  autoplay: true,\n  play: true,\n  blur: true,\n  displaySize: STICKER_DISPLAY_SIZE,\n  preview: false,\n  source: StickerSourceEnum.UNKNOWN\n};\nexport default Sticker;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Message/Media/Sticker.js"],"names":["React","PropTypes","classNames","isBlurredThumbnail","isValidAnimatedSticker","getFitSize","getBlob","getSrc","inflateBlob","STICKER_DISPLAY_SIZE","ApplicationStore","FileStore","InstantViewStore","MessageStore","StickerStore","Lottie","lazy","StickerSourceEnum","Object","freeze","HINTS","MESSAGE","PICKER_HEADER","PICKER","PREVIEW","STICKER_SET","UNKNOWN","Sticker","props","onClientUpdateInstantViewContent","update","openIV","Boolean","getCurrent","startStopAnimation","onClientUpdateDialogChatId","dialogChatId","onClientUpdateMediaViewerContent","openMediaViewer","mediaViewerContent","onClientUpdateProfileMediaViewerContent","openProfileMediaViewer","profileMediaViewerContent","onClientUpdateStickerPreview","stickerPreview","sticker","onClientUpdateMessagesInView","chatId","messageId","key","inView","messages","has","onClientUpdateStickerSet","stickerSet","openedStickerSet","onClientUpdateFocusWindow","focused","isAnimated","windowFocused","onClientUpdateStickerBlob","is_animated","fileId","id","loadContent","forceUpdate","onClientUpdateStickerThumbnailBlob","thumbnail","photo","source","autoplay","play","blob","animationData","result","JSON","parse","console","log","setState","handleMouseEnter","event","handleAnimationMouseEnter","entered","player","lottieRef","current","loopCount","handleAnimationLoopComplete","state","handleAnimationMouseOut","createRef","window","hasFocus","animationDate","hasError","error","errorInfo","nextProps","nextState","nextContext","blur","displaySize","prevProps","prevState","snapshot","on","off","pause","paused","className","style","openMedia","preview","width","height","thumbnailSrc","src","isBlurred","process","env","NODE_ENV","background","content","fitSize","loop","renderer","rendererSettings","preserveAspectRatio","clearCanvas","progressiveLoad","hideOnTransparent","eventName","callback","stickerStyle","Component","propTypes","number","object","isRequired","func","bool","string","defaultProps"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n// import Lottie from '../../Viewer/Lottie';\nimport { isBlurredThumbnail, isValidAnimatedSticker } from '../../../Utils/Media';\nimport { getFitSize } from '../../../Utils/Common';\nimport { getBlob, getSrc } from '../../../Utils/File';\nimport { inflateBlob } from '../../../Workers/BlobInflator';\nimport { STICKER_DISPLAY_SIZE } from '../../../Constants';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport FileStore from '../../../Stores/FileStore';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport StickerStore from '../../../Stores/StickerStore';\nimport './Sticker.css';\n\nconst Lottie = React.lazy(() => import('../../Viewer/Lottie'));\n\nexport const StickerSourceEnum = Object.freeze({\n    HINTS: 'HINTS',\n    MESSAGE: 'MESSAGE',\n    PICKER_HEADER: 'PICKER_HEADER',\n    PICKER: 'PICKER',\n    PREVIEW: 'PREVIEW',\n    STICKER_SET: 'STICKER_SET',\n    UNKNOWN: 'UNKNOWN'\n});\n\nclass Sticker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n        this.windowFocused = window.hasFocus;\n        this.inView = false;\n        this.stickerPreview = StickerStore.stickerPreview;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n        this.dialogChatId = ApplicationStore.dialogChatId;\n\n        this.state = {\n            animationDate: null,\n            hasError: false\n        };\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log('[Sticker] render error', error, errorInfo);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, sticker, blur, displaySize } = this.props;\n        const { animationData } = this.state;\n\n        if (animationData !== nextState.animationData) {\n            return true;\n        }\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (sticker !== nextProps.sticker) {\n            return true;\n        }\n\n        if (blur !== nextProps.blur) {\n            return true;\n        }\n\n        if (displaySize !== nextProps.displaySize) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.sticker !== this.props.sticker) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.on('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        StickerStore.on('clientUpdateStickerPreview', this.onClientUpdateStickerPreview);\n        StickerStore.on('clientUpdateStickerSet', this.onClientUpdateStickerSet);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.off('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        StickerStore.off('clientUpdateStickerPreview', this.onClientUpdateStickerPreview);\n        StickerStore.off('clientUpdateStickerSet', this.onClientUpdateStickerSet);\n    }\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateDialogChatId = update => {\n        this.dialogChatId = ApplicationStore.dialogChatId;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateStickerPreview = update => {\n        this.stickerPreview = update.sticker;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.openedStickerSet = stickerSet;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        const { chatId, messageId, sticker } = this.props;\n\n        const isAnimated = isValidAnimatedSticker(sticker, chatId, messageId);\n        if (!isAnimated) return;\n\n        this.windowFocused = focused;\n        this.startStopAnimation();\n    };\n\n    startStopAnimation() {\n        const { autoplay } = this.props;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        if (\n            this.windowFocused &&\n            !this.stickerPreview &&\n            !this.openMediaViewer &&\n            !this.openProfileMediaViewer &&\n            !this.openIV &&\n            !this.dialogChatId\n        ) {\n            if (this.entered) {\n                // console.log('[Sticker] play 1');\n                player.play();\n                this.pause = false;\n                return;\n            }\n\n            // console.log('[Sticker] startStopAnimation', this.openedStickerSet);\n            if (!this.openedStickerSet) {\n                if (this.paused) {\n                    // console.log('[Sticker] play 2');\n                    player.play();\n                    this.paused = false;\n                    return;\n                }\n\n                if (autoplay && this.inView) {\n                    // console.log('[Sticker] play 3');\n                    player.play();\n                    this.paused = false;\n                    return;\n                }\n            }\n        }\n\n        // console.log('[Sticker] pause');\n        this.paused = player.pause();\n    }\n\n    onClientUpdateStickerBlob = update => {\n        const { sticker, is_animated } = this.props.sticker;\n        const { fileId } = update;\n\n        if (!sticker) return;\n\n        if (sticker.id === fileId) {\n            if (is_animated) {\n                this.loadContent();\n            } else {\n                this.forceUpdate();\n            }\n        }\n    };\n\n    onClientUpdateStickerThumbnailBlob = update => {\n        const { thumbnail } = this.props.sticker;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = async () => {\n        const { chatId, messageId, sticker: source, autoplay, play } = this.props;\n        const { is_animated, sticker } = source;\n        const isAnimated = isValidAnimatedSticker(source, chatId, messageId);\n\n        if (!is_animated) return;\n        if (!isAnimated) return;\n        if (!play) return;\n\n        const blob = getBlob(sticker);\n        if (!blob) return;\n\n        let animationData = null;\n        try {\n            // animationData = StickerStore.getAnimationData(blob);\n            // if (animationData) {\n            //     this.setState({ animationData });\n            //     return;\n            // }\n            const result = await inflateBlob(blob);\n            if (!result) return;\n\n            animationData = JSON.parse(result);\n            // StickerStore.setAnimationData(blob, animationData);\n        } catch (err) {\n            console.log('[Sticker] loadContent error', err);\n        }\n        if (!animationData) return;\n\n        if (autoplay) {\n            this.setState({ animationData });\n        } else {\n            this.animationData = animationData;\n        }\n    };\n\n    handleMouseEnter = event => {\n        const { animationData } = this;\n        // console.log('[Sticker] handleMouseEnter', animationData);\n        if (animationData) {\n            this.setState({ animationData }, () => {\n                this.handleAnimationMouseEnter();\n            });\n        }\n    };\n\n    handleAnimationMouseEnter = () => {\n        // console.log('[Sticker] handleAnimationMouseEnter 1');\n        if (this.props.autoplay) return;\n\n        this.entered = true;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        // console.log('[Sticker] handleAnimationMouseEnter 2');\n        this.loopCount = 0;\n        this.startStopAnimation();\n    };\n\n    handleAnimationLoopComplete = () => {\n        if (this.props.autoplay) return;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        if (!this.entered) this.loopCount += 1;\n        if (this.loopCount > 2) {\n            const { animationData } = this.state;\n            if (animationData) {\n                this.setState({ animationData: null });\n            }\n        }\n    };\n\n    handleAnimationMouseOut = () => {\n        this.entered = false;\n    };\n\n    render() {\n        const {\n            chatId,\n            messageId,\n            autoplay,\n            className,\n            displaySize,\n            blur,\n            sticker: source,\n            style,\n            openMedia,\n            preview\n        } = this.props;\n        const { thumbnail, sticker, width, height } = source;\n        const { animationData, hasError } = this.state;\n\n        const isAnimated = isValidAnimatedSticker(source, chatId, messageId);\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(sticker);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        if (hasError) {\n            const style = {\n                width: displaySize,\n                height: displaySize\n            };\n\n            if (process.env.NODE_ENV !== 'production') {\n                style.background = '#ff000066';\n            }\n\n            return (\n                <div className={classNames('sticker', className)} style={style} onClick={openMedia}>\n                    <img\n                        className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                </div>\n            );\n        }\n\n        let content = null;\n        const fitSize = getFitSize({ width: width, height: height }, displaySize);\n        if (fitSize) {\n            content = isAnimated ? (\n                <>\n                    {animationData ? (\n                        <React.Suspense fallback={null}>\n                            <Lottie\n                                ref={this.lottieRef}\n                                options={{\n                                    autoplay: autoplay,\n                                    loop: true,\n                                    animationData,\n                                    renderer: 'svg',\n                                    rendererSettings: {\n                                        preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\n                                        clearCanvas: false,\n                                        progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\n                                        hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\n                                        className: 'lottie-svg'\n                                    }\n                                }}\n                                eventListeners={[\n                                    {\n                                        eventName: 'loopComplete',\n                                        callback: this.handleAnimationLoopComplete\n                                    }\n                                ]}\n                                onMouseOut={this.handleAnimationMouseOut}\n                            />\n                        </React.Suspense>\n                    ) : (\n                        <img\n                            className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                            draggable={false}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                    )}\n                </>\n            ) : (\n                <>\n                    {src && !preview ? (\n                        <img className='sticker-image' draggable={false} src={src} alt='' />\n                    ) : (\n                        <img\n                            className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                            draggable={false}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                    )}\n                </>\n            );\n        }\n\n        const stickerStyle = {\n            width: fitSize ? fitSize.width : 0,\n            height: fitSize ? fitSize.height : 0,\n            ...style\n        };\n\n        return (\n            <div\n                className={classNames('sticker', className)}\n                style={stickerStyle}\n                onClick={openMedia}\n                onMouseEnter={this.handleMouseEnter}>\n                {content}\n            </div>\n        );\n    }\n}\n\nSticker.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    sticker: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    autoplay: PropTypes.bool,\n    play: PropTypes.bool,\n    blur: PropTypes.bool,\n    displaySize: PropTypes.number,\n    preview: PropTypes.bool,\n    source: PropTypes.string\n};\n\nSticker.defaultProps = {\n    chatId: 0,\n    messageId: 0,\n    openMedia: () => {},\n\n    autoplay: true,\n    play: true,\n    blur: true,\n    displaySize: STICKER_DISPLAY_SIZE,\n    preview: false,\n    source: StickerSourceEnum.UNKNOWN\n};\n\nexport default Sticker;\n"]},"metadata":{},"sourceType":"module"}