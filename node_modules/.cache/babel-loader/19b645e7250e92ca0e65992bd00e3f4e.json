{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Message/Media/Game.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport { getFormattedText } from '../../../Utils/Message';\nimport { getFitSize, getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport './Game.css';\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Game, _React$Component);\n\n  function Game() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Game)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getContent = function () {\n      var _this$props = _this.props,\n          chatId = _this$props.chatId,\n          messageId = _this$props.messageId,\n          game = _this$props.game,\n          size = _this$props.size,\n          displaySize = _this$props.displaySize,\n          openMedia = _this$props.openMedia;\n      if (!game) return null;\n      var photo = game.photo,\n          animation = game.animation;\n\n      if (animation) {\n        var animationSrc = getSrc(animation.animation);\n\n        if (animationSrc || animation.thumbnail) {\n          return React.createElement(Animation, {\n            chatId: chatId,\n            messageId: messageId,\n            animation: animation,\n            openMedia: openMedia,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          });\n        }\n      }\n\n      if (photo) {\n        var style = {\n          width: 0,\n          height: 0\n        };\n        var photoSize = getSize(photo.sizes, size);\n\n        if (photoSize) {\n          var fitPhotoSize = getFitSize(photoSize, displaySize);\n\n          if (fitPhotoSize) {\n            style.width = fitPhotoSize.width;\n            style.height = fitPhotoSize.height;\n          }\n        }\n\n        return React.createElement(Photo, {\n          chatId: chatId,\n          messageId: messageId,\n          photo: photo,\n          style: style,\n          openMedia: openMedia,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        });\n      }\n\n      return null;\n    };\n\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          game = _this$props2.game,\n          t = _this$props2.t;\n      if (!game) return null;\n      var title = game.title,\n          text = game.text,\n          description = game.description;\n      var formattedText = getFormattedText(text, t);\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"game-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, title && React.createElement(\"div\", {\n        className: \"game-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, title), formattedText && React.createElement(\"div\", {\n        className: \"game-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, formattedText), description && React.createElement(\"div\", {\n        className: \"game-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, description), this.getContent()));\n    }\n  }]);\n\n  return Game;\n}(React.Component);\n\nGame.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  messageId: PropTypes.number.isRequired,\n  game: PropTypes.object.isRequired,\n  openMedia: PropTypes.func,\n  size: PropTypes.number,\n  displaySize: PropTypes.number\n};\nGame.defaultProps = {\n  size: PHOTO_SIZE,\n  displaySize: PHOTO_DISPLAY_SIZE\n};\nexport default withTranslation()(Game);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Message/Media/Game.js"],"names":["React","PropTypes","withTranslation","Animation","Photo","getFormattedText","getFitSize","getSize","getSrc","PHOTO_DISPLAY_SIZE","PHOTO_SIZE","Game","getContent","props","chatId","messageId","game","size","displaySize","openMedia","photo","animation","animationSrc","thumbnail","style","width","height","photoSize","sizes","fitPhotoSize","t","title","text","description","formattedText","Component","propTypes","number","isRequired","object","func","defaultProps"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport { getFormattedText } from '../../../Utils/Message';\nimport { getFitSize, getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport './Game.css';\n\nclass Game extends React.Component {\n    getContent = () => {\n        const { chatId, messageId, game, size, displaySize, openMedia } = this.props;\n        if (!game) return null;\n\n        const { photo, animation } = game;\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />;\n            }\n        }\n\n        if (photo) {\n            let style = {\n                width: 0,\n                height: 0\n            };\n            const photoSize = getSize(photo.sizes, size);\n            if (photoSize) {\n                const fitPhotoSize = getFitSize(photoSize, displaySize);\n                if (fitPhotoSize) {\n                    style.width = fitPhotoSize.width;\n                    style.height = fitPhotoSize.height;\n                }\n            }\n\n            return <Photo chatId={chatId} messageId={messageId} photo={photo} style={style} openMedia={openMedia} />;\n        }\n\n        return null;\n    };\n\n    render() {\n        const { game, t } = this.props;\n        if (!game) return null;\n\n        const { title, text, description } = game;\n        const formattedText = getFormattedText(text, t);\n\n        return (\n            <div className='game'>\n                <div className='border' />\n                <div className='game-wrapper'>\n                    {title && <div className='game-title'>{title}</div>}\n                    {formattedText && <div className='game-text'>{formattedText}</div>}\n                    {description && <div className='game-description'>{description}</div>}\n                    {this.getContent()}\n                </div>\n            </div>\n        );\n    }\n}\n\nGame.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    game: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nGame.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withTranslation()(Game);\n"]},"metadata":{},"sourceType":"module"}