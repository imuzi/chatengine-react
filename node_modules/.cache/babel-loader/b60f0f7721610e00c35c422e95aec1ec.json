{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnLeft/ThemePicker.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nvar ThemePicker =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ThemePicker, _React$Component);\n\n  function ThemePicker(props) {\n    var _this;\n\n    _classCallCheck(this, ThemePicker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ThemePicker).call(this, props));\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        type: event.target.value\n      });\n\n      ApplicationStore.emit('clientUpdateThemeChanging', {\n        type: event.target.value,\n        primary: _this.getColor(_this.state.color)\n      });\n    };\n\n    _this.handleAccentChange = function (event) {\n      _this.setState({\n        color: event.target.value\n      });\n\n      ApplicationStore.emit('clientUpdateThemeChanging', {\n        type: _this.state.type,\n        primary: _this.getColor(event.target.value)\n      });\n    };\n\n    _this.getColorString = function (value) {\n      switch (value) {\n        case red['500']:\n          return 'red';\n\n        case orange['500']:\n          return 'orange';\n\n        case amber['500']:\n          return 'amber';\n\n        case green['500']:\n          return 'green';\n\n        case '#50A2E9':\n          return 'blue';\n\n        case indigo['500']:\n          return 'indigo';\n\n        case deepPurple['500']:\n          return 'deepPurple';\n      }\n\n      return null;\n    };\n\n    _this.getColor = function (value) {\n      switch (value) {\n        case 'red':\n          return red;\n\n        case 'orange':\n          return orange;\n\n        case 'amber':\n          return amber;\n\n        case 'green':\n          return green;\n\n        case 'blue':\n          return {\n            main: '#50A2E9'\n          };\n\n        case 'indigo':\n          return indigo;\n\n        case 'deepPurple':\n          return deepPurple;\n      }\n\n      return null;\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.open = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.state = {\n      open: false,\n      type: _this.props.theme.palette.type,\n      color: _this.getColorString(_this.props.theme.palette.primary.main)\n    };\n    return _this;\n  }\n\n  _createClass(ThemePicker, [{\n    key: \"render\",\n    value: function render() {\n      var t = this.props.t;\n      var _this$state = this.state,\n          type = _this$state.type,\n          color = _this$state.color,\n          open = _this$state.open;\n      return React.createElement(Dialog, {\n        transitionDuration: 0,\n        open: open,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"alert-dialog-title\",\n        \"aria-describedby\": \"alert-dialog-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"alert-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, t('Appearance')), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        component: \"fieldset\",\n        className: \"theme-picker-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        focused: true,\n        component: \"legend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, t('Theme')), React.createElement(RadioGroup, {\n        \"aria-label\": \"theme\",\n        name: \"theme1\",\n        className: \"theme-picker-group\",\n        value: type,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        value: \"light\",\n        control: React.createElement(Radio, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }),\n        label: \"Light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        value: \"dark\",\n        control: React.createElement(Radio, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }),\n        label: \"Dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }))), React.createElement(FormControl, {\n        component: \"fieldset\",\n        className: \"theme-picker-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        focused: true,\n        component: \"legend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, t('Accent')), React.createElement(RadioGroup, {\n        \"aria-label\": \"accent\",\n        name: \"accent1\",\n        className: \"theme-picker-group\",\n        value: color,\n        onChange: this.handleAccentChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        value: \"red\",\n        control: React.createElement(Radio, {\n          color: \"primary\",\n          classes: {\n            root: 'theme-picker-red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }),\n        label: \"Red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        value: \"orange\",\n        control: React.createElement(Radio, {\n          color: \"primary\",\n          classes: {\n            root: 'theme-picker-orange'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }),\n        label: \"Orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        value: \"amber\",\n        control: React.createElement(Radio, {\n          color: \"primary\",\n          classes: {\n            root: 'theme-picker-amber'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }),\n        label: \"Amber\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        value: \"green\",\n        control: React.createElement(Radio, {\n          color: \"primary\",\n          classes: {\n            root: 'theme-picker-green'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }),\n        label: \"Green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        value: \"blue\",\n        control: React.createElement(Radio, {\n          color: \"primary\",\n          classes: {\n            root: 'theme-picker-blue'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }),\n        label: \"Blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        value: \"indigo\",\n        control: React.createElement(Radio, {\n          color: \"primary\",\n          classes: {\n            root: 'theme-picker-indigo'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }),\n        label: \"Indigo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        value: \"deepPurple\",\n        control: React.createElement(Radio, {\n          color: \"primary\",\n          classes: {\n            root: 'theme-picker-deep-purple'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }),\n        label: \"Deep Purple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return ThemePicker;\n}(React.Component);\n\nThemePicker.propTypes = {};\nvar enhance = compose(withSaveRef(), withTheme, withTranslation(), withRestoreRef());\nexport default enhance(ThemePicker);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnLeft/ThemePicker.js"],"names":["React","PropTypes","compose","withRestoreRef","withSaveRef","withTheme","withTranslation","Dialog","DialogContent","DialogTitle","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","red","orange","amber","green","blue","indigo","deepPurple","ApplicationStore","ThemePicker","props","handleChange","event","setState","type","target","value","emit","primary","getColor","state","color","handleAccentChange","getColorString","main","handleClose","open","theme","palette","t","root","Component","propTypes","enhance"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n"]},"metadata":{},"sourceType":"module"}