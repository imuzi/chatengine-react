{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Message/Media/AudioAction.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport FileStore from '../../../Stores/FileStore';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './AudioAction.css';\n\nvar AudioAction =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AudioAction, _React$Component);\n\n  function AudioAction(props) {\n    var _this;\n\n    _classCallCheck(this, AudioAction);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AudioAction).call(this, props));\n\n    _this.onClientUpdateMediaSeeking = function (update) {\n      var _this$props = _this.props,\n          chatId = _this$props.chatId,\n          messageId = _this$props.messageId,\n          duration = _this$props.duration;\n      var _this$state = _this.state,\n          playerDuration = _this$state.duration,\n          active = _this$state.active,\n          file = _this$state.file;\n\n      if (chatId === update.chatId && messageId === update.messageId) {\n        var d = playerDuration || duration;\n\n        _this.setState({\n          seekProgress: update.value,\n          seeking: true,\n          timeString: _this.getTimeString(d * update.value, d, active, file)\n        });\n      }\n    };\n\n    _this.onClientUpdateMediaSeek = function (update) {\n      var _this$props2 = _this.props,\n          chatId = _this$props2.chatId,\n          messageId = _this$props2.messageId,\n          duration = _this$props2.duration;\n      var _this$state2 = _this.state,\n          playerDuration = _this$state2.duration,\n          active = _this$state2.active,\n          file = _this$state2.file;\n\n      if (chatId === update.chatId && messageId === update.messageId) {\n        var d = playerDuration || duration;\n\n        _this.setState({\n          seekProgress: 0,\n          seeking: false,\n          timeString: _this.getTimeString(d * update.value, d, active, file)\n        });\n      }\n    };\n\n    _this.onClientUpdateMediaEnd = function (update) {\n      var _this$props3 = _this.props,\n          chatId = _this$props3.chatId,\n          messageId = _this$props3.messageId,\n          duration = _this$props3.duration;\n      var _this$state3 = _this.state,\n          active = _this$state3.active,\n          file = _this$state3.file;\n\n      if (chatId === update.chatId && messageId === update.messageId) {\n        var playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n\n        _this.setState({\n          active: false,\n          currentTime: 0,\n          timeString: _this.getTimeString(0, playerDuration, false, file)\n        });\n      }\n    };\n\n    _this.onClientUpdateMediaTime = function (update) {\n      var _this$props4 = _this.props,\n          chatId = _this$props4.chatId,\n          messageId = _this$props4.messageId,\n          duration = _this$props4.duration;\n      var _this$state4 = _this.state,\n          active = _this$state4.active,\n          file = _this$state4.file,\n          seekProgress = _this$state4.seekProgress,\n          seeking = _this$state4.seeking;\n\n      if (chatId === update.chatId && messageId === update.messageId) {\n        var playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n        var time = seeking ? seekProgress * playerDuration : update.currentTime;\n\n        _this.setState({\n          currentTime: update.currentTime,\n          duration: playerDuration,\n          timeString: _this.getTimeString(time, playerDuration, active, file)\n        });\n      }\n    };\n\n    _this.onClientUpdateMediaActive = function (update) {\n      var _this$props5 = _this.props,\n          chatId = _this$props5.chatId,\n          messageId = _this$props5.messageId,\n          duration = _this$props5.duration;\n      var _this$state5 = _this.state,\n          active = _this$state5.active,\n          currentTime = _this$state5.currentTime,\n          file = _this$state5.file;\n\n      if (chatId === update.chatId && messageId === update.messageId) {\n        _this.setState({\n          active: true,\n          currentTime: active ? currentTime : 0,\n          timeString: active ? _this.state.timeString : _this.getTimeString(0, duration, true, file)\n        });\n      } else if (active) {\n        _this.setState({\n          active: false,\n          currentTime: 0,\n          timeString: _this.getTimeString(0, duration, false, file)\n        });\n      }\n    };\n\n    _this.onUpdateFile = function (update) {\n      var currentFile = _this.state.file;\n      var nextFile = update.file;\n\n      if (currentFile && currentFile.id === nextFile.id) {\n        _this.setState({\n          file: nextFile,\n          prevFile: currentFile\n        });\n      }\n    };\n\n    _this.getTimeString = function (currentTime, duration, active, file) {\n      var isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n      var isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n      var durationString = getDurationString(Math.floor(duration || 0));\n      var currentTimeString = getDurationString(Math.floor(currentTime || 0));\n      return active && isDownloadingCompleted ? \"\".concat(currentTimeString, \" / \").concat(durationString) : \"\".concat(durationString);\n    };\n\n    var message = PlayerStore.message,\n        _time = PlayerStore.time;\n    var _this$props6 = _this.props,\n        _chatId = _this$props6.chatId,\n        _messageId = _this$props6.messageId,\n        _duration = _this$props6.duration,\n        _file = _this$props6.file;\n\n    var _active = message && message.chat_id === _chatId && message.id === _messageId;\n\n    var _currentTime = _active && _time ? _time.currentTime : 0;\n\n    var audioDuration = _active && _time && _time.duration ? _time.duration : _duration;\n\n    var _currentFile = FileStore.get(_file.id) || _file;\n\n    _this.state = {\n      active: _active,\n      currentTime: _currentTime,\n      seekProgress: 0,\n      duration: audioDuration,\n      timeString: _this.getTimeString(_currentTime, _duration, _active, _currentFile),\n      prevFile: null,\n      file: _currentFile\n    };\n    return _this;\n  }\n\n  _createClass(AudioAction, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      var theme = this.props.theme;\n      var _this$state6 = this.state,\n          active = _this$state6.active,\n          timeString = _this$state6.timeString,\n          file = _this$state6.file,\n          prevFile = _this$state6.prevFile;\n\n      if (nextProps.theme !== theme) {\n        return true;\n      }\n\n      if (nextState.timeString !== timeString) {\n        return true;\n      }\n\n      if (nextState.active !== active) {\n        return true;\n      }\n\n      if (nextState.file !== file) {\n        return true;\n      }\n\n      if (nextState.prevFile !== prevFile) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      FileStore.on('updateFile', this.onUpdateFile);\n      PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n      PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n      PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n      PlayerStore.on('clientUpdateMediaSeeking', this.onClientUpdateMediaSeeking);\n      PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      FileStore.off('updateFile', this.onUpdateFile);\n      PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n      PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n      PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n      PlayerStore.off('clientUpdateMediaSeeking', this.onClientUpdateMediaSeeking);\n      PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props7 = this.props,\n          title = _this$props7.title,\n          meta = _this$props7.meta;\n      var _this$state7 = this.state,\n          active = _this$state7.active,\n          file = _this$state7.file,\n          timeString = _this$state7.timeString;\n      if (!file) return null;\n      var isDownloadingActive = file.local && file.local.is_downloading_active;\n      var isUploadingActive = file.remote && file.remote.is_uploading_active;\n      var isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n      var isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n      var size = getFileSize(file);\n      var progressSize = null;\n\n      if (isDownloadingActive) {\n        progressSize = getDownloadedSize(file);\n      } else if (isUploadingActive) {\n        progressSize = getUploadedSize(file);\n      }\n\n      var sizeString = progressSize ? \"\".concat(progressSize, \" / \").concat(size) : \"\".concat(size);\n      var strings = [];\n\n      if (!isDownloadingCompleted) {\n        strings.push(sizeString);\n      }\n\n      if (!isDownloadingActive) {\n        strings.push(timeString);\n      }\n\n      return React.createElement(\"div\", {\n        className: \"audio-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, !active && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, title), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, strings.join(', ')), meta);\n    }\n  }]);\n\n  return AudioAction;\n}(React.Component);\n\nAudioAction.propTypes = {\n  chatId: PropTypes.number,\n  messageId: PropTypes.number,\n  duration: PropTypes.number.isRequired,\n  file: PropTypes.object.isRequired,\n  title: PropTypes.string\n};\nexport default AudioAction;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Message/Media/AudioAction.js"],"names":["React","PropTypes","getDownloadedSize","getUploadedSize","getFileSize","getDurationString","FileStore","PlayerStore","AudioAction","props","onClientUpdateMediaSeeking","update","chatId","messageId","duration","state","playerDuration","active","file","d","setState","seekProgress","value","seeking","timeString","getTimeString","onClientUpdateMediaSeek","onClientUpdateMediaEnd","Infinity","currentTime","onClientUpdateMediaTime","time","onClientUpdateMediaActive","onUpdateFile","currentFile","nextFile","id","prevFile","isDownloadingCompleted","local","is_downloading_completed","isUploadingCompleted","remote","is_uploading_completed","durationString","Math","floor","currentTimeString","message","chat_id","audioDuration","get","nextProps","nextState","theme","on","off","title","meta","isDownloadingActive","is_downloading_active","isUploadingActive","is_uploading_active","size","progressSize","sizeString","strings","push","join","Component","propTypes","number","isRequired","object","string"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport FileStore from '../../../Stores/FileStore';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './AudioAction.css';\n\nclass AudioAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration, file } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n        const currentFile = FileStore.get(file.id) || file;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            seekProgress: 0,\n            duration: audioDuration,\n            timeString: this.getTimeString(currentTime, duration, active, currentFile),\n\n            prevFile: null,\n            file: currentFile\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme } = this.props;\n        const { active, timeString, file, prevFile } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.timeString !== timeString) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n        PlayerStore.on('clientUpdateMediaSeeking', this.onClientUpdateMediaSeeking);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n        PlayerStore.off('clientUpdateMediaSeeking', this.onClientUpdateMediaSeeking);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    onClientUpdateMediaSeeking = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { duration: playerDuration, active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const d = playerDuration || duration;\n\n            this.setState({\n                seekProgress: update.value,\n                seeking: true,\n                timeString: this.getTimeString(d * update.value, d, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { duration: playerDuration, active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const d = playerDuration || duration;\n\n            this.setState({\n                seekProgress: 0,\n                seeking: false,\n                timeString: this.getTimeString(d * update.value, d, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, playerDuration, false, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file, seekProgress, seeking } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            const time = seeking ? seekProgress * playerDuration : update.currentTime;\n\n            this.setState({\n                currentTime: update.currentTime,\n                duration: playerDuration,\n                timeString: this.getTimeString(time, playerDuration, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                timeString: active ? this.state.timeString : this.getTimeString(0, duration, true, file)\n            });\n        } else if (active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    getTimeString = (currentTime, duration, active, file) => {\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        return active && isDownloadingCompleted ? `${currentTimeString} / ${durationString}` : `${durationString}`;\n    };\n\n    render() {\n        const { title, meta } = this.props;\n        const { active, file, timeString } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n        const sizeString = progressSize ? `${progressSize} / ${size}` : `${size}`;\n        const strings = [];\n        if (!isDownloadingCompleted) {\n            strings.push(sizeString);\n        }\n        if (!isDownloadingActive) {\n            strings.push(timeString);\n        }\n\n        return (\n            <div className='audio-action'>\n                {!active && <span>{title}</span>}\n                {<span>{strings.join(', ')}</span>}\n                {meta}\n            </div>\n        );\n    }\n}\n\nAudioAction.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    duration: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired,\n\n    title: PropTypes.string\n};\n\nexport default AudioAction;\n"]},"metadata":{},"sourceType":"module"}