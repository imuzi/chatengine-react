{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Popup/PollOptionResult.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../Tile/User';\nimport UserPlaceholder from '../Tile/UserPlaceholder';\nimport { openUser } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PollOptionResult.css';\n\nvar PollOptionResult =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PollOptionResult, _React$Component);\n\n  function PollOptionResult() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PollOptionResult);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PollOptionResult)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onClick = function () {\n      var userId = _this.props.userId;\n      if (!userId) return;\n      openUser(userId, true);\n      setTimeout(function () {\n        TdLibController.clientUpdate({\n          '@type': 'clientUpdateClosePollResults'\n        });\n      }, 0);\n    };\n\n    return _this;\n  }\n\n  _createClass(PollOptionResult, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          index = _this$props.index,\n          userId = _this$props.userId;\n      var content = userId ? React.createElement(User, {\n        userId: userId,\n        showStatus: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }) : React.createElement(UserPlaceholder, {\n        index: index,\n        showStatus: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      });\n      return React.createElement(ListItem, {\n        button: true,\n        className: \"user-list-item\",\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, content);\n    }\n  }]);\n\n  return PollOptionResult;\n}(React.Component);\n\nPollOptionResult.propTypes = {\n  index: PropTypes.number.isRequired,\n  userId: PropTypes.number\n};\nexport default PollOptionResult;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Popup/PollOptionResult.js"],"names":["React","PropTypes","ListItem","User","UserPlaceholder","openUser","TdLibController","PollOptionResult","onClick","userId","props","setTimeout","clientUpdate","index","content","Component","propTypes","number","isRequired"],"mappings":";;;;;;;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAO,wBAAP;;IAEMC,gB;;;;;;;;;;;;;;;;;;UACFC,O,GAAU,YAAM;AAAA,UACJC,MADI,GACO,MAAKC,KADZ,CACJD,MADI;AAEZ,UAAI,CAACA,MAAL,EAAa;AAEbJ,MAAAA,QAAQ,CAACI,MAAD,EAAS,IAAT,CAAR;AAEAE,MAAAA,UAAU,CAAC,YAAM;AACbL,QAAAA,eAAe,CAACM,YAAhB,CAA6B;AACzB,mBAAS;AADgB,SAA7B;AAGH,OAJS,EAIP,CAJO,CAAV;AAKH,K;;;;;;;6BAEQ;AAAA,wBACqB,KAAKF,KAD1B;AAAA,UACGG,KADH,eACGA,KADH;AAAA,UACUJ,MADV,eACUA,MADV;AAGL,UAAMK,OAAO,GAAGL,MAAM,GAClB,oBAAC,IAAD;AAAM,QAAA,MAAM,EAAEA,MAAd;AAAsB,QAAA,UAAU,EAAE,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADkB,GAGlB,oBAAC,eAAD;AAAiB,QAAA,KAAK,EAAEI,KAAxB;AAA+B,QAAA,UAAU,EAAE,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ;AAMA,aACI,oBAAC,QAAD;AAAU,QAAA,MAAM,MAAhB;AAAiB,QAAA,SAAS,EAAC,gBAA3B;AAA4C,QAAA,OAAO,EAAE,KAAKL,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKM,OADL,CADJ;AAKH;;;;EA5B0Bd,KAAK,CAACe,S;;AA+BrCR,gBAAgB,CAACS,SAAjB,GAA6B;AACzBH,EAAAA,KAAK,EAAEZ,SAAS,CAACgB,MAAV,CAAiBC,UADC;AAEzBT,EAAAA,MAAM,EAAER,SAAS,CAACgB;AAFO,CAA7B;AAKA,eAAeV,gBAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../Tile/User';\nimport UserPlaceholder from '../Tile/UserPlaceholder';\nimport { openUser } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PollOptionResult.css';\n\nclass PollOptionResult extends React.Component {\n    onClick = () => {\n        const { userId } = this.props;\n        if (!userId) return;\n\n        openUser(userId, true);\n\n        setTimeout(() => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateClosePollResults'\n            });\n        }, 0);\n    };\n\n    render() {\n        const { index, userId } = this.props;\n\n        const content = userId ? (\n            <User userId={userId} showStatus={false} />\n        ) : (\n            <UserPlaceholder index={index} showStatus={false} />\n        );\n\n        return (\n            <ListItem button className='user-list-item' onClick={this.onClick}>\n                {content}\n            </ListItem>\n        );\n    }\n}\n\nPollOptionResult.propTypes = {\n    index: PropTypes.number.isRequired,\n    userId: PropTypes.number\n};\n\nexport default PollOptionResult;\n"]},"metadata":{},"sourceType":"module"}