{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Popup/CreatePollOption.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nvar CreatePollOption =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreatePollOption, _React$Component);\n\n  function CreatePollOption(props) {\n    var _this;\n\n    _classCallCheck(this, CreatePollOption);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreatePollOption).call(this, props));\n\n    _this.getText = function () {\n      return _this.optionTextRef.current.innerText;\n    };\n\n    _this.focus = function () {\n      var toEnd = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var node = _this.optionTextRef.current;\n      focusNode(node, toEnd);\n    };\n\n    _this.handleDelete = function () {\n      var _this$props = _this.props,\n          option = _this$props.option,\n          onDelete = _this$props.onDelete;\n      if (!option) return;\n      if (!onDelete) return;\n      onDelete(option.id);\n    };\n\n    _this.handleInput = function (event) {\n      var option = _this.props.option;\n      event.preventDefault();\n      var node = _this.optionTextRef.current;\n      var length = node.dataset.length;\n      var maxLength = node.dataset.maxLength;\n\n      var text = _this.getText();\n\n      _this.setState({\n        remainLength: length - text.length\n      });\n\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdatePollOption',\n        id: option.id,\n        text: text\n      });\n    };\n\n    _this.handleKeyDown = function (event) {\n      var node = _this.optionTextRef.current;\n      var maxLength = node.dataset.maxLength;\n\n      var innerText = _this.getText();\n\n      var length = innerText.length;\n      var hasSelection = false;\n      var selection = window.getSelection();\n      var isSpecial = utils.isSpecial(event);\n      var isNavigational = utils.isNavigational(event);\n\n      if (selection) {\n        hasSelection = !!selection.toString();\n      }\n\n      switch (event.key) {\n        case 'Backspace':\n          {\n            var text = _this.getText();\n\n            if (!text) {\n              var _this$props2 = _this.props,\n                  option = _this$props2.option,\n                  onDelete = _this$props2.onDelete;\n\n              if (onDelete) {\n                onDelete(option.id, true);\n              }\n\n              event.preventDefault();\n              return false;\n            }\n\n            break;\n          }\n\n        case 'Enter':\n          {\n            var _this$props3 = _this.props,\n                _option = _this$props3.option,\n                onFocusNext = _this$props3.onFocusNext;\n\n            if (_option && onFocusNext) {\n              onFocusNext(_option.id);\n            }\n\n            event.preventDefault();\n            return false;\n          }\n\n        case 'ArrowUp':\n          {\n            var _selection = window.getSelection();\n\n            if (!_selection) break;\n            if (!_selection.isCollapsed) break;\n            var firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n            if (!firstChild || _selection.anchorNode === firstChild && !_selection.anchorOffset) {\n              var _this$props4 = _this.props,\n                  _option2 = _this$props4.option,\n                  onFocusPrev = _this$props4.onFocusPrev;\n\n              if (onFocusPrev) {\n                onFocusPrev(_option2.id);\n              }\n\n              event.preventDefault();\n              return false;\n            }\n\n            break;\n          }\n\n        case 'ArrowDown':\n          {\n            var _selection2 = window.getSelection();\n\n            if (!_selection2) break;\n            if (!_selection2.isCollapsed) break;\n            var lastChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n            if (!lastChild || _selection2.anchorNode === lastChild && _selection2.anchorOffset === lastChild.length) {\n              var _this$props5 = _this.props,\n                  _option3 = _this$props5.option,\n                  _onFocusNext = _this$props5.onFocusNext;\n\n              if (_onFocusNext) {\n                _onFocusNext(_option3.id);\n              }\n\n              event.preventDefault();\n              return false;\n            }\n\n            break;\n          }\n      }\n\n      if (isSpecial || isNavigational) {\n        return true;\n      }\n\n      if (length >= maxLength && !hasSelection) {\n        event.preventDefault();\n        return false;\n      }\n\n      return true;\n    };\n\n    _this.handlePaste = function (event) {\n      event.preventDefault();\n      var node = _this.optionTextRef.current;\n      var maxLength = node.dataset.maxLength;\n      var selection = window.getSelection();\n      var selectionString = selection ? selection.toString() : '';\n\n      var innerText = _this.getText();\n\n      if (innerText.length - selection.length >= maxLength) return;\n      var pasteText = event.clipboardData.getData('text/plain');\n      if (!pasteText) return;\n      pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n      if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n        pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n      }\n\n      document.execCommand('insertText', false, pasteText);\n    };\n\n    _this.handleChange = function () {\n      var option = _this.props.option;\n      if (!option) return;\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdatePollChooseOption',\n        id: option.id\n      });\n    };\n\n    _this.optionTextRef = React.createRef();\n    _this.state = {\n      remainLength: POLL_OPTION_MAX_LENGTH\n    };\n    return _this;\n  }\n\n  _createClass(CreatePollOption, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          t = _this$props6.t,\n          option = _this$props6.option;\n      var remainLength = this.state.remainLength;\n      var is_chosen = option.is_chosen;\n      return React.createElement(\"div\", {\n        className: \"create-poll-option\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"create-poll-option-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(Radio, {\n        key: Date.now(),\n        classes: {\n          root: 'create-poll-radio-root'\n        },\n        color: \"primary\",\n        checked: is_chosen,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        ref: this.optionTextRef,\n        className: \"create-poll-option-text\",\n        contentEditable: true,\n        suppressContentEditableWarning: true,\n        placeholder: t('Option'),\n        \"data-length\": POLL_OPTION_LENGTH,\n        \"data-max-length\": POLL_OPTION_MAX_LENGTH,\n        onInput: this.handleInput,\n        onKeyDown: this.handleKeyDown,\n        onPaste: this.handlePaste,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"create-poll-option-delete-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        className: \"create-poll-option-button\",\n        onClick: this.handleDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        fontSize: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"create-poll-option-bottom-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && React.createElement(Typography, {\n        align: \"center\",\n        className: \"create-poll-option-subtitle\",\n        color: remainLength >= 0 ? 'textSecondary' : 'error',\n        variant: \"subtitle1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, remainLength));\n    }\n  }]);\n\n  return CreatePollOption;\n}(React.Component);\n\nCreatePollOption.propTypes = {\n  option: PropTypes.object.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onFocusPrev: PropTypes.func.isRequired,\n  onFocusNext: PropTypes.func.isRequired\n};\nvar enhance = compose(withSaveRef(), withTranslation(), withRestoreRef());\nexport default enhance(CreatePollOption);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Popup/CreatePollOption.js"],"names":["React","PropTypes","compose","withTranslation","CloseIcon","IconButton","Radio","Typography","focusNode","withRestoreRef","withSaveRef","utils","POLL_OPTION_HINT_LENGTH","POLL_OPTION_LENGTH","POLL_OPTION_MAX_LENGTH","TdLibController","CreatePollOption","props","getText","optionTextRef","current","innerText","focus","toEnd","node","handleDelete","option","onDelete","id","handleInput","event","preventDefault","length","dataset","maxLength","text","setState","remainLength","clientUpdate","handleKeyDown","hasSelection","selection","window","getSelection","isSpecial","isNavigational","toString","key","onFocusNext","isCollapsed","firstChild","childNodes","anchorNode","anchorOffset","onFocusPrev","lastChild","handlePaste","selectionString","pasteText","clipboardData","getData","replace","substr","document","execCommand","handleChange","createRef","state","t","is_chosen","Date","now","root","Component","propTypes","object","isRequired","func","enhance"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n"]},"metadata":{},"sourceType":"module"}