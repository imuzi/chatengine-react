{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Tile/SharedMedia/SharedVideo.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nvar SharedVideo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SharedVideo, _React$Component);\n\n  function SharedVideo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SharedVideo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SharedVideo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      contextMenu: false,\n      left: 0,\n      top: 0\n    };\n\n    _this.onClientUpdateVideoThumbnailBlob = function (update) {\n      var thumbnail = _this.props.video.thumbnail;\n      var fileId = update.fileId;\n      if (!thumbnail) return;\n\n      if (thumbnail.photo && thumbnail.photo.id === fileId) {\n        _this.forceUpdate();\n      }\n    };\n\n    _this.handleOpenContextMenu =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var contextMenu, left, top;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (event) {\n                  event.preventDefault();\n                  event.stopPropagation();\n                }\n\n                contextMenu = _this.state.contextMenu;\n\n                if (contextMenu) {\n                  _this.setState({\n                    contextMenu: false\n                  });\n                } else {\n                  left = event.clientX;\n                  top = event.clientY;\n\n                  _this.setState({\n                    contextMenu: true,\n                    left: left,\n                    top: top\n                  });\n                }\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleCloseContextMenu = function (event) {\n      if (event) {\n        event.stopPropagation();\n      }\n\n      _this.setState({\n        contextMenu: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SharedVideo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          chatId = _this$props.chatId,\n          messageId = _this$props.messageId,\n          openMedia = _this$props.openMedia,\n          style = _this$props.style,\n          showOpenMessage = _this$props.showOpenMessage;\n      var _this$props$video = this.props.video,\n          minithumbnail = _this$props$video.minithumbnail,\n          thumbnail = _this$props$video.thumbnail,\n          duration = _this$props$video.duration;\n      var _this$state = this.state,\n          contextMenu = _this$state.contextMenu,\n          left = _this$state.left,\n          top = _this$state.top;\n      var miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n      var thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n      var isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90) : Boolean(miniSrc);\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"shared-photo\",\n        style: style,\n        onClick: openMedia,\n        onContextMenu: this.handleOpenContextMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"shared-video-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classNames('shared-video-content', {\n          'media-blurred': isBlurred,\n          'media-mini-blurred': !thumbSrc && isBlurred\n        }),\n        style: {\n          backgroundImage: \"url(\".concat(thumbSrc || miniSrc, \")\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"shared-video-meta\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, getDurationString(duration)))), React.createElement(ContextMenu, {\n        chatId: chatId,\n        messageId: messageId,\n        anchorPosition: {\n          top: top,\n          left: left\n        },\n        open: contextMenu,\n        showOpenMessage: showOpenMessage,\n        onClose: this.handleCloseContextMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SharedVideo;\n}(React.Component);\n\nSharedVideo.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  messageId: PropTypes.number.isRequired,\n  video: PropTypes.object.isRequired,\n  showOpenMessage: PropTypes.bool.isRequired,\n  openMedia: PropTypes.func,\n  size: PropTypes.number,\n  thumbnailSize: PropTypes.number,\n  style: PropTypes.object\n};\nSharedVideo.defaultProps = {\n  size: PHOTO_SIZE,\n  thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\nexport default SharedVideo;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Tile/SharedMedia/SharedVideo.js"],"names":["React","PropTypes","classNames","ContextMenu","getSrc","getDurationString","isBlurredThumbnail","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","THUMBNAIL_BLURRED_SIZE_90","FileStore","SharedVideo","state","contextMenu","left","top","onClientUpdateVideoThumbnailBlob","update","thumbnail","props","video","fileId","photo","id","forceUpdate","handleOpenContextMenu","event","preventDefault","stopPropagation","setState","clientX","clientY","handleCloseContextMenu","on","off","chatId","messageId","openMedia","style","showOpenMessage","minithumbnail","duration","miniSrc","data","thumbSrc","isBlurred","Boolean","backgroundImage","Component","propTypes","number","isRequired","object","bool","func","size","thumbnailSize","defaultProps"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n"]},"metadata":{},"sourceType":"module"}