{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Message/Media/Document.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport DocumentIcon from '../../../Assets/Icons/Document';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport DocumentAction from './DocumentAction';\nimport { getExtension } from '../../../Utils/File';\nimport './Document.css';\n\nvar Document =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Document, _React$Component);\n\n  function Document() {\n    _classCallCheck(this, Document);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Document).apply(this, arguments));\n  }\n\n  _createClass(Document, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          document = _this$props.document,\n          openMedia = _this$props.openMedia,\n          width = _this$props.width,\n          height = _this$props.height,\n          meta = _this$props.meta,\n          title = _this$props.title,\n          caption = _this$props.caption;\n      if (!document) return null;\n      var minithumbnail = document.minithumbnail,\n          thumbnail = document.thumbnail,\n          file_name = document.file_name;\n      var file = document.document;\n      var style = width && height ? {\n        width: width,\n        height: height\n      } : null;\n\n      var completeIconFunc = function completeIconFunc(thumb) {\n        return thumb ? null : React.createElement(\"div\", {\n          className: \"document-tile-complete-icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(DocumentIcon, {\n          className: \"document-tile-icon-fill\",\n          viewBox: \"0 0 54 54\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"document-tile-file-ext\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, getExtension(file_name)));\n      };\n\n      return React.createElement(\"div\", {\n        className: classNames('document', {\n          'media-title': title\n        }),\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(DocumentTile, {\n        minithumbnail: minithumbnail,\n        thumbnail: thumbnail,\n        file: file,\n        openMedia: openMedia,\n        icon: React.createElement(DownloadIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }),\n        completeIcon: completeIconFunc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"document-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"document-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"document-name\",\n        onClick: openMedia,\n        title: file_name,\n        \"data-name\": file_name,\n        \"data-ext\": '.' + getExtension(file_name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, file_name)), React.createElement(DocumentAction, {\n        file: file,\n        meta: caption ? null : meta,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Document;\n}(React.Component);\n\nDocument.propTypes = {\n  chatId: PropTypes.number,\n  messageId: PropTypes.number,\n  document: PropTypes.object.isRequired,\n  openMedia: PropTypes.func,\n  width: PropTypes.number,\n  height: PropTypes.number\n};\nexport default Document;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Message/Media/Document.js"],"names":["React","PropTypes","classNames","DownloadIcon","DocumentIcon","DocumentTile","DocumentAction","getExtension","Document","props","document","openMedia","width","height","meta","title","caption","minithumbnail","thumbnail","file_name","file","style","completeIconFunc","thumb","Component","propTypes","chatId","number","messageId","object","isRequired","func"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport DocumentIcon from '../../../Assets/Icons/Document';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport DocumentAction from './DocumentAction';\nimport { getExtension } from '../../../Utils/File';\nimport './Document.css';\n\nclass Document extends React.Component {\n    render() {\n        const { document, openMedia, width, height, meta, title, caption } = this.props;\n        if (!document) return null;\n\n        const { minithumbnail, thumbnail, file_name } = document;\n        const file = document.document;\n\n        const style = width && height ? { width, height } : null;\n        const completeIconFunc = thumb =>\n            thumb ? null : (\n                <div className='document-tile-complete-icon'>\n                    <DocumentIcon className='document-tile-icon-fill' viewBox='0 0 54 54' />\n                    <div className='document-tile-file-ext'>{getExtension(file_name)}</div>\n                </div>\n            );\n\n        return (\n            <div className={classNames('document', { 'media-title': title })} style={style}>\n                <DocumentTile\n                    minithumbnail={minithumbnail}\n                    thumbnail={thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<DownloadIcon />}\n                    completeIcon={completeIconFunc}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a\n                            className='document-name'\n                            onClick={openMedia}\n                            title={file_name}\n                            data-name={file_name}\n                            data-ext={'.' + getExtension(file_name)}>\n                            {file_name}\n                        </a>\n                    </div>\n                    <DocumentAction file={file} meta={caption ? null : meta} />\n                </div>\n            </div>\n        );\n    }\n}\n\nDocument.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    document: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    width: PropTypes.number,\n    height: PropTypes.number\n};\n\nexport default Document;\n"]},"metadata":{},"sourceType":"module"}