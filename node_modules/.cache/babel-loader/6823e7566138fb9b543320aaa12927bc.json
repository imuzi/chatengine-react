{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\nvar timestamp = null;\nexport function openInstantView(_x) {\n  return _openInstantView.apply(this, arguments);\n}\n\nfunction _openInstantView() {\n  _openInstantView = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(url) {\n    var now, result, newWindow;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            now = timestamp = new Date();\n            _context.next = 4;\n            return TdLibController.send({\n              '@type': 'getWebPageInstantView',\n              url: url,\n              force_full: true\n            });\n\n          case 4:\n            result = _context.sent;\n\n            if (!(timestamp !== now)) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 7:\n            console.log('[IV] open', result);\n            loadInstantViewContent(result);\n            setInstantViewContent({\n              instantView: result\n            });\n            _context.next = 17;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            newWindow = window.open();\n            newWindow.opener = null;\n            newWindow.location = url;\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 12]]);\n  }));\n  return _openInstantView.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Actions/InstantView.js"],"names":["loadInstantViewContent","setInstantViewContent","TdLibController","timestamp","openInstantView","url","now","Date","send","force_full","result","console","log","instantView","newWindow","window","open","opener","location"],"mappings":";;;AAAA;;;;;;AAOA,SAASA,sBAAT,QAAuC,eAAvC;AACA,SAASC,qBAAT,QAAsC,UAAtC;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AAEA,IAAIC,SAAS,GAAG,IAAhB;AAEA,gBAAsBC,eAAtB;AAAA;AAAA;;;;;2BAAO,iBAA+BC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEOC,YAAAA,GAFP,GAEcH,SAAS,GAAG,IAAII,IAAJ,EAF1B;AAAA;AAAA,mBAGsBL,eAAe,CAACM,IAAhB,CAAqB;AACtC,uBAAS,uBAD6B;AAEtCH,cAAAA,GAAG,EAAHA,GAFsC;AAGtCI,cAAAA,UAAU,EAAE;AAH0B,aAArB,CAHtB;;AAAA;AAGOC,YAAAA,MAHP;;AAAA,kBAQKP,SAAS,KAAKG,GARnB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAUCK,YAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,MAAzB;AACAV,YAAAA,sBAAsB,CAACU,MAAD,CAAtB;AACAT,YAAAA,qBAAqB,CAAC;AAAEY,cAAAA,WAAW,EAAEH;AAAf,aAAD,CAArB;AAZD;AAAA;;AAAA;AAAA;AAAA;AAcOI,YAAAA,SAdP,GAcmBC,MAAM,CAACC,IAAP,EAdnB;AAeCF,YAAAA,SAAS,CAACG,MAAV,GAAmB,IAAnB;AACAH,YAAAA,SAAS,CAACI,QAAV,GAAqBb,GAArB;;AAhBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nlet timestamp = null;\n\nexport async function openInstantView(url) {\n    try {\n        const now = (timestamp = new Date());\n        const result = await TdLibController.send({\n            '@type': 'getWebPageInstantView',\n            url,\n            force_full: true\n        });\n        if (timestamp !== now) return;\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}