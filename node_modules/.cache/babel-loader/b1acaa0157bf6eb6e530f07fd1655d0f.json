{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnMiddle/StickersPicker.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport StickerSet from './StickerSet';\nimport StickersPickerHeader from './StickersPickerHeader';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { getNeighborStickersFromSets, getStickers } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersPicker.css';\n\nvar StickersPicker =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StickersPicker, _React$Component);\n\n  function StickersPicker(props) {\n    var _this;\n\n    _classCallCheck(this, StickersPicker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StickersPicker).call(this, props));\n\n    _this.onUpdateInstalledStickerSets = function (update) {\n      var is_masks = update.is_masks,\n          sticker_set_ids = update.sticker_set_ids;\n      if (!is_masks) return;\n\n      _this.filterSets();\n    };\n\n    _this.onUpdateRecentStickers = function (update) {\n      _this.reloadRecentContent();\n    };\n\n    _this.scrollTop = function () {\n      _this.scrollRef.current.scrollTop = 0;\n    };\n\n    _this.loadContent =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(recent, stickerSets, sets) {\n        var result, promises, slicedSets, headerStickers;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (recent) {\n                  _context.next = 4;\n                  break;\n                }\n\n                _context.next = 3;\n                return TdLibController.send({\n                  '@type': 'getRecentStickers',\n                  is_attached: false\n                });\n\n              case 3:\n                recent = _context.sent;\n\n              case 4:\n                if (sets) {\n                  _context.next = 13;\n                  break;\n                }\n\n                _context.next = 7;\n                return TdLibController.send({\n                  '@type': 'getInstalledStickerSets',\n                  is_masks: false\n                });\n\n              case 7:\n                result = _context.sent;\n                promises = [];\n                result.sets.forEach(function (x) {\n                  promises.push(TdLibController.send({\n                    '@type': 'getStickerSet',\n                    set_id: x.id\n                  }));\n                });\n                _context.next = 12;\n                return Promise.all(promises);\n\n              case 12:\n                sets = _context.sent;\n\n              case 13:\n                slicedSets = sets.slice(0, 5);\n                headerStickers = sets.reduce(function (preview, set) {\n                  if (set.stickers.length > 0) {\n                    preview.push(set.stickers[0]);\n                  }\n\n                  return preview;\n                }, []);\n\n                _this.setState({\n                  recent: recent,\n                  stickerSets: stickerSets,\n                  sets: slicedSets,\n                  fullSets: sets,\n                  headerStickers: headerStickers\n                });\n\n                _this.setsLength = slicedSets.length;\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2, _x3) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.loadInViewContentOnScroll = function () {\n      _this.loadInViewContent();\n    };\n\n    _this.loadInViewContentOnScrollEnd = function () {\n      _this.loadInViewContent(400);\n    };\n\n    _this.loadInViewContent = function () {\n      var padding = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var scroll = _this.scrollRef.current;\n      var sets = _this.state.sets;\n      var inViewItems = [];\n      sets.forEach(function (x) {\n        var item = _this.itemsMap.get(x.id);\n\n        var node = ReactDOM.findDOMNode(item);\n\n        if (node) {\n          var topBorder = scroll.scrollTop - padding;\n          var bottomBorder = scroll.scrollTop + scroll.offsetHeight + padding;\n          var nodeTop = node.offsetTop;\n          var nodeBottom = node.offsetTop + node.clientHeight;\n\n          if (nodeTop >= topBorder && node.offsetTop <= bottomBorder) {\n            inViewItems.push(x);\n          } else if (nodeBottom >= topBorder && nodeBottom <= bottomBorder) {\n            inViewItems.push(x);\n          } else if (nodeTop <= topBorder && nodeBottom >= bottomBorder) {\n            inViewItems.push(x);\n          }\n        }\n      });\n      inViewItems.forEach(function (x) {\n        var store = FileStore.getStore();\n\n        if (!_this.loadedSets.has(x.id)) {\n          _this.loadedSets.set(x.id, x.id);\n\n          loadStickerSetContent(store, x);\n        }\n      });\n    };\n\n    _this.updatePosition = function () {\n      var scroll = _this.scrollRef.current;\n      var sets = _this.state.sets;\n      var minDiff = scroll.scrollHeight;\n      var position = 0;\n      var firstOffsetTop = 0;\n      sets.forEach(function (x, pos) {\n        var element = _this.itemsMap.get(x.id);\n\n        if (element) {\n          var node = ReactDOM.findDOMNode(element);\n\n          if (node) {\n            firstOffsetTop = pos === 0 ? node.offsetTop : firstOffsetTop;\n            var offsetTop = node.offsetTop - firstOffsetTop;\n\n            if (node && offsetTop <= scroll.scrollTop) {\n              var diff = Math.abs(scroll.scrollTop - offsetTop);\n\n              if (diff <= minDiff) {\n                minDiff = diff;\n                position = pos;\n              }\n            }\n          }\n        }\n      });\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateStickerSetPosition',\n        position: position\n      });\n    };\n\n    _this.handleScroll =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var scroll, loadChunk, _this$state, sets, stickerSets, promises, result;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              //this.loadInViewContentOnScroll();\n              _this.loadInViewContentOnScrollEnd();\n\n              _this.updatePosition();\n\n              scroll = _this.scrollRef.current;\n\n              if (!_this.loadingChunk) {\n                _context2.next = 5;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 5:\n              loadChunk = false;\n\n              if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight - 400) {\n                loadChunk = true;\n              }\n\n              if (loadChunk) {\n                _context2.next = 9;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", false);\n\n            case 9:\n              _this$state = _this.state, sets = _this$state.sets, stickerSets = _this$state.stickerSets;\n\n              if (!(stickerSets.sets.length === sets.length)) {\n                _context2.next = 12;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 12:\n              _this.loadingChunk = true;\n              promises = [];\n              stickerSets.sets.slice(_this.setsLength, _this.setsLength + 5).forEach(function (x) {\n                promises.push(TdLibController.send({\n                  '@type': 'getStickerSet',\n                  set_id: x.id\n                }));\n              });\n              _context2.next = 17;\n              return Promise.all(promises).finally(function () {\n                _this.loadingChunk = false;\n              });\n\n            case 17:\n              result = _context2.sent;\n              _this.setsLength += result.length;\n\n              _this.setState({\n                sets: sets.concat(result)\n              });\n\n            case 20:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    _this.loadPreviewContent = function (stickerId) {\n      var _this$state2 = _this.state,\n          recent = _this$state2.recent,\n          sets = _this$state2.sets;\n      var sticker = getStickers([recent].concat(sets)).find(function (x) {\n        return x.sticker.id === stickerId;\n      });\n      if (!sticker) return;\n      var store = FileStore.getStore();\n      loadStickerContent(store, sticker, null);\n      var stickersPerRow = 5;\n      var preloadStickers = getNeighborStickersFromSets(sticker, sets, stickersPerRow);\n      preloadStickers.forEach(function (x) {\n        loadStickerContent(store, x, null);\n      });\n    };\n\n    _this.handleMouseEnter = function (event) {\n      var stickerId = Number(event.currentTarget.dataset.stickerId);\n      if (!stickerId) return;\n      if (!_this.mouseDown) return;\n\n      if (_this.mouseDownStickerId !== stickerId) {\n        _this.mouseDownStickerId = null;\n      }\n\n      _this.setState({\n        previewStickerId: stickerId\n      });\n\n      _this.loadPreviewContent(stickerId);\n\n      var onPreview = _this.props.onPreview;\n      var _this$state3 = _this.state,\n          recent = _this$state3.recent,\n          sets = _this$state3.sets;\n      var sticker = getStickers([recent].concat(sets)).find(function (x) {\n        return x.sticker.id === stickerId;\n      });\n      onPreview(sticker);\n    };\n\n    _this.handleMouseDown = function (event) {\n      var stickerId = Number(event.currentTarget.dataset.stickerId);\n      if (!stickerId) return;\n      _this.mouseDownStickerId = stickerId;\n      var now = Date.now();\n\n      _this.setState({\n        previewStickerId: stickerId,\n        timestamp: now,\n        showPreview: false,\n        cancelSend: false\n      });\n\n      setTimeout(function () {\n        var timestamp = _this.state.timestamp;\n\n        if (timestamp === now) {\n          _this.setState({\n            showPreview: true,\n            cancelSend: true\n          }, function () {\n            var onPreview = _this.props.onPreview;\n            var _this$state4 = _this.state,\n                recent = _this$state4.recent,\n                sets = _this$state4.sets;\n            var sticker = getStickers([recent].concat(sets)).find(function (x) {\n              return x.sticker.id === stickerId;\n            });\n            onPreview(sticker);\n          });\n        }\n      }, 500);\n\n      _this.loadPreviewContent(stickerId);\n\n      _this.mouseDown = true;\n      document.addEventListener('mouseup', _this.handleMouseUp);\n      event.preventDefault();\n      event.stopPropagation();\n      return false;\n    };\n\n    _this.handleMouseUp = function () {\n      _this.setState({\n        previewStickerId: 0,\n        timestamp: 0,\n        showPreview: false\n      });\n\n      var onPreview = _this.props.onPreview;\n      onPreview(null);\n      _this.mouseDown = false;\n      document.removeEventListener('mouseup', _this.handleMouseUp);\n    };\n\n    _this.handleStickerSelect = function (sticker) {\n      var onSelect = _this.props.onSelect;\n      var cancelSend = _this.state.cancelSend;\n      if (cancelSend) return;\n      onSelect(sticker);\n    };\n\n    _this.handleSelectSet =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(position) {\n        var _this$state5, sets, stickerSets, _assertThisInitialize, scrollRef, element, node, scroll, promises, result, concatSets;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _this$state5 = _this.state, sets = _this$state5.sets, stickerSets = _this$state5.stickerSets;\n                _assertThisInitialize = _assertThisInitialized(_this), scrollRef = _assertThisInitialize.scrollRef;\n\n                if (!(position < sets.length)) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                element = _this.itemsMap.get(sets[position].id);\n\n                if (element) {\n                  node = ReactDOM.findDOMNode(element);\n\n                  if (node) {\n                    scroll = scrollRef.current;\n                    scroll.scrollTop = node.offsetTop;\n                  }\n                }\n\n                _context3.next = 21;\n                break;\n\n              case 7:\n                if (!(position < stickerSets.sets.length)) {\n                  _context3.next = 21;\n                  break;\n                }\n\n                if (!_this.loadingChunk) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 10:\n                if (!(stickerSets.sets.length === sets.length)) {\n                  _context3.next = 12;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 12:\n                _this.loadingChunk = true;\n                promises = [];\n                stickerSets.sets.slice(_this.setsLength, position + 1).forEach(function (x) {\n                  promises.push(TdLibController.send({\n                    '@type': 'getStickerSet',\n                    set_id: x.id\n                  }));\n                });\n                _context3.next = 17;\n                return Promise.all(promises).finally(function () {\n                  return _this.loadingChunk = false;\n                });\n\n              case 17:\n                result = _context3.sent;\n                _this.setsLength += result.length;\n                concatSets = sets.concat(result);\n\n                _this.setState({\n                  sets: concatSets\n                }, function () {\n                  if (position < concatSets.length) {\n                    _this.handleSelectSet(position);\n                  }\n                });\n\n              case 21:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.handleDeleteRecent = function () {\n      TdLibController.send({\n        '@type': 'clearRecentStickers',\n        is_attached: false\n      });\n    };\n\n    _this.handleDeleteStickerSet = function (id) {\n      TdLibController.send({\n        '@type': 'changeStickerSet',\n        set_id: id,\n        is_installed: false\n      });\n    };\n\n    _this.scrollRef = React.createRef();\n    _this.itemsMap = new Map();\n    _this.loadedSets = new Map();\n    _this.state = {\n      recent: null,\n      stickerSets: null,\n      sets: [],\n      headerStickers: [],\n      position: 0\n    };\n    _this.loadInViewContentOnScrollEnd = debounce(_this.loadInViewContentOnScrollEnd, 100);\n    _this.loadInViewContentOnScroll = throttle(_this.loadInViewContentOnScroll, 2000);\n    _this.updatePosition = throttle(_this.updatePosition, 250);\n    return _this;\n  }\n\n  _createClass(StickersPicker, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState, nextContext) {\n      var _this$state6 = this.state,\n          position = _this$state6.position,\n          recent = _this$state6.recent,\n          stickerSets = _this$state6.stickerSets,\n          sets = _this$state6.sets,\n          showPreview = _this$state6.showPreview;\n\n      if (nextState.recent !== recent) {\n        return true;\n      }\n\n      if (nextState.stickerSets !== stickerSets) {\n        return true;\n      }\n\n      if (nextState.sets !== sets) {\n        return true;\n      }\n\n      if (nextState.showPreview !== showPreview) {\n        return true;\n      }\n\n      if (nextState.position !== position) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      StickerStore.on('updateInstalledStickerSets', this.onUpdateInstalledStickerSets);\n      StickerStore.on('updateRecentStickers', this.onUpdateRecentStickers);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      StickerStore.off('updateInstalledStickerSets', this.onUpdateInstalledStickerSets);\n      StickerStore.off('updateRecentStickers', this.onUpdateRecentStickers);\n    }\n  }, {\n    key: \"filterSets\",\n    value: function filterSets(sticker_set_ids) {\n      var _this$state7 = this.state,\n          sets = _this$state7.sets,\n          stickerSets = _this$state7.stickerSets;\n    }\n  }, {\n    key: \"reloadRecentContent\",\n    value: function () {\n      var _reloadRecentContent = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var recent;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return TdLibController.send({\n                  '@type': 'getRecentStickers',\n                  is_attached: false\n                });\n\n              case 2:\n                recent = _context4.sent;\n                this.setState({\n                  recent: recent\n                });\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function reloadRecentContent() {\n        return _reloadRecentContent.apply(this, arguments);\n      }\n\n      return reloadRecentContent;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var t = this.props.t;\n      var _this$state8 = this.state,\n          recent = _this$state8.recent,\n          stickerSets = _this$state8.stickerSets,\n          sets = _this$state8.sets,\n          headerStickers = _this$state8.headerStickers; // console.log('[sp] render', recent, stickerSets, sets);\n      // if (!stickerSets) return null;\n      //\n      // if (!sets) return null;\n      // if (!sets.length) return null;\n\n      this.itemsMap.clear();\n      var items = sets.map(function (x) {\n        return React.createElement(StickerSet, {\n          key: x.id,\n          ref: function ref(el) {\n            return _this2.itemsMap.set(x.id, el);\n          },\n          info: x,\n          onSelect: _this2.handleStickerSelect,\n          onMouseDown: _this2.handleMouseDown,\n          onMouseEnter: _this2.handleMouseEnter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 425\n          },\n          __self: this\n        });\n      });\n      var recentInfo = recent && recent.stickers.length > 0 ? {\n        stickers: recent.stickers,\n        title: t('RecentStickers')\n      } : null;\n      return React.createElement(\"div\", {\n        className: \"stickers-picker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      }, React.createElement(StickersPickerHeader, {\n        onSelect: this.handleSelectSet,\n        stickers: headerStickers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        ref: this.scrollRef,\n        className: \"stickers-picker-scroll\",\n        onScroll: this.handleScroll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, Boolean(recentInfo) && React.createElement(StickerSet, {\n        info: recentInfo,\n        onSelect: this.handleStickerSelect,\n        onMouseDown: this.handleMouseDown,\n        onMouseEnter: this.handleMouseEnter,\n        onDeleteClick: this.handleDeleteRecent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }), items));\n    }\n  }]);\n\n  return StickersPicker;\n}(React.Component);\n\nStickersPicker.propTypes = {\n  onSelect: PropTypes.func.isRequired,\n  onPreview: PropTypes.func.isRequired\n};\nvar enhance = compose(withSaveRef(), withTranslation(), withRestoreRef());\nexport default enhance(StickersPicker);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnMiddle/StickersPicker.js"],"names":["React","ReactDOM","PropTypes","compose","withRestoreRef","withSaveRef","withTranslation","StickerSet","StickersPickerHeader","debounce","throttle","loadStickerContent","loadStickerSetContent","getNeighborStickersFromSets","getStickers","FileStore","StickerStore","TdLibController","StickersPicker","props","onUpdateInstalledStickerSets","update","is_masks","sticker_set_ids","filterSets","onUpdateRecentStickers","reloadRecentContent","scrollTop","scrollRef","current","loadContent","recent","stickerSets","sets","send","is_attached","result","promises","forEach","x","push","set_id","id","Promise","all","slicedSets","slice","headerStickers","reduce","preview","set","stickers","length","setState","fullSets","setsLength","loadInViewContentOnScroll","loadInViewContent","loadInViewContentOnScrollEnd","padding","scroll","state","inViewItems","item","itemsMap","get","node","findDOMNode","topBorder","bottomBorder","offsetHeight","nodeTop","offsetTop","nodeBottom","clientHeight","store","getStore","loadedSets","has","updatePosition","minDiff","scrollHeight","position","firstOffsetTop","pos","element","diff","Math","abs","clientUpdate","handleScroll","loadingChunk","loadChunk","finally","concat","loadPreviewContent","stickerId","sticker","find","stickersPerRow","preloadStickers","handleMouseEnter","event","Number","currentTarget","dataset","mouseDown","mouseDownStickerId","previewStickerId","onPreview","handleMouseDown","now","Date","timestamp","showPreview","cancelSend","setTimeout","document","addEventListener","handleMouseUp","preventDefault","stopPropagation","removeEventListener","handleStickerSelect","onSelect","handleSelectSet","concatSets","handleDeleteRecent","handleDeleteStickerSet","is_installed","createRef","Map","nextProps","nextState","nextContext","on","off","t","clear","items","map","el","recentInfo","title","Boolean","Component","propTypes","func","isRequired","enhance"],"mappings":";;;;;;;;;;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,iBAA5C;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,oBAAnC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,kBAA1D;AACA,SAASC,2BAAT,EAAsCC,WAAtC,QAAyD,mBAAzD;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAO,sBAAP;;IAEMC,c;;;;;AACF,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,wFAAMA,KAAN;;AADe,UAwDnBC,4BAxDmB,GAwDY,UAAAC,MAAM,EAAI;AAAA,UAC7BC,QAD6B,GACCD,MADD,CAC7BC,QAD6B;AAAA,UACnBC,eADmB,GACCF,MADD,CACnBE,eADmB;AAErC,UAAI,CAACD,QAAL,EAAe;;AAEf,YAAKE,UAAL;AACH,KA7DkB;;AAAA,UA+DnBC,sBA/DmB,GA+DM,UAAAJ,MAAM,EAAI;AAC/B,YAAKK,mBAAL;AACH,KAjEkB;;AAAA,UAkFnBC,SAlFmB,GAkFP,YAAM;AACd,YAAKC,SAAL,CAAeC,OAAf,CAAuBF,SAAvB,GAAmC,CAAnC;AACH,KApFkB;;AAAA,UAsFnBG,WAtFmB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAsFL,iBAAOC,MAAP,EAAeC,WAAf,EAA4BC,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGLF,MAHK;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAISd,eAAe,CAACiB,IAAhB,CAAqB;AAChC,2BAAS,mBADuB;AAEhCC,kBAAAA,WAAW,EAAE;AAFmB,iBAArB,CAJT;;AAAA;AAINJ,gBAAAA,MAJM;;AAAA;AAAA,oBAULE,IAVK;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAWehB,eAAe,CAACiB,IAAhB,CAAqB;AACtC,2BAAS,yBAD6B;AAEtCZ,kBAAAA,QAAQ,EAAE;AAF4B,iBAArB,CAXf;;AAAA;AAWAc,gBAAAA,MAXA;AAgBAC,gBAAAA,QAhBA,GAgBW,EAhBX;AAiBND,gBAAAA,MAAM,CAACH,IAAP,CAAYK,OAAZ,CAAoB,UAAAC,CAAC,EAAI;AACrBF,kBAAAA,QAAQ,CAACG,IAAT,CACIvB,eAAe,CAACiB,IAAhB,CAAqB;AACjB,6BAAS,eADQ;AAEjBO,oBAAAA,MAAM,EAAEF,CAAC,CAACG;AAFO,mBAArB,CADJ;AAMH,iBAPD;AAjBM;AAAA,uBA0BOC,OAAO,CAACC,GAAR,CAAYP,QAAZ,CA1BP;;AAAA;AA0BNJ,gBAAAA,IA1BM;;AAAA;AA6BJY,gBAAAA,UA7BI,GA6BSZ,IAAI,CAACa,KAAL,CAAW,CAAX,EAAc,CAAd,CA7BT;AA8BJC,gBAAAA,cA9BI,GA8Bad,IAAI,CAACe,MAAL,CAAY,UAACC,OAAD,EAAUC,GAAV,EAAkB;AACjD,sBAAIA,GAAG,CAACC,QAAJ,CAAaC,MAAb,GAAsB,CAA1B,EAA6B;AACzBH,oBAAAA,OAAO,CAACT,IAAR,CAAaU,GAAG,CAACC,QAAJ,CAAa,CAAb,CAAb;AACH;;AACD,yBAAOF,OAAP;AACH,iBALsB,EAKpB,EALoB,CA9Bb;;AAqCV,sBAAKI,QAAL,CAAc;AACVtB,kBAAAA,MAAM,EAANA,MADU;AAEVC,kBAAAA,WAAW,EAAXA,WAFU;AAGVC,kBAAAA,IAAI,EAAEY,UAHI;AAIVS,kBAAAA,QAAQ,EAAErB,IAJA;AAKVc,kBAAAA,cAAc,EAAdA;AALU,iBAAd;;AAOA,sBAAKQ,UAAL,GAAkBV,UAAU,CAACO,MAA7B;;AA5CU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAtFK;;AAAA;AAAA;AAAA;AAAA;;AAAA,UAqInBI,yBArImB,GAqIS,YAAM;AAC9B,YAAKC,iBAAL;AACH,KAvIkB;;AAAA,UAyInBC,4BAzImB,GAyIY,YAAM;AACjC,YAAKD,iBAAL,CAAuB,GAAvB;AACH,KA3IkB;;AAAA,UA6InBA,iBA7ImB,GA6IC,YAAiB;AAAA,UAAhBE,OAAgB,uEAAN,CAAM;AACjC,UAAMC,MAAM,GAAG,MAAKhC,SAAL,CAAeC,OAA9B;AADiC,UAGzBI,IAHyB,GAGhB,MAAK4B,KAHW,CAGzB5B,IAHyB;AAKjC,UAAM6B,WAAW,GAAG,EAApB;AACA7B,MAAAA,IAAI,CAACK,OAAL,CAAa,UAAAC,CAAC,EAAI;AACd,YAAMwB,IAAI,GAAG,MAAKC,QAAL,CAAcC,GAAd,CAAkB1B,CAAC,CAACG,EAApB,CAAb;;AACA,YAAMwB,IAAI,GAAGjE,QAAQ,CAACkE,WAAT,CAAqBJ,IAArB,CAAb;;AACA,YAAIG,IAAJ,EAAU;AACN,cAAME,SAAS,GAAGR,MAAM,CAACjC,SAAP,GAAmBgC,OAArC;AACA,cAAMU,YAAY,GAAGT,MAAM,CAACjC,SAAP,GAAmBiC,MAAM,CAACU,YAA1B,GAAyCX,OAA9D;AAEA,cAAMY,OAAO,GAAGL,IAAI,CAACM,SAArB;AACA,cAAMC,UAAU,GAAGP,IAAI,CAACM,SAAL,GAAiBN,IAAI,CAACQ,YAAzC;;AAEA,cAAIH,OAAO,IAAIH,SAAX,IAAwBF,IAAI,CAACM,SAAL,IAAkBH,YAA9C,EAA4D;AACxDP,YAAAA,WAAW,CAACtB,IAAZ,CAAiBD,CAAjB;AACH,WAFD,MAEO,IAAIkC,UAAU,IAAIL,SAAd,IAA2BK,UAAU,IAAIJ,YAA7C,EAA2D;AAC9DP,YAAAA,WAAW,CAACtB,IAAZ,CAAiBD,CAAjB;AACH,WAFM,MAEA,IAAIgC,OAAO,IAAIH,SAAX,IAAwBK,UAAU,IAAIJ,YAA1C,EAAwD;AAC3DP,YAAAA,WAAW,CAACtB,IAAZ,CAAiBD,CAAjB;AACH;AACJ;AACJ,OAlBD;AAoBAuB,MAAAA,WAAW,CAACxB,OAAZ,CAAoB,UAAAC,CAAC,EAAI;AACrB,YAAMoC,KAAK,GAAG5D,SAAS,CAAC6D,QAAV,EAAd;;AACA,YAAI,CAAC,MAAKC,UAAL,CAAgBC,GAAhB,CAAoBvC,CAAC,CAACG,EAAtB,CAAL,EAAgC;AAC5B,gBAAKmC,UAAL,CAAgB3B,GAAhB,CAAoBX,CAAC,CAACG,EAAtB,EAA0BH,CAAC,CAACG,EAA5B;;AACA9B,UAAAA,qBAAqB,CAAC+D,KAAD,EAAQpC,CAAR,CAArB;AACH;AACJ,OAND;AAOH,KA9KkB;;AAAA,UAgLnBwC,cAhLmB,GAgLF,YAAM;AACnB,UAAMnB,MAAM,GAAG,MAAKhC,SAAL,CAAeC,OAA9B;AADmB,UAGXI,IAHW,GAGF,MAAK4B,KAHH,CAGX5B,IAHW;AAInB,UAAI+C,OAAO,GAAGpB,MAAM,CAACqB,YAArB;AACA,UAAIC,QAAQ,GAAG,CAAf;AACA,UAAIC,cAAc,GAAG,CAArB;AACAlD,MAAAA,IAAI,CAACK,OAAL,CAAa,UAACC,CAAD,EAAI6C,GAAJ,EAAY;AACrB,YAAMC,OAAO,GAAG,MAAKrB,QAAL,CAAcC,GAAd,CAAkB1B,CAAC,CAACG,EAApB,CAAhB;;AACA,YAAI2C,OAAJ,EAAa;AACT,cAAMnB,IAAI,GAAGjE,QAAQ,CAACkE,WAAT,CAAqBkB,OAArB,CAAb;;AACA,cAAInB,IAAJ,EAAU;AACNiB,YAAAA,cAAc,GAAGC,GAAG,KAAK,CAAR,GAAYlB,IAAI,CAACM,SAAjB,GAA6BW,cAA9C;AAEA,gBAAMX,SAAS,GAAGN,IAAI,CAACM,SAAL,GAAiBW,cAAnC;;AACA,gBAAIjB,IAAI,IAAIM,SAAS,IAAIZ,MAAM,CAACjC,SAAhC,EAA2C;AACvC,kBAAM2D,IAAI,GAAGC,IAAI,CAACC,GAAL,CAAS5B,MAAM,CAACjC,SAAP,GAAmB6C,SAA5B,CAAb;;AACA,kBAAIc,IAAI,IAAIN,OAAZ,EAAqB;AACjBA,gBAAAA,OAAO,GAAGM,IAAV;AACAJ,gBAAAA,QAAQ,GAAGE,GAAX;AACH;AACJ;AACJ;AACJ;AACJ,OAjBD;AAmBAnE,MAAAA,eAAe,CAACwE,YAAhB,CAA6B;AACzB,iBAAS,gCADgB;AAEzBP,QAAAA,QAAQ,EAARA;AAFyB,OAA7B;AAIH,KA9MkB;;AAAA,UAgNnBQ,YAhNmB;AAAA;AAAA;AAAA;AAAA,6BAgNJ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACX;AACA,oBAAKhC,4BAAL;;AACA,oBAAKqB,cAAL;;AAEMnB,cAAAA,MALK,GAKI,MAAKhC,SAAL,CAAeC,OALnB;;AAAA,mBAOP,MAAK8D,YAPE;AAAA;AAAA;AAAA;;AAAA;;AAAA;AASPC,cAAAA,SATO,GASK,KATL;;AAUX,kBAAIhC,MAAM,CAACjC,SAAP,GAAmBiC,MAAM,CAACU,YAA1B,IAA0CV,MAAM,CAACqB,YAAP,GAAsB,GAApE,EAAyE;AACrEW,gBAAAA,SAAS,GAAG,IAAZ;AACH;;AAZU,kBAcNA,SAdM;AAAA;AAAA;AAAA;;AAAA,gDAeA,KAfA;;AAAA;AAAA,4BAkBmB,MAAK/B,KAlBxB,EAkBH5B,IAlBG,eAkBHA,IAlBG,EAkBGD,WAlBH,eAkBGA,WAlBH;;AAAA,oBAmBPA,WAAW,CAACC,IAAZ,CAAiBmB,MAAjB,KAA4BnB,IAAI,CAACmB,MAnB1B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAqBX,oBAAKuC,YAAL,GAAoB,IAApB;AACMtD,cAAAA,QAtBK,GAsBM,EAtBN;AAuBXL,cAAAA,WAAW,CAACC,IAAZ,CAAiBa,KAAjB,CAAuB,MAAKS,UAA5B,EAAwC,MAAKA,UAAL,GAAkB,CAA1D,EAA6DjB,OAA7D,CAAqE,UAAAC,CAAC,EAAI;AACtEF,gBAAAA,QAAQ,CAACG,IAAT,CACIvB,eAAe,CAACiB,IAAhB,CAAqB;AACjB,2BAAS,eADQ;AAEjBO,kBAAAA,MAAM,EAAEF,CAAC,CAACG;AAFO,iBAArB,CADJ;AAMH,eAPD;AAvBW;AAAA,qBAgCUC,OAAO,CAACC,GAAR,CAAYP,QAAZ,EAAsBwD,OAAtB,CAA8B,YAAM;AACrD,sBAAKF,YAAL,GAAoB,KAApB;AACH,eAFoB,CAhCV;;AAAA;AAgCLvD,cAAAA,MAhCK;AAoCX,oBAAKmB,UAAL,IAAmBnB,MAAM,CAACgB,MAA1B;;AACA,oBAAKC,QAAL,CAAc;AAAEpB,gBAAAA,IAAI,EAAEA,IAAI,CAAC6D,MAAL,CAAY1D,MAAZ;AAAR,eAAd;;AArCW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAhNI;;AAAA,UAwPnB2D,kBAxPmB,GAwPE,UAAAC,SAAS,EAAI;AAAA,yBACL,MAAKnC,KADA;AAAA,UACtB9B,MADsB,gBACtBA,MADsB;AAAA,UACdE,IADc,gBACdA,IADc;AAG9B,UAAMgE,OAAO,GAAGnF,WAAW,CAAC,CAACiB,MAAD,EAAS+D,MAAT,CAAgB7D,IAAhB,CAAD,CAAX,CAAmCiE,IAAnC,CAAwC,UAAA3D,CAAC;AAAA,eAAIA,CAAC,CAAC0D,OAAF,CAAUvD,EAAV,KAAiBsD,SAArB;AAAA,OAAzC,CAAhB;AACA,UAAI,CAACC,OAAL,EAAc;AAEd,UAAMtB,KAAK,GAAG5D,SAAS,CAAC6D,QAAV,EAAd;AACAjE,MAAAA,kBAAkB,CAACgE,KAAD,EAAQsB,OAAR,EAAiB,IAAjB,CAAlB;AAEA,UAAME,cAAc,GAAG,CAAvB;AACA,UAAMC,eAAe,GAAGvF,2BAA2B,CAACoF,OAAD,EAAUhE,IAAV,EAAgBkE,cAAhB,CAAnD;AACAC,MAAAA,eAAe,CAAC9D,OAAhB,CAAwB,UAAAC,CAAC,EAAI;AACzB5B,QAAAA,kBAAkB,CAACgE,KAAD,EAAQpC,CAAR,EAAW,IAAX,CAAlB;AACH,OAFD;AAGH,KAtQkB;;AAAA,UAwQnB8D,gBAxQmB,GAwQA,UAAAC,KAAK,EAAI;AACxB,UAAMN,SAAS,GAAGO,MAAM,CAACD,KAAK,CAACE,aAAN,CAAoBC,OAApB,CAA4BT,SAA7B,CAAxB;AACA,UAAI,CAACA,SAAL,EAAgB;AAEhB,UAAI,CAAC,MAAKU,SAAV,EAAqB;;AAErB,UAAI,MAAKC,kBAAL,KAA4BX,SAAhC,EAA2C;AACvC,cAAKW,kBAAL,GAA0B,IAA1B;AACH;;AACD,YAAKtD,QAAL,CAAc;AAAEuD,QAAAA,gBAAgB,EAAEZ;AAApB,OAAd;;AACA,YAAKD,kBAAL,CAAwBC,SAAxB;;AAVwB,UAYhBa,SAZgB,GAYF,MAAK1F,KAZH,CAYhB0F,SAZgB;AAAA,yBAaC,MAAKhD,KAbN;AAAA,UAahB9B,MAbgB,gBAahBA,MAbgB;AAAA,UAaRE,IAbQ,gBAaRA,IAbQ;AAexB,UAAMgE,OAAO,GAAGnF,WAAW,CAAC,CAACiB,MAAD,EAAS+D,MAAT,CAAgB7D,IAAhB,CAAD,CAAX,CAAmCiE,IAAnC,CAAwC,UAAA3D,CAAC;AAAA,eAAIA,CAAC,CAAC0D,OAAF,CAAUvD,EAAV,KAAiBsD,SAArB;AAAA,OAAzC,CAAhB;AACAa,MAAAA,SAAS,CAACZ,OAAD,CAAT;AACH,KAzRkB;;AAAA,UA2RnBa,eA3RmB,GA2RD,UAAAR,KAAK,EAAI;AACvB,UAAMN,SAAS,GAAGO,MAAM,CAACD,KAAK,CAACE,aAAN,CAAoBC,OAApB,CAA4BT,SAA7B,CAAxB;AACA,UAAI,CAACA,SAAL,EAAgB;AAEhB,YAAKW,kBAAL,GAA0BX,SAA1B;AACA,UAAMe,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ;;AAEA,YAAK1D,QAAL,CAAc;AAAEuD,QAAAA,gBAAgB,EAAEZ,SAApB;AAA+BiB,QAAAA,SAAS,EAAEF,GAA1C;AAA+CG,QAAAA,WAAW,EAAE,KAA5D;AAAmEC,QAAAA,UAAU,EAAE;AAA/E,OAAd;;AACAC,MAAAA,UAAU,CAAC,YAAM;AAAA,YACLH,SADK,GACS,MAAKpD,KADd,CACLoD,SADK;;AAEb,YAAIA,SAAS,KAAKF,GAAlB,EAAuB;AACnB,gBAAK1D,QAAL,CAAc;AAAE6D,YAAAA,WAAW,EAAE,IAAf;AAAqBC,YAAAA,UAAU,EAAE;AAAjC,WAAd,EAAuD,YAAM;AAAA,gBACjDN,SADiD,GACnC,MAAK1F,KAD8B,CACjD0F,SADiD;AAAA,+BAEhC,MAAKhD,KAF2B;AAAA,gBAEjD9B,MAFiD,gBAEjDA,MAFiD;AAAA,gBAEzCE,IAFyC,gBAEzCA,IAFyC;AAIzD,gBAAMgE,OAAO,GAAGnF,WAAW,CAAC,CAACiB,MAAD,EAAS+D,MAAT,CAAgB7D,IAAhB,CAAD,CAAX,CAAmCiE,IAAnC,CAAwC,UAAA3D,CAAC;AAAA,qBAAIA,CAAC,CAAC0D,OAAF,CAAUvD,EAAV,KAAiBsD,SAArB;AAAA,aAAzC,CAAhB;AACAa,YAAAA,SAAS,CAACZ,OAAD,CAAT;AACH,WAND;AAOH;AACJ,OAXS,EAWP,GAXO,CAAV;;AAaA,YAAKF,kBAAL,CAAwBC,SAAxB;;AAEA,YAAKU,SAAL,GAAiB,IAAjB;AACAW,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqC,MAAKC,aAA1C;AAEAjB,MAAAA,KAAK,CAACkB,cAAN;AACAlB,MAAAA,KAAK,CAACmB,eAAN;AACA,aAAO,KAAP;AACH,KAxTkB;;AAAA,UA0TnBF,aA1TmB,GA0TH,YAAM;AAClB,YAAKlE,QAAL,CAAc;AAAEuD,QAAAA,gBAAgB,EAAE,CAApB;AAAuBK,QAAAA,SAAS,EAAE,CAAlC;AAAqCC,QAAAA,WAAW,EAAE;AAAlD,OAAd;;AADkB,UAGVL,SAHU,GAGI,MAAK1F,KAHT,CAGV0F,SAHU;AAKlBA,MAAAA,SAAS,CAAC,IAAD,CAAT;AAEA,YAAKH,SAAL,GAAiB,KAAjB;AACAW,MAAAA,QAAQ,CAACK,mBAAT,CAA6B,SAA7B,EAAwC,MAAKH,aAA7C;AACH,KAnUkB;;AAAA,UAqUnBI,mBArUmB,GAqUG,UAAA1B,OAAO,EAAI;AAAA,UACrB2B,QADqB,GACR,MAAKzG,KADG,CACrByG,QADqB;AAAA,UAErBT,UAFqB,GAEN,MAAKtD,KAFC,CAErBsD,UAFqB;AAI7B,UAAIA,UAAJ,EAAgB;AAEhBS,MAAAA,QAAQ,CAAC3B,OAAD,CAAR;AACH,KA5UkB;;AAAA,UA8UnB4B,eA9UmB;AAAA;AAAA;AAAA;AAAA;AAAA,+BA8UD,kBAAM3C,QAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,+BACgB,MAAKrB,KADrB,EACN5B,IADM,gBACNA,IADM,EACAD,WADA,gBACAA,WADA;AAAA,uEAENJ,SAFM,yBAENA,SAFM;;AAAA,sBAIVsD,QAAQ,GAAGjD,IAAI,CAACmB,MAJN;AAAA;AAAA;AAAA;;AAKJiC,gBAAAA,OALI,GAKM,MAAKrB,QAAL,CAAcC,GAAd,CAAkBhC,IAAI,CAACiD,QAAD,CAAJ,CAAexC,EAAjC,CALN;;AAMV,oBAAI2C,OAAJ,EAAa;AACHnB,kBAAAA,IADG,GACIjE,QAAQ,CAACkE,WAAT,CAAqBkB,OAArB,CADJ;;AAET,sBAAInB,IAAJ,EAAU;AACAN,oBAAAA,MADA,GACShC,SAAS,CAACC,OADnB;AAEN+B,oBAAAA,MAAM,CAACjC,SAAP,GAAmBuC,IAAI,CAACM,SAAxB;AACH;AACJ;;AAZS;AAAA;;AAAA;AAAA,sBAaHU,QAAQ,GAAGlD,WAAW,CAACC,IAAZ,CAAiBmB,MAbzB;AAAA;AAAA;AAAA;;AAAA,qBAcN,MAAKuC,YAdC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,sBAeN3D,WAAW,CAACC,IAAZ,CAAiBmB,MAAjB,KAA4BnB,IAAI,CAACmB,MAf3B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAiBV,sBAAKuC,YAAL,GAAoB,IAApB;AACMtD,gBAAAA,QAlBI,GAkBO,EAlBP;AAmBVL,gBAAAA,WAAW,CAACC,IAAZ,CAAiBa,KAAjB,CAAuB,MAAKS,UAA5B,EAAwC2B,QAAQ,GAAG,CAAnD,EAAsD5C,OAAtD,CAA8D,UAAAC,CAAC,EAAI;AAC/DF,kBAAAA,QAAQ,CAACG,IAAT,CACIvB,eAAe,CAACiB,IAAhB,CAAqB;AACjB,6BAAS,eADQ;AAEjBO,oBAAAA,MAAM,EAAEF,CAAC,CAACG;AAFO,mBAArB,CADJ;AAMH,iBAPD;AAnBU;AAAA,uBA4BWC,OAAO,CAACC,GAAR,CAAYP,QAAZ,EAAsBwD,OAAtB,CAA8B;AAAA,yBAAO,MAAKF,YAAL,GAAoB,KAA3B;AAAA,iBAA9B,CA5BX;;AAAA;AA4BJvD,gBAAAA,MA5BI;AA8BV,sBAAKmB,UAAL,IAAmBnB,MAAM,CAACgB,MAA1B;AACI0E,gBAAAA,UA/BM,GA+BO7F,IAAI,CAAC6D,MAAL,CAAY1D,MAAZ,CA/BP;;AAgCV,sBAAKiB,QAAL,CAAc;AAAEpB,kBAAAA,IAAI,EAAE6F;AAAR,iBAAd,EAAoC,YAAM;AACtC,sBAAI5C,QAAQ,GAAG4C,UAAU,CAAC1E,MAA1B,EAAkC;AAC9B,0BAAKyE,eAAL,CAAqB3C,QAArB;AACH;AACJ,iBAJD;;AAhCU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA9UC;;AAAA;AAAA;AAAA;AAAA;;AAAA,UAsXnB6C,kBAtXmB,GAsXE,YAAM;AACvB9G,MAAAA,eAAe,CAACiB,IAAhB,CAAqB;AACjB,iBAAS,qBADQ;AAEjBC,QAAAA,WAAW,EAAE;AAFI,OAArB;AAIH,KA3XkB;;AAAA,UA6XnB6F,sBA7XmB,GA6XM,UAAAtF,EAAE,EAAI;AAC3BzB,MAAAA,eAAe,CAACiB,IAAhB,CAAqB;AACjB,iBAAS,kBADQ;AAEjBO,QAAAA,MAAM,EAAEC,EAFS;AAGjBuF,QAAAA,YAAY,EAAE;AAHG,OAArB;AAKH,KAnYkB;;AAGf,UAAKrG,SAAL,GAAiB5B,KAAK,CAACkI,SAAN,EAAjB;AACA,UAAKlE,QAAL,GAAgB,IAAImE,GAAJ,EAAhB;AACA,UAAKtD,UAAL,GAAkB,IAAIsD,GAAJ,EAAlB;AAEA,UAAKtE,KAAL,GAAa;AACT9B,MAAAA,MAAM,EAAE,IADC;AAETC,MAAAA,WAAW,EAAE,IAFJ;AAGTC,MAAAA,IAAI,EAAE,EAHG;AAITc,MAAAA,cAAc,EAAE,EAJP;AAKTmC,MAAAA,QAAQ,EAAE;AALD,KAAb;AAQA,UAAKxB,4BAAL,GAAoCjD,QAAQ,CAAC,MAAKiD,4BAAN,EAAoC,GAApC,CAA5C;AACA,UAAKF,yBAAL,GAAiC9C,QAAQ,CAAC,MAAK8C,yBAAN,EAAiC,IAAjC,CAAzC;AACA,UAAKuB,cAAL,GAAsBrE,QAAQ,CAAC,MAAKqE,cAAN,EAAsB,GAAtB,CAA9B;AAjBe;AAkBlB;;;;0CAEqBqD,S,EAAWC,S,EAAWC,W,EAAa;AAAA,yBACQ,KAAKzE,KADb;AAAA,UAC7CqB,QAD6C,gBAC7CA,QAD6C;AAAA,UACnCnD,MADmC,gBACnCA,MADmC;AAAA,UAC3BC,WAD2B,gBAC3BA,WAD2B;AAAA,UACdC,IADc,gBACdA,IADc;AAAA,UACRiF,WADQ,gBACRA,WADQ;;AAGrD,UAAImB,SAAS,CAACtG,MAAV,KAAqBA,MAAzB,EAAiC;AAC7B,eAAO,IAAP;AACH;;AAED,UAAIsG,SAAS,CAACrG,WAAV,KAA0BA,WAA9B,EAA2C;AACvC,eAAO,IAAP;AACH;;AAED,UAAIqG,SAAS,CAACpG,IAAV,KAAmBA,IAAvB,EAA6B;AACzB,eAAO,IAAP;AACH;;AAED,UAAIoG,SAAS,CAACnB,WAAV,KAA0BA,WAA9B,EAA2C;AACvC,eAAO,IAAP;AACH;;AAED,UAAImB,SAAS,CAACnD,QAAV,KAAuBA,QAA3B,EAAqC;AACjC,eAAO,IAAP;AACH;;AAED,aAAO,KAAP;AACH;;;wCAEmB;AAChBlE,MAAAA,YAAY,CAACuH,EAAb,CAAgB,4BAAhB,EAA8C,KAAKnH,4BAAnD;AACAJ,MAAAA,YAAY,CAACuH,EAAb,CAAgB,sBAAhB,EAAwC,KAAK9G,sBAA7C;AACH;;;2CAEsB;AACnBT,MAAAA,YAAY,CAACwH,GAAb,CAAiB,4BAAjB,EAA+C,KAAKpH,4BAApD;AACAJ,MAAAA,YAAY,CAACwH,GAAb,CAAiB,sBAAjB,EAAyC,KAAK/G,sBAA9C;AACH;;;+BAaUF,e,EAAiB;AAAA,yBACM,KAAKsC,KADX;AAAA,UAChB5B,IADgB,gBAChBA,IADgB;AAAA,UACVD,WADU,gBACVA,WADU;AAE3B;;;;;;;;;;;;;uBAGwBf,eAAe,CAACiB,IAAhB,CAAqB;AACtC,2BAAS,mBAD6B;AAEtCC,kBAAAA,WAAW,EAAE;AAFyB,iBAArB,C;;;AAAfJ,gBAAAA,M;AAKN,qBAAKsB,QAAL,CAAc;AACVtB,kBAAAA,MAAM,EAANA;AADU,iBAAd;;;;;;;;;;;;;;;;;;6BAwTK;AAAA;;AAAA,UACG0G,CADH,GACS,KAAKtH,KADd,CACGsH,CADH;AAAA,yBAEiD,KAAK5E,KAFtD;AAAA,UAEG9B,MAFH,gBAEGA,MAFH;AAAA,UAEWC,WAFX,gBAEWA,WAFX;AAAA,UAEwBC,IAFxB,gBAEwBA,IAFxB;AAAA,UAE8Bc,cAF9B,gBAE8BA,cAF9B,EAGL;AACA;AACA;AACA;AACA;;AAEA,WAAKiB,QAAL,CAAc0E,KAAd;AACA,UAAMC,KAAK,GAAG1G,IAAI,CAAC2G,GAAL,CAAS,UAAArG,CAAC;AAAA,eACpB,oBAAC,UAAD;AACI,UAAA,GAAG,EAAEA,CAAC,CAACG,EADX;AAEI,UAAA,GAAG,EAAE,aAAAmG,EAAE;AAAA,mBAAI,MAAI,CAAC7E,QAAL,CAAcd,GAAd,CAAkBX,CAAC,CAACG,EAApB,EAAwBmG,EAAxB,CAAJ;AAAA,WAFX;AAGI,UAAA,IAAI,EAAEtG,CAHV;AAII,UAAA,QAAQ,EAAE,MAAI,CAACoF,mBAJnB;AAKI,UAAA,WAAW,EAAE,MAAI,CAACb,eALtB;AAMI,UAAA,YAAY,EAAE,MAAI,CAACT,gBANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADoB;AAAA,OAAV,CAAd;AAWA,UAAMyC,UAAU,GACZ/G,MAAM,IAAIA,MAAM,CAACoB,QAAP,CAAgBC,MAAhB,GAAyB,CAAnC,GACM;AACID,QAAAA,QAAQ,EAAEpB,MAAM,CAACoB,QADrB;AAEI4F,QAAAA,KAAK,EAAEN,CAAC,CAAC,gBAAD;AAFZ,OADN,GAKM,IANV;AAQA,aACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,oBAAD;AAAsB,QAAA,QAAQ,EAAE,KAAKZ,eAArC;AAAsD,QAAA,QAAQ,EAAE9E,cAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,GAAG,EAAE,KAAKnB,SAAf;AAA0B,QAAA,SAAS,EAAC,wBAApC;AAA6D,QAAA,QAAQ,EAAE,KAAK8D,YAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKsD,OAAO,CAACF,UAAD,CAAP,IACG,oBAAC,UAAD;AACI,QAAA,IAAI,EAAEA,UADV;AAEI,QAAA,QAAQ,EAAE,KAAKnB,mBAFnB;AAGI,QAAA,WAAW,EAAE,KAAKb,eAHtB;AAII,QAAA,YAAY,EAAE,KAAKT,gBAJvB;AAKI,QAAA,aAAa,EAAE,KAAK0B,kBALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR,EAUKY,KAVL,CAFJ,CADJ;AAiBH;;;;EApbwB3I,KAAK,CAACiJ,S;;AAubnC/H,cAAc,CAACgI,SAAf,GAA2B;AACvBtB,EAAAA,QAAQ,EAAE1H,SAAS,CAACiJ,IAAV,CAAeC,UADF;AAEvBvC,EAAAA,SAAS,EAAE3G,SAAS,CAACiJ,IAAV,CAAeC;AAFH,CAA3B;AAKA,IAAMC,OAAO,GAAGlJ,OAAO,CACnBE,WAAW,EADQ,EAEnBC,eAAe,EAFI,EAGnBF,cAAc,EAHK,CAAvB;AAMA,eAAeiJ,OAAO,CAACnI,cAAD,CAAtB","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport StickerSet from './StickerSet';\nimport StickersPickerHeader from './StickersPickerHeader';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { getNeighborStickersFromSets, getStickers } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersPicker.css';\n\nclass StickersPicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.scrollRef = React.createRef();\n        this.itemsMap = new Map();\n        this.loadedSets = new Map();\n\n        this.state = {\n            recent: null,\n            stickerSets: null,\n            sets: [],\n            headerStickers: [],\n            position: 0\n        };\n\n        this.loadInViewContentOnScrollEnd = debounce(this.loadInViewContentOnScrollEnd, 100);\n        this.loadInViewContentOnScroll = throttle(this.loadInViewContentOnScroll, 2000);\n        this.updatePosition = throttle(this.updatePosition, 250);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { position, recent, stickerSets, sets, showPreview } = this.state;\n\n        if (nextState.recent !== recent) {\n            return true;\n        }\n\n        if (nextState.stickerSets !== stickerSets) {\n            return true;\n        }\n\n        if (nextState.sets !== sets) {\n            return true;\n        }\n\n        if (nextState.showPreview !== showPreview) {\n            return true;\n        }\n\n        if (nextState.position !== position) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('updateInstalledStickerSets', this.onUpdateInstalledStickerSets);\n        StickerStore.on('updateRecentStickers', this.onUpdateRecentStickers);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('updateInstalledStickerSets', this.onUpdateInstalledStickerSets);\n        StickerStore.off('updateRecentStickers', this.onUpdateRecentStickers);\n    }\n\n    onUpdateInstalledStickerSets = update => {\n        const { is_masks, sticker_set_ids } = update;\n        if (!is_masks) return;\n\n        this.filterSets();\n    };\n\n    onUpdateRecentStickers = update => {\n        this.reloadRecentContent();\n    };\n\n    filterSets(sticker_set_ids) {\n        const { sets, stickerSets } = this.state;\n    }\n\n    async reloadRecentContent() {\n        const recent = await TdLibController.send({\n            '@type': 'getRecentStickers',\n            is_attached: false\n        });\n\n        this.setState({\n            recent\n        });\n    }\n\n    scrollTop = () => {\n        this.scrollRef.current.scrollTop = 0;\n    };\n\n    loadContent = async (recent, stickerSets, sets) => {\n        // console.log('[sp] loadContent', recent, stickerSets, sets);\n\n        if (!recent) {\n            recent = await TdLibController.send({\n                '@type': 'getRecentStickers',\n                is_attached: false\n            });\n        }\n\n        if (!sets) {\n            const result = await TdLibController.send({\n                '@type': 'getInstalledStickerSets',\n                is_masks: false\n            });\n\n            const promises = [];\n            result.sets.forEach(x => {\n                promises.push(\n                    TdLibController.send({\n                        '@type': 'getStickerSet',\n                        set_id: x.id\n                    })\n                );\n            });\n\n            sets = await Promise.all(promises);\n        }\n\n        const slicedSets = sets.slice(0, 5);\n        const headerStickers = sets.reduce((preview, set) => {\n            if (set.stickers.length > 0) {\n                preview.push(set.stickers[0]);\n            }\n            return preview;\n        }, []);\n\n        this.setState({\n            recent,\n            stickerSets,\n            sets: slicedSets,\n            fullSets: sets,\n            headerStickers\n        });\n        this.setsLength = slicedSets.length;\n    };\n\n    loadInViewContentOnScroll = () => {\n        this.loadInViewContent();\n    };\n\n    loadInViewContentOnScrollEnd = () => {\n        this.loadInViewContent(400);\n    };\n\n    loadInViewContent = (padding = 0) => {\n        const scroll = this.scrollRef.current;\n\n        const { sets } = this.state;\n\n        const inViewItems = [];\n        sets.forEach(x => {\n            const item = this.itemsMap.get(x.id);\n            const node = ReactDOM.findDOMNode(item);\n            if (node) {\n                const topBorder = scroll.scrollTop - padding;\n                const bottomBorder = scroll.scrollTop + scroll.offsetHeight + padding;\n\n                const nodeTop = node.offsetTop;\n                const nodeBottom = node.offsetTop + node.clientHeight;\n\n                if (nodeTop >= topBorder && node.offsetTop <= bottomBorder) {\n                    inViewItems.push(x);\n                } else if (nodeBottom >= topBorder && nodeBottom <= bottomBorder) {\n                    inViewItems.push(x);\n                } else if (nodeTop <= topBorder && nodeBottom >= bottomBorder) {\n                    inViewItems.push(x);\n                }\n            }\n        });\n\n        inViewItems.forEach(x => {\n            const store = FileStore.getStore();\n            if (!this.loadedSets.has(x.id)) {\n                this.loadedSets.set(x.id, x.id);\n                loadStickerSetContent(store, x);\n            }\n        });\n    };\n\n    updatePosition = () => {\n        const scroll = this.scrollRef.current;\n\n        const { sets } = this.state;\n        let minDiff = scroll.scrollHeight;\n        let position = 0;\n        let firstOffsetTop = 0;\n        sets.forEach((x, pos) => {\n            const element = this.itemsMap.get(x.id);\n            if (element) {\n                const node = ReactDOM.findDOMNode(element);\n                if (node) {\n                    firstOffsetTop = pos === 0 ? node.offsetTop : firstOffsetTop;\n\n                    const offsetTop = node.offsetTop - firstOffsetTop;\n                    if (node && offsetTop <= scroll.scrollTop) {\n                        const diff = Math.abs(scroll.scrollTop - offsetTop);\n                        if (diff <= minDiff) {\n                            minDiff = diff;\n                            position = pos;\n                        }\n                    }\n                }\n            }\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSetPosition',\n            position\n        });\n    };\n\n    handleScroll = async () => {\n        //this.loadInViewContentOnScroll();\n        this.loadInViewContentOnScrollEnd();\n        this.updatePosition();\n\n        const scroll = this.scrollRef.current;\n\n        if (this.loadingChunk) return;\n\n        let loadChunk = false;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight - 400) {\n            loadChunk = true;\n        }\n\n        if (!loadChunk) {\n            return false;\n        }\n\n        const { sets, stickerSets } = this.state;\n        if (stickerSets.sets.length === sets.length) return;\n\n        this.loadingChunk = true;\n        const promises = [];\n        stickerSets.sets.slice(this.setsLength, this.setsLength + 5).forEach(x => {\n            promises.push(\n                TdLibController.send({\n                    '@type': 'getStickerSet',\n                    set_id: x.id\n                })\n            );\n        });\n\n        const result = await Promise.all(promises).finally(() => {\n            this.loadingChunk = false;\n        });\n\n        this.setsLength += result.length;\n        this.setState({ sets: sets.concat(result) });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { recent, sets } = this.state;\n\n        const sticker = getStickers([recent].concat(sets)).find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const stickersPerRow = 5;\n        const preloadStickers = getNeighborStickersFromSets(sticker, sets, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n\n        const { onPreview } = this.props;\n        const { recent, sets } = this.state;\n\n        const sticker = getStickers([recent].concat(sets)).find(x => x.sticker.id === stickerId);\n        onPreview(sticker);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true }, () => {\n                    const { onPreview } = this.props;\n                    const { recent, sets } = this.state;\n\n                    const sticker = getStickers([recent].concat(sets)).find(x => x.sticker.id === stickerId);\n                    onPreview(sticker);\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n\n        const { onPreview } = this.props;\n\n        onPreview(null);\n\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleStickerSelect = sticker => {\n        const { onSelect } = this.props;\n        const { cancelSend } = this.state;\n\n        if (cancelSend) return;\n\n        onSelect(sticker);\n    };\n\n    handleSelectSet = async position => {\n        const { sets, stickerSets } = this.state;\n        const { scrollRef } = this;\n\n        if (position < sets.length) {\n            const element = this.itemsMap.get(sets[position].id);\n            if (element) {\n                const node = ReactDOM.findDOMNode(element);\n                if (node) {\n                    const scroll = scrollRef.current;\n                    scroll.scrollTop = node.offsetTop;\n                }\n            }\n        } else if (position < stickerSets.sets.length) {\n            if (this.loadingChunk) return;\n            if (stickerSets.sets.length === sets.length) return;\n\n            this.loadingChunk = true;\n            const promises = [];\n            stickerSets.sets.slice(this.setsLength, position + 1).forEach(x => {\n                promises.push(\n                    TdLibController.send({\n                        '@type': 'getStickerSet',\n                        set_id: x.id\n                    })\n                );\n            });\n\n            const result = await Promise.all(promises).finally(() => (this.loadingChunk = false));\n\n            this.setsLength += result.length;\n            let concatSets = sets.concat(result);\n            this.setState({ sets: concatSets }, () => {\n                if (position < concatSets.length) {\n                    this.handleSelectSet(position);\n                }\n            });\n        }\n    };\n\n    handleDeleteRecent = () => {\n        TdLibController.send({\n            '@type': 'clearRecentStickers',\n            is_attached: false\n        });\n    };\n\n    handleDeleteStickerSet = id => {\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: id,\n            is_installed: false\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { recent, stickerSets, sets, headerStickers } = this.state;\n        // console.log('[sp] render', recent, stickerSets, sets);\n        // if (!stickerSets) return null;\n        //\n        // if (!sets) return null;\n        // if (!sets.length) return null;\n\n        this.itemsMap.clear();\n        const items = sets.map(x => (\n            <StickerSet\n                key={x.id}\n                ref={el => this.itemsMap.set(x.id, el)}\n                info={x}\n                onSelect={this.handleStickerSelect}\n                onMouseDown={this.handleMouseDown}\n                onMouseEnter={this.handleMouseEnter}\n            />\n        ));\n\n        const recentInfo =\n            recent && recent.stickers.length > 0\n                ? {\n                      stickers: recent.stickers,\n                      title: t('RecentStickers')\n                  }\n                : null;\n\n        return (\n            <div className='stickers-picker'>\n                <StickersPickerHeader onSelect={this.handleSelectSet} stickers={headerStickers} />\n                <div ref={this.scrollRef} className='stickers-picker-scroll' onScroll={this.handleScroll}>\n                    {Boolean(recentInfo) && (\n                        <StickerSet\n                            info={recentInfo}\n                            onSelect={this.handleStickerSelect}\n                            onMouseDown={this.handleMouseDown}\n                            onMouseEnter={this.handleMouseEnter}\n                            onDeleteClick={this.handleDeleteRecent}\n                        />\n                    )}\n                    {items}\n                </div>\n            </div>\n        );\n    }\n}\n\nStickersPicker.propTypes = {\n    onSelect: PropTypes.func.isRequired,\n    onPreview: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(StickersPicker);\n"]},"metadata":{},"sourceType":"module"}