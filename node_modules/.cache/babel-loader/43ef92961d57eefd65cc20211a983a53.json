{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnRight/SharedMedia/SharedPhotos.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia as _openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nvar SharedPhotos =\n/*#__PURE__*/\nfunction (_SharedMediaBase) {\n  _inherits(SharedPhotos, _SharedMediaBase);\n\n  function SharedPhotos() {\n    _classCallCheck(this, SharedPhotos);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SharedPhotos).apply(this, arguments));\n  }\n\n  _createClass(SharedPhotos, [{\n    key: \"getListClassName\",\n    value: function getListClassName() {\n      return 'shared-photos-list';\n    }\n  }, {\n    key: \"getSearchListClassName\",\n    value: function getSearchListClassName() {\n      return 'shared-photos-search-list';\n    }\n  }, {\n    key: \"isValidContent\",\n    value: function isValidContent(content) {\n      return content && content['@type'] === 'messagePhoto';\n    }\n  }, {\n    key: \"getSearchFilter\",\n    value: function getSearchFilter() {\n      return {\n        '@type': 'searchMessagesFilterPhoto'\n      };\n    }\n  }, {\n    key: \"getHeader\",\n    value: function getHeader() {\n      var t = this.props.t;\n      return t('PhotosTitle');\n    }\n  }, {\n    key: \"getItemTemplate\",\n    value: function getItemTemplate(message) {\n      var migratedChatId = this.props.migratedChatId;\n      var chat_id = message.chat_id,\n          content = message.content,\n          id = message.id;\n      return React.createElement(SharedPhoto, {\n        key: \"chat_id=\".concat(chat_id, \"_message_id=\").concat(id),\n        chatId: chat_id,\n        messageId: id,\n        photo: content.photo,\n        openMedia: function openMedia() {\n          return _openMedia(chat_id, id, false);\n        },\n        showOpenMessage: chat_id !== migratedChatId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return SharedPhotos;\n}(SharedMediaBase);\n\nSharedPhotos.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  migratedChatId: PropTypes.number,\n  onClose: PropTypes.func.isRequired,\n  popup: PropTypes.bool,\n  minHeight: PropTypes.number\n};\nSharedPhotos.defaultProps = {\n  popup: false,\n  minHeight: 0\n};\nexport default withTranslation()(SharedPhotos);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnRight/SharedMedia/SharedPhotos.js"],"names":["React","PropTypes","withTranslation","SharedMediaBase","SharedPhoto","openMedia","SharedPhotos","content","t","props","message","migratedChatId","chat_id","id","photo","propTypes","chatId","number","isRequired","onClose","func","popup","bool","minHeight","defaultProps"],"mappings":";;;;;;;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,SAASC,SAAS,IAATA,UAAT,QAA0B,wBAA1B;AACA,OAAO,oBAAP;;IAEMC,Y;;;;;;;;;;;;;uCACiB;AACf,aAAO,oBAAP;AACH;;;6CAEwB;AACrB,aAAO,2BAAP;AACH;;;mCAEcC,O,EAAS;AACpB,aAAOA,OAAO,IAAIA,OAAO,CAAC,OAAD,CAAP,KAAqB,cAAvC;AACH;;;sCAEiB;AACd,aAAO;AAAE,iBAAS;AAAX,OAAP;AACH;;;gCAEW;AAAA,UACAC,CADA,GACM,KAAKC,KADX,CACAD,CADA;AAGR,aAAOA,CAAC,CAAC,aAAD,CAAR;AACH;;;oCAEeE,O,EAAS;AAAA,UACbC,cADa,GACM,KAAKF,KADX,CACbE,cADa;AAAA,UAEbC,OAFa,GAEYF,OAFZ,CAEbE,OAFa;AAAA,UAEJL,OAFI,GAEYG,OAFZ,CAEJH,OAFI;AAAA,UAEKM,EAFL,GAEYH,OAFZ,CAEKG,EAFL;AAIrB,aACI,oBAAC,WAAD;AACI,QAAA,GAAG,oBAAaD,OAAb,yBAAmCC,EAAnC,CADP;AAEI,QAAA,MAAM,EAAED,OAFZ;AAGI,QAAA,SAAS,EAAEC,EAHf;AAII,QAAA,KAAK,EAAEN,OAAO,CAACO,KAJnB;AAKI,QAAA,SAAS,EAAE;AAAA,iBAAMT,UAAS,CAACO,OAAD,EAAUC,EAAV,EAAc,KAAd,CAAf;AAAA,SALf;AAMI,QAAA,eAAe,EAAED,OAAO,KAAKD,cANjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAUH;;;;EArCsBR,e;;AAwC3BG,YAAY,CAACS,SAAb,GAAyB;AACrBC,EAAAA,MAAM,EAAEf,SAAS,CAACgB,MAAV,CAAiBC,UADJ;AAErBP,EAAAA,cAAc,EAAEV,SAAS,CAACgB,MAFL;AAGrBE,EAAAA,OAAO,EAAElB,SAAS,CAACmB,IAAV,CAAeF,UAHH;AAIrBG,EAAAA,KAAK,EAAEpB,SAAS,CAACqB,IAJI;AAKrBC,EAAAA,SAAS,EAAEtB,SAAS,CAACgB;AALA,CAAzB;AAQAX,YAAY,CAACkB,YAAb,GAA4B;AACxBH,EAAAA,KAAK,EAAE,KADiB;AAExBE,EAAAA,SAAS,EAAE;AAFa,CAA5B;AAKA,eAAerB,eAAe,GAAGI,YAAH,CAA9B","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n"]},"metadata":{},"sourceType":"module"}