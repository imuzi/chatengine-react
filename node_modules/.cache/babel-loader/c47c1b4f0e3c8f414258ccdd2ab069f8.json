{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnLeft/Settings/General.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nvar General =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(General, _React$Component);\n\n  function General(props) {\n    var _this;\n\n    _classCallCheck(this, General);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(General).call(this, props));\n\n    _this.handleAppearance = function () {\n      _this.themePickerRef.current.open();\n    };\n\n    _this.loadContent = function () {\n      TdLibController.send({\n        '@type': 'getBackgrounds',\n        for_dark_theme: false\n      }).then(function (backgrounds) {\n        return _this.setState({\n          backgrounds: backgrounds\n        });\n      });\n    };\n\n    _this.openChatBackground = function () {\n      if (!_this.state.backgrounds) return;\n\n      _this.setState({\n        openChatBackground: true\n      });\n    };\n\n    _this.closeChatBackground = function () {\n      _this.setState({\n        openChatBackground: false\n      });\n    };\n\n    _this.state = {\n      backgrounds: null\n    };\n    _this.themePickerRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(General, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadContent();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          t = _this$props.t,\n          onClose = _this$props.onClose;\n      var _this$state = this.state,\n          backgrounds = _this$state.backgrounds,\n          openChatBackground = _this$state.openChatBackground;\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"header-master\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        className: \"header-left-button\",\n        onClick: onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(ArrowBackIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"header-status grow cursor-pointer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"header-status-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, t('GeneralSettings')))), React.createElement(\"div\", {\n        className: \"sidebar-page-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sidebar-page-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        autoFocus: false,\n        className: \"settings-list-item\",\n        button: true,\n        onClick: this.openChatBackground,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(SharedMediaIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: t('ChatBackground'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(ListItem, {\n        autoFocus: false,\n        className: \"settings-list-item\",\n        button: true,\n        onClick: this.handleAppearance,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(ColorizeIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: t('Appearance'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })))), React.createElement(SidebarPage, {\n        open: openChatBackground,\n        onClose: this.closeChatBackground,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(ChatBackground, {\n        backgrounds: backgrounds,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(ThemePicker, {\n        ref: this.themePickerRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return General;\n}(React.Component);\n\nGeneral.propTypes = {\n  onClose: PropTypes.func\n};\nvar enhance = compose(withSaveRef(), withTranslation(), withRestoreRef());\nexport default enhance(General);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnLeft/Settings/General.js"],"names":["React","PropTypes","withTranslation","compose","withRestoreRef","withSaveRef","IconButton","ListItem","ListItemIcon","ListItemText","ArrowBackIcon","ColorizeIcon","ChatBackground","SidebarPage","SharedMediaIcon","ThemePicker","TdLibController","General","props","handleAppearance","themePickerRef","current","open","loadContent","send","for_dark_theme","then","backgrounds","setState","openChatBackground","state","closeChatBackground","createRef","t","onClose","Component","propTypes","func","enhance"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>\n                            <ListItemIcon>\n                                <SharedMediaIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ChatBackground')} />\n                        </ListItem>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n"]},"metadata":{},"sourceType":"module"}