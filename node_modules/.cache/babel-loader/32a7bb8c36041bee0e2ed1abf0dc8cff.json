{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnMiddle/AttachButton.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nvar AttachButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AttachButton, _React$Component);\n\n  function AttachButton() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AttachButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AttachButton)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      anchorEl: null\n    };\n\n    _this.handleMenuClick = function (event) {\n      _this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    _this.handleMenuClose = function () {\n      _this.setState({\n        anchorEl: null\n      });\n    };\n\n    _this.handleAttachPhoto = function () {\n      _this.handleMenuClose();\n\n      var onAttachPhoto = _this.props.onAttachPhoto;\n      if (!onAttachPhoto) return;\n      setTimeout(function () {\n        return onAttachPhoto();\n      }, ANIMATION_DURATION_300MS);\n    };\n\n    _this.handleAttachDocument = function () {\n      _this.handleMenuClose();\n\n      var onAttachDocument = _this.props.onAttachDocument;\n      if (!onAttachDocument) return;\n      setTimeout(function () {\n        return onAttachDocument();\n      }, ANIMATION_DURATION_300MS);\n    };\n\n    _this.handleAttachPoll = function () {\n      _this.handleMenuClose();\n\n      var onAttachPoll = _this.props.onAttachPoll;\n      if (!onAttachPoll) return;\n      onAttachPoll();\n    };\n\n    return _this;\n  }\n\n  _createClass(AttachButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          t = _this$props.t,\n          chatId = _this$props.chatId;\n      var anchorEl = this.state.anchorEl;\n      return React.createElement(React.Fragment, null, React.createElement(IconButton, {\n        className: \"inputbox-icon-button\",\n        \"aria-label\": \"Attach\",\n        open: Boolean(anchorEl),\n        onClick: this.handleMenuClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(AttachFileIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(Menu, {\n        id: \"attach-menu\",\n        anchorEl: anchorEl,\n        open: Boolean(anchorEl),\n        getContentAnchorEl: null,\n        disableAutoFocusItem: true,\n        disableRestoreFocus: true,\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        transformOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right'\n        },\n        onClose: this.handleMenuClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        onClick: this.handleAttachPhoto,\n        disabled: !canSendMediaMessages(chatId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(PhotoIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: t('AttachPhoto'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(MenuItem, {\n        onClick: this.handleAttachDocument,\n        disabled: !canSendMediaMessages(chatId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(InsertDriveFileIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: t('AttachDocument'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), !isPrivateChat(chatId) && React.createElement(MenuItem, {\n        onClick: this.handleAttachPoll,\n        disabled: !canSendPolls(chatId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(PollIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: t('Poll'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return AttachButton;\n}(React.Component);\n\nAttachButton.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  onAttachDocument: PropTypes.func.isRequired,\n  onAttachPhoto: PropTypes.func.isRequired,\n  onAttachPoll: PropTypes.func.isRequired\n};\nexport default withTranslation()(AttachButton);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnMiddle/AttachButton.js"],"names":["React","PropTypes","withTranslation","AttachFileIcon","IconButton","InsertDriveFileIcon","ListItemIcon","ListItemText","Menu","MenuItem","PhotoIcon","PollIcon","canSendMediaMessages","canSendPolls","isPrivateChat","ANIMATION_DURATION_300MS","AttachButton","state","anchorEl","handleMenuClick","event","setState","currentTarget","handleMenuClose","handleAttachPhoto","onAttachPhoto","props","setTimeout","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","classes","t","chatId","Boolean","vertical","horizontal","Component","propTypes","number","isRequired","func"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n"]},"metadata":{},"sourceType":"module"}