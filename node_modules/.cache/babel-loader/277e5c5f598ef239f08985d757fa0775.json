{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Player/VolumeButton.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nvar VolumeButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(VolumeButton, _React$Component);\n\n  function VolumeButton() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, VolumeButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(VolumeButton)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      anchorEl: null,\n      value: PlayerStore.volume,\n      prevValue: PlayerStore.volume,\n      dragging: false,\n      buttonOver: false,\n      popupOver: false\n    };\n\n    _this.onClientUpdateMediaVolume = function (update) {\n      var volume = update.volume,\n          prevVolume = update.prevVolume;\n\n      if (prevVolume === undefined) {\n        _this.setState({\n          value: volume\n        });\n      } else {\n        _this.setState({\n          value: volume,\n          prevValue: prevVolume\n        });\n      }\n    };\n\n    _this.handlePopoverOpen = function (anchorEl) {\n      _this.setState({\n        anchorEl: anchorEl\n      });\n    };\n\n    _this.handlePopoverClose = function () {\n      var _this$state = _this.state,\n          dragging = _this$state.dragging,\n          buttonOver = _this$state.buttonOver,\n          popupOver = _this$state.popupOver;\n      if (dragging) return;\n      if (buttonOver) return;\n      if (popupOver) return;\n\n      _this.setState({\n        anchorEl: null\n      });\n    };\n\n    _this.handleMouseEnter = function (event, openPopover) {\n      _this.setState({\n        buttonOver: true\n      });\n\n      if (openPopover) {\n        _this.handlePopoverOpen(event.currentTarget);\n      }\n    };\n\n    _this.handleMouseLeave = function () {\n      _this.setState({\n        buttonOver: false\n      }, function () {\n        _this.handlePopoverClose();\n      });\n    };\n\n    _this.handlePopupMouseLeave = function () {\n      _this.setState({\n        popupOver: false\n      }, function () {\n        _this.handlePopoverClose();\n      });\n    };\n\n    _this.handleVoiceClick = function () {\n      var _this$state2 = _this.state,\n          value = _this$state2.value,\n          prevValue = _this$state2.prevValue;\n      var nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaVolume',\n        volume: nextValue\n      });\n    };\n\n    _this.handleChange = function (event, value) {\n      var _this$state3 = _this.state,\n          dragging = _this$state3.dragging,\n          prevValue = _this$state3.prevValue;\n\n      if (dragging) {\n        TdLibController.clientUpdate({\n          '@type': 'clientUpdateMediaVolume',\n          volume: value\n        });\n      } else {\n        TdLibController.clientUpdate({\n          '@type': 'clientUpdateMediaVolume',\n          prevVolume: value > 0 ? value : prevValue,\n          volume: value\n        });\n      }\n    };\n\n    _this.handleDragStart = function () {\n      var value = _this.state.value;\n\n      _this.setState({\n        dragging: true,\n        prevValue: value\n      });\n    };\n\n    _this.handleDragEnd = function () {\n      var _this$state4 = _this.state,\n          value = _this$state4.value,\n          prevValue = _this$state4.prevValue;\n\n      _this.setState({\n        dragging: false,\n        prevValue: value > 0 ? value : prevValue\n      }, function () {\n        _this.handlePopoverClose();\n      });\n    };\n\n    _this.getVolumeIcon = function (value) {\n      if (value === 0) {\n        return React.createElement(VolumeOffIcon, {\n          fontSize: \"small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        });\n      }\n\n      if (value < 0.25) {\n        return React.createElement(VolumeMuteIcon, {\n          fontSize: \"small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        });\n      }\n\n      if (value < 0.5) {\n        return React.createElement(VolumeDownIcon, {\n          fontSize: \"small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(VolumeUpIcon, {\n        fontSize: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(VolumeButton, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state5 = this.state,\n          anchorEl = _this$state5.anchorEl,\n          value = _this$state5.value;\n      var open = Boolean(anchorEl);\n      return React.createElement(\"div\", {\n        onMouseEnter: function onMouseEnter(e) {\n          return _this2.handleMouseEnter(e, true);\n        },\n        onMouseLeave: this.handleMouseLeave,\n        style: {\n          position: 'relative',\n          background: 'transparent'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        className: \"header-player-button\",\n        color: \"primary\",\n        onClick: this.handleVoiceClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, this.getVolumeIcon(value)), React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          background: 'transparent',\n          visibility: open ? 'visible' : 'hidden',\n          zIndex: 1\n        },\n        onMouseEnter: function onMouseEnter(e) {\n          return _this2.handleMouseEnter(e, false);\n        },\n        onMouseLeave: this.handlePopupMouseLeave,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"volume-button-panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Slider, {\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: value,\n        onChange: this.handleChange,\n        onDragStart: this.handleDragStart,\n        onDragEnd: this.handleDragEnd,\n        orientation: \"vertical\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return VolumeButton;\n}(React.Component);\n\nexport default VolumeButton;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Player/VolumeButton.js"],"names":["React","VolumeMuteIcon","VolumeDownIcon","VolumeUpIcon","VolumeOffIcon","IconButton","Slider","PLAYER_VOLUME_NORMAL","PlayerStore","TdLibController","VolumeButton","state","anchorEl","value","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","update","prevVolume","undefined","setState","handlePopoverOpen","handlePopoverClose","handleMouseEnter","event","openPopover","currentTarget","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","clientUpdate","handleChange","handleDragStart","handleDragEnd","getVolumeIcon","on","off","open","Boolean","e","position","background","visibility","zIndex","Component"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n"]},"metadata":{},"sourceType":"module"}