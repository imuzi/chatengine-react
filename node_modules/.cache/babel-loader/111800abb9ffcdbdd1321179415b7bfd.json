{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Tile/FoundPublicChat.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nvar FoundPublicChat =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FoundPublicChat, _React$Component);\n\n  function FoundPublicChat(props) {\n    var _this;\n\n    _classCallCheck(this, FoundPublicChat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FoundPublicChat).call(this, props));\n\n    _this.onClientUpdateChatId = function (update) {\n      var nextChatId = update.nextChatId,\n          previousChatId = update.previousChatId;\n\n      _this.setState({\n        nextChatId: nextChatId,\n        previousChatId: previousChatId\n      });\n    };\n\n    _this.state = {\n      nextChatId: AppStore.getChatId(),\n      previousChatId: null\n    };\n    return _this;\n  }\n\n  _createClass(FoundPublicChat, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      var chatId = this.props.chatId;\n\n      if (nextState.nextChatId === chatId) {\n        return true;\n      }\n\n      if (nextState.previousChatId === chatId) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          chatId = _this$props.chatId,\n          onClick = _this$props.onClick;\n      var selectedChatId = this.state.nextChatId;\n      var username = getChatUsername(chatId);\n      return React.createElement(ListItem, {\n        button: true,\n        className: classNames('found-public-chat', {\n          'item-selected': chatId === selectedChatId\n        }),\n        onClick: onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"found-public-chat-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Chat, {\n        chatId: chatId,\n        subtitle: username ? '@' + username : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return FoundPublicChat;\n}(React.Component);\n\nFoundPublicChat.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  onClick: PropTypes.func\n};\nexport default FoundPublicChat;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Tile/FoundPublicChat.js"],"names":["React","PropTypes","classNames","ListItem","Chat","getChatUsername","AppStore","FoundPublicChat","props","onClientUpdateChatId","update","nextChatId","previousChatId","setState","state","getChatId","nextProps","nextState","chatId","on","off","onClick","selectedChatId","username","Component","propTypes","number","isRequired","func"],"mappings":";;;;;;;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAO,uBAAP;;IAEMC,e;;;;;AACF,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,yFAAMA,KAAN;;AADe,UA+BnBC,oBA/BmB,GA+BI,UAAAC,MAAM,EAAI;AAAA,UACrBC,UADqB,GACUD,MADV,CACrBC,UADqB;AAAA,UACTC,cADS,GACUF,MADV,CACTE,cADS;;AAG7B,YAAKC,QAAL,CAAc;AACVF,QAAAA,UAAU,EAAEA,UADF;AAEVC,QAAAA,cAAc,EAAEA;AAFN,OAAd;AAIH,KAtCkB;;AAGf,UAAKE,KAAL,GAAa;AACTH,MAAAA,UAAU,EAAEL,QAAQ,CAACS,SAAT,EADH;AAETH,MAAAA,cAAc,EAAE;AAFP,KAAb;AAHe;AAOlB;;;;0CAEqBI,S,EAAWC,S,EAAW;AAAA,UAChCC,MADgC,GACrB,KAAKV,KADgB,CAChCU,MADgC;;AAGxC,UAAID,SAAS,CAACN,UAAV,KAAyBO,MAA7B,EAAqC;AACjC,eAAO,IAAP;AACH;;AAED,UAAID,SAAS,CAACL,cAAV,KAA6BM,MAAjC,EAAyC;AACrC,eAAO,IAAP;AACH;;AAED,aAAO,KAAP;AACH;;;wCAEmB;AAChBZ,MAAAA,QAAQ,CAACa,EAAT,CAAY,oBAAZ,EAAkC,KAAKV,oBAAvC;AACH;;;2CAEsB;AACnBH,MAAAA,QAAQ,CAACc,GAAT,CAAa,oBAAb,EAAmC,KAAKX,oBAAxC;AACH;;;6BAWQ;AAAA,wBACuB,KAAKD,KAD5B;AAAA,UACGU,MADH,eACGA,MADH;AAAA,UACWG,OADX,eACWA,OADX;AAAA,UAEeC,cAFf,GAEkC,KAAKR,KAFvC,CAEGH,UAFH;AAIL,UAAMY,QAAQ,GAAGlB,eAAe,CAACa,MAAD,CAAhC;AAEA,aACI,oBAAC,QAAD;AACI,QAAA,MAAM,MADV;AAEI,QAAA,SAAS,EAAEhB,UAAU,CAAC,mBAAD,EAAsB;AAAE,2BAAiBgB,MAAM,KAAKI;AAA9B,SAAtB,CAFzB;AAGI,QAAA,OAAO,EAAED,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,MAAM,EAAEH,MAAd;AAAsB,QAAA,QAAQ,EAAEK,QAAQ,GAAG,MAAMA,QAAT,GAAoB,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CADJ;AAUH;;;;EAzDyBvB,KAAK,CAACwB,S;;AA4DpCjB,eAAe,CAACkB,SAAhB,GAA4B;AACxBP,EAAAA,MAAM,EAAEjB,SAAS,CAACyB,MAAV,CAAiBC,UADD;AAExBN,EAAAA,OAAO,EAAEpB,SAAS,CAAC2B;AAFK,CAA5B;AAKA,eAAerB,eAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n"]},"metadata":{},"sourceType":"module"}