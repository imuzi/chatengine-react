{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnLeft/Settings/ActiveSessions.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nvar ActiveSessions =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ActiveSessions, _React$Component);\n\n  function ActiveSessions() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ActiveSessions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ActiveSessions)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false,\n      openAll: false,\n      session: null\n    };\n\n    _this.handleTerminate = function (session) {\n      _this.setState({\n        open: true,\n        session: session\n      });\n    };\n\n    _this.handleTerminateAllOther = function () {\n      _this.setState({\n        openAll: true\n      });\n    };\n\n    _this.handleCloseConfirmation = function () {\n      _this.setState({\n        open: false,\n        session: null\n      });\n    };\n\n    _this.handleDoneConfirmation =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var sessions, session;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              sessions = _this.props.sessions;\n              session = _this.state.session;\n\n              if (session) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 4:\n              _this.setState({\n                open: false,\n                session: null\n              });\n\n              _context.next = 7;\n              return TdLibController.send({\n                '@type': 'terminateSession',\n                session_id: session.id\n              });\n\n            case 7:\n              sessions.sessions = sessions.sessions.filter(function (x) {\n                return x.id !== session.id;\n              });\n\n              _this.forceUpdate();\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.handleCloseAllConfirmation = function () {\n      _this.setState({\n        openAll: false\n      });\n    };\n\n    _this.handleDoneAllConfirmation =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var sessions;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              sessions = _this.props.sessions;\n\n              _this.setState({\n                openAll: false\n              });\n\n              _context2.next = 4;\n              return TdLibController.send({\n                '@type': 'terminateAllOtherSessions'\n              });\n\n            case 4:\n              sessions.sessions = sessions.sessions.filter(function (x) {\n                return !x.is_current;\n              });\n\n              _this.forceUpdate();\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _this;\n  }\n\n  _createClass(ActiveSessions, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          sessions = _this$props.sessions,\n          onClose = _this$props.onClose;\n      var _this$state = this.state,\n          open = _this$state.open,\n          openAll = _this$state.openAll;\n      var current = sessions.sessions.find(function (x) {\n        return x.is_current;\n      });\n      var other = sessions.sessions.filter(function (x) {\n        return !x.is_current;\n      });\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"header-master\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        className: \"header-left-button\",\n        onClick: onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(ArrowBackIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"header-status grow cursor-pointer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"header-status-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, t('SessionsTitle')))), React.createElement(\"div\", {\n        className: \"sidebar-page-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, Boolean(current) && React.createElement(\"div\", {\n        className: \"sidebar-page-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(SectionHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, t('CurrentSession')), React.createElement(Session, {\n        session: current,\n        onTerminate: this.handleTerminate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), other.length > 0 && React.createElement(ListItem, {\n        className: \"settings-list-item\",\n        button: true,\n        disableRipple: true,\n        onClick: this.handleTerminateAllOther,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(StopIcon, {\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primaryTypographyProps: {\n          color: 'secondary'\n        },\n        primary: t('TerminateAllSessions'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }))), other.length > 0 && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"sidebar-page-section-divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"sidebar-page-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(SectionHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, t('OtherSessions')), other.map(function (x) {\n        return React.createElement(Session, {\n          key: x.id,\n          session: x,\n          onTerminate: _this2.handleTerminate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        });\n      })))), React.createElement(Dialog, {\n        transitionDuration: 0,\n        open: open,\n        onClose: this.handleCloseConfirmation,\n        \"aria-labelledby\": \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, t('Confirm')), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        style: {\n          whiteSpace: 'pre-wrap'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, t('TerminateSessionText'))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleCloseConfirmation,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, t('Cancel')), React.createElement(Button, {\n        onClick: this.handleDoneConfirmation,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, t('Ok')))), React.createElement(Dialog, {\n        transitionDuration: 0,\n        open: openAll,\n        onClose: this.handleCloseAllConfirmation,\n        \"aria-labelledby\": \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, t('Confirm')), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        style: {\n          whiteSpace: 'pre-wrap'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, t('AreYouSureSessions'))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleCloseAllConfirmation,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, t('Cancel')), React.createElement(Button, {\n        onClick: this.handleDoneAllConfirmation,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, t('Ok')))));\n    }\n  }]);\n\n  return ActiveSessions;\n}(React.Component);\n\nActiveSessions.propTypes = {\n  sessions: PropTypes.object.isRequired,\n  onClose: PropTypes.func\n};\nvar enhance = compose(withSaveRef(), withTranslation(), withRestoreRef());\nexport default enhance(ActiveSessions);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnLeft/Settings/ActiveSessions.js"],"names":["React","PropTypes","withTranslation","compose","withRestoreRef","withSaveRef","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","ListItemIcon","ListItemText","ListItem","IconButton","ArrowBackIcon","Session","StopIcon","SectionHeader","TdLibController","ActiveSessions","state","open","openAll","session","handleTerminate","setState","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","props","send","session_id","id","filter","x","forceUpdate","handleCloseAllConfirmation","handleDoneAllConfirmation","is_current","t","onClose","current","find","other","Boolean","length","color","map","whiteSpace","Component","propTypes","object","isRequired","func","enhance"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n"]},"metadata":{},"sourceType":"module"}