{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Tile/Chat.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nvar Chat =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  function Chat(props) {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chat).call(this, props));\n\n    _this.handleClick = function () {\n      var _this$props = _this.props,\n          chatId = _this$props.chatId,\n          onSelect = _this$props.onSelect;\n      if (!onSelect) return;\n      onSelect(chatId);\n    };\n\n    var _chatId = _this.props.chatId;\n    _this.state = {\n      chat: ChatStore.get(_chatId)\n    };\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return nextProps.chatId !== this.props.chatId;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          chatId = _this$props2.chatId,\n          subtitle = _this$props2.subtitle,\n          onTileSelect = _this$props2.onTileSelect,\n          showStatus = _this$props2.showStatus,\n          showSavedMessages = _this$props2.showSavedMessages,\n          big = _this$props2.big,\n          showTitle = _this$props2.showTitle;\n      var isSavedMessages = isMeChat(chatId);\n      return React.createElement(\"div\", {\n        className: classNames('chat', {\n          'chat-big': big\n        }),\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chat-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(ChatTile, {\n        big: big,\n        chatId: chatId,\n        onSelect: onTileSelect,\n        showSavedMessages: showSavedMessages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), showTitle && React.createElement(\"div\", {\n        className: \"chat-inner-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"tile-first-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        chatId: chatId,\n        showSavedMessages: showSavedMessages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), showStatus && (!isSavedMessages || !showSavedMessages) && React.createElement(\"div\", {\n        className: \"tile-second-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(DialogStatus, {\n        chatId: chatId,\n        subtitle: subtitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nChat.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  subtitle: PropTypes.string,\n  showSavedMessages: PropTypes.bool,\n  showStatus: PropTypes.bool,\n  showTitle: PropTypes.bool,\n  onSelect: PropTypes.func,\n  onTileSelect: PropTypes.func\n};\nChat.defaultProps = {\n  showSavedMessages: true,\n  showStatus: true,\n  showTitle: true\n};\nexport default Chat;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Tile/Chat.js"],"names":["React","PropTypes","classNames","ChatTile","DialogTitle","DialogStatus","isMeChat","ChatStore","Chat","props","handleClick","chatId","onSelect","state","chat","get","nextProps","nextState","subtitle","onTileSelect","showStatus","showSavedMessages","big","showTitle","isSavedMessages","Component","propTypes","number","isRequired","string","bool","func","defaultProps"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}