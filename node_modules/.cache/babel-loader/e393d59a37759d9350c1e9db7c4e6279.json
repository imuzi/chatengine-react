{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport { getLocationId } from '../Utils/Message';\nimport { FILE_PRIORITY, IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH, THUMBNAIL_PRIORITY } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\nvar useReadFile = true;\nvar useDownloadFile = true;\n\nvar FileStore =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(FileStore, _EventEmitter);\n\n  function FileStore() {\n    var _this;\n\n    _classCallCheck(this, FileStore);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FileStore).call(this));\n\n    _this.reset = function () {\n      _this.callbacks = []; //this.transactionCount = 0;\n\n      _this.db = null;\n      _this.urls = new WeakMap();\n      _this.dataUrls = new Map();\n      _this.items = new Map();\n      _this.blobItems = new Map();\n      _this.locationItems = new Map();\n      _this.downloads = new Map();\n      _this.uploads = new Map();\n    };\n\n    _this.onUpdate =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(update) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = update['@type'];\n                _context.next = _context.t0 === 'updateAuthorizationState' ? 3 : _context.t0 === 'updateFile' ? 6 : 10;\n                break;\n\n              case 3:\n                _context.next = 5;\n                return _this.onUpdateAuthorizationState(update);\n\n              case 5:\n                return _context.abrupt(\"break\", 11);\n\n              case 6:\n                _this.set(update.file);\n\n                _this.onUpdateFile(update);\n\n                _this.emit(update['@type'], update);\n\n                return _context.abrupt(\"break\", 11);\n\n              case 10:\n                return _context.abrupt(\"break\", 11);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onClientUpdate = function (update) {\n      switch (update['@type']) {\n        case 'clientUpdateAudioThumbnailBlob':\n          {\n            _this.emit(update['@type'], update);\n\n            break;\n          }\n\n        case 'clientUpdateAudioBlob':\n          {\n            _this.emit(update['@type'], update);\n\n            break;\n          }\n\n        case 'clientUpdateDocumentBlob':\n          {\n            _this.emit(update['@type'], update);\n\n            break;\n          }\n\n        case 'clientUpdateSendFiles':\n          {\n            _this.emit(update['@type'], update);\n\n            break;\n          }\n\n        default:\n          break;\n      }\n    };\n\n    _this.addTdLibListener = function () {\n      TdLibController.on('update', _this.onUpdate);\n      TdLibController.on('clientUpdate', _this.onClientUpdate);\n    };\n\n    _this.removeTdLibListener = function () {\n      TdLibController.off('update', _this.onUpdate);\n      TdLibController.off('clientUpdate', _this.onClientUpdate);\n    };\n\n    _this.onUpdateAuthorizationState =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(update) {\n        var authorization_state;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (update) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                authorization_state = update.authorization_state;\n\n                if (authorization_state) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 5:\n                _context2.t0 = authorization_state['@type'];\n                _context2.next = _context2.t0 === 'authorizationStateWaitTdlibParameters' ? 8 : _context2.t0 === 'authorizationStateClosed' ? 11 : 13;\n                break;\n\n              case 8:\n                _context2.next = 10;\n                return _this.initDB();\n\n              case 10:\n                return _context2.abrupt(\"break\", 13);\n\n              case 11:\n                _this.reset();\n\n                return _context2.abrupt(\"break\", 13);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.onUpdateFile = function (update) {\n      if (!update) return;\n      var file = update.file;\n      if (!file) return;\n\n      _this.handleDownloads(file);\n\n      _this.handleUploads(file);\n    };\n\n    _this.handleDownloads = function (file) {\n      var arr = file.arr,\n          id = file.id,\n          idb_key = file.idb_key,\n          local = file.local;\n      delete file.arr;\n      if (!_this.downloads.has(id)) return;\n      if (!local.is_downloading_completed) return;\n      if (!useReadFile && !idb_key && !arr) return;\n\n      var items = _this.downloads.get(id);\n\n      if (!items) return;\n\n      _this.downloads.delete(id);\n\n      var store = _this.getStore();\n\n      items.forEach(function (item) {\n        switch (item['@type']) {\n          case 'animation':\n            {\n              _this.handleAnimation(store, item, file, arr, null);\n\n              break;\n            }\n\n          case 'audio':\n            {\n              _this.handleAudio(store, item, file, arr, null);\n\n              break;\n            }\n\n          case 'chat':\n            {\n              _this.handleChat(store, item, file, arr);\n\n              break;\n            }\n\n          case 'document':\n            {\n              _this.handleDocument(store, item, file, arr, null);\n\n              break;\n            }\n\n          case 'game':\n            {\n              _this.handleGame(store, item, file, arr, null);\n\n              break;\n            }\n\n          case 'location':\n            {\n              _this.handleLocation(store, item, file, arr, null);\n\n              break;\n            }\n\n          case 'message':\n            {\n              _this.handleMessage(store, item, file, arr);\n\n              break;\n            }\n\n          case 'pageBlockMap':\n            {\n              _this.handlePageBlockMap(store, item, file, arr, null);\n\n              break;\n            }\n\n          case 'photo':\n            {\n              _this.handlePhoto(store, item, file, arr, null);\n\n              break;\n            }\n\n          case 'sticker':\n            {\n              _this.handleSticker(store, item, file, arr, null);\n\n              break;\n            }\n\n          case 'video':\n            {\n              _this.handleVideo(store, item, file, arr, null);\n\n              break;\n            }\n\n          case 'videoNote':\n            {\n              _this.handleVideoNote(store, item, file, arr, null);\n\n              break;\n            }\n\n          case 'voiceNote':\n            {\n              _this.handleVoiceNote(store, item, file, arr, null);\n\n              break;\n            }\n\n          case 'user':\n            {\n              _this.handleUser(store, item, file, arr);\n\n              break;\n            }\n\n          default:\n            console.error('FileStore.onUpdateFile unhandled item', item);\n            break;\n        }\n      });\n    };\n\n    _this.handleUploads = function (file) {\n      var id = file.id,\n          remote = file.remote;\n      delete file.arr;\n      if (!_this.uploads.has(id)) return;\n      if (remote.is_uploading_completed) return;\n\n      _this.uploads.delete(id);\n    };\n\n    _this.handleChat = function (store, chat, file, arr) {\n      if (!chat) return;\n\n      _this.getLocalFile(store, file, arr, function () {\n        return _this.updateChatPhotoBlob(chat.id, file.id);\n      }, function () {\n        return _this.getRemoteFile(file.id, FILE_PRIORITY, chat);\n      });\n    };\n\n    _this.handleUser = function (store, user, file, arr) {\n      if (!user) return;\n\n      _this.getLocalFile(store, file, arr, function () {\n        return _this.updateUserPhotoBlob(user.id, file.id);\n      }, function () {\n        return _this.getRemoteFile(file.id, FILE_PRIORITY, user);\n      });\n    };\n\n    _this.handleMessage = function (store, message, file, arr) {\n      if (!message) return;\n      var content = message.content;\n      if (!content) return;\n\n      switch (content['@type']) {\n        case 'messageAnimation':\n          {\n            var animation = content.animation;\n\n            _this.handleAnimation(store, animation, file, arr, message);\n\n            break;\n          }\n\n        case 'messageAudio':\n          {\n            var audio = content.audio;\n\n            _this.handleAudio(store, audio, file, arr, message);\n\n            break;\n          }\n\n        case 'messageChatChangePhoto':\n          {\n            var photo = content.photo;\n\n            _this.handlePhoto(store, photo, file, arr, message);\n\n            break;\n          }\n\n        case 'messageDocument':\n          {\n            var document = content.document;\n\n            _this.handleDocument(store, document, file, arr, message);\n\n            break;\n          }\n\n        case 'messageGame':\n          {\n            var game = content.game;\n\n            _this.handleGame(store, game, file, arr, message);\n\n            break;\n          }\n\n        case 'messageLocation':\n          {\n            var location = content.location;\n\n            _this.handleLocation(store, location, file, arr, message);\n\n            break;\n          }\n\n        case 'messagePhoto':\n          {\n            var _photo = content.photo;\n\n            _this.handlePhoto(store, _photo, file, arr, message);\n\n            break;\n          }\n\n        case 'messageSticker':\n          {\n            var sticker = content.sticker;\n\n            _this.handleSticker(store, sticker, file, arr, message);\n\n            break;\n          }\n\n        case 'messageText':\n          {\n            var web_page = content.web_page;\n            if (!web_page) break;\n            var _animation = web_page.animation,\n                _audio = web_page.audio,\n                _document = web_page.document,\n                _photo2 = web_page.photo,\n                _sticker = web_page.sticker,\n                video = web_page.video,\n                video_note = web_page.video_note,\n                voice_note = web_page.voice_note;\n\n            if (_animation) {\n              _this.handleAnimation(store, _animation, file, arr, message);\n            }\n\n            if (_audio) {\n              _this.handleAudio(store, _audio, file, arr, message);\n            }\n\n            if (_document) {\n              _this.handleDocument(store, _document, file, arr, message);\n            }\n\n            if (_photo2) {\n              _this.handlePhoto(store, _photo2, file, arr, message);\n            }\n\n            if (_sticker) {\n              _this.handleSticker(store, _sticker, file, arr, message);\n            }\n\n            if (video) {\n              _this.handleVideo(store, video, file, arr, message);\n            }\n\n            if (voice_note) {\n              _this.handleVoiceNote(store, voice_note, file, arr, message);\n            }\n\n            if (video_note) {\n              _this.handleVideoNote(store, video_note, file, arr, message);\n            }\n\n            break;\n          }\n\n        case 'messageVenue':\n          {\n            var venue = content.venue;\n            var _location = venue.location;\n\n            _this.handleLocation(store, _location, file, arr, message);\n\n            break;\n          }\n\n        case 'messageVideo':\n          {\n            var _video = content.video;\n\n            _this.handleVideo(store, _video, file, arr, message);\n\n            break;\n          }\n\n        case 'messageVideoNote':\n          {\n            var _video_note = content.video_note;\n\n            _this.handleVideoNote(store, _video_note, file, arr, message);\n\n            break;\n          }\n\n        case 'messageVoiceNote':\n          {\n            var _voice_note = content.voice_note;\n\n            _this.handleVoiceNote(store, _voice_note, file, arr, message);\n\n            break;\n          }\n\n        default:\n          break;\n      }\n    };\n\n    _this.handleAnimation = function (store, animation, file, arr, obj) {\n      var chatId = obj ? obj.chat_id : 0;\n      var messageId = obj ? obj.id : 0;\n\n      if (animation.thumbnail) {\n        var source = animation.thumbnail.photo;\n\n        if (source && source.id === file.id) {\n          _this.getLocalFile(store, source, arr, function () {\n            return _this.updateAnimationThumbnailBlob(chatId, messageId, file.id);\n          }, function () {\n            return _this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || animation);\n          });\n        }\n      }\n\n      if (animation.animation) {\n        var _source = animation.animation;\n\n        if (_source && _source.id === file.id) {\n          _this.getLocalFile(store, _source, arr, function () {\n            return _this.updateAnimationBlob(chatId, messageId, file.id);\n          }, function () {\n            return _this.getRemoteFile(file.id, FILE_PRIORITY, obj || animation);\n          });\n        }\n      }\n    };\n\n    _this.handleAudio = function (store, audio, file, arr, obj) {\n      var chatId = obj ? obj.chat_id : 0;\n      var messageId = obj ? obj.id : 0;\n\n      if (audio.album_cover_thumbnail) {\n        var source = audio.album_cover_thumbnail.photo;\n\n        if (source && source.id === file.id) {\n          _this.getLocalFile(store, source, arr, function () {\n            return _this.updateAudioThumbnailBlob(chatId, messageId, file.id);\n          }, function () {\n            return _this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || audio);\n          });\n        }\n      }\n\n      if (audio.audio) {\n        var _source2 = audio.audio;\n\n        if (_source2 && _source2.id === file.id) {\n          _this.getLocalFile(store, _source2, arr, function () {\n            return _this.updateAudioBlob(chatId, messageId, file.id);\n          }, function () {\n            return _this.getRemoteFile(file.id, FILE_PRIORITY, obj || audio);\n          });\n        }\n      }\n    };\n\n    _this.handleGame = function (store, game, file, arr, message) {\n      if (!game) return;\n      var animation = game.animation,\n          photo = game.photo;\n\n      if (photo) {\n        _this.handlePhoto(store, photo, file, arr, message);\n      }\n\n      if (animation) {\n        _this.handleAnimation(store, animation, file, arr, message);\n      }\n    };\n\n    _this.handleDocument = function (store, document, file, arr, obj) {\n      var chatId = obj ? obj.chat_id : 0;\n      var messageId = obj ? obj.id : 0;\n\n      if (document.thumbnail) {\n        var source = document.thumbnail.photo;\n\n        if (source && source.id === file.id) {\n          _this.getLocalFile(store, source, arr, function () {\n            return _this.updateDocumentThumbnailBlob(chatId, messageId, file.id);\n          }, function () {\n            return _this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || document);\n          });\n        }\n      }\n\n      if (document.document) {\n        var _source3 = document.document;\n\n        if (_source3 && _source3.id === file.id) {\n          _this.getLocalFile(store, _source3, arr, function () {\n            return _this.updateDocumentBlob(chatId, messageId, file.id);\n          }, function () {\n            return _this.getRemoteFile(file.id, FILE_PRIORITY, obj || document);\n          });\n        }\n      }\n    };\n\n    _this.handleLocation = function (store, location, file, arr, obj) {\n      var chatId = obj ? obj.chat_id : 0;\n      var messageId = obj ? obj.id : 0;\n      var locationId = getLocationId(location);\n\n      if (locationId) {\n        var source = _this.getLocationFile(locationId);\n\n        if (source && source.id === file.id) {\n          _this.getLocalFile(store, source, arr, function () {\n            return _this.updateLocationBlob(chatId, messageId, file.id);\n          }, function () {\n            return _this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || location);\n          });\n        }\n      }\n    };\n\n    _this.handlePageBlockMap = function (store, pageBlockMap, file, arr, obj) {\n      var chatId = obj ? obj.chat_id : 0;\n      var messageId = obj ? obj.id : 0;\n      var location = pageBlockMap.location;\n      var locationId = getLocationId(location, IV_LOCATION_WIDTH, IV_LOCATION_HEIGHT);\n\n      if (locationId) {\n        var source = _this.getLocationFile(locationId);\n\n        if (source && source.id === file.id) {\n          _this.getLocalFile(store, source, arr, function () {\n            return _this.updateLocationBlob(chatId, messageId, file.id);\n          }, function () {\n            return _this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || pageBlockMap);\n          });\n        }\n      }\n    };\n\n    _this.handlePhoto = function (store, photo, file, arr, obj) {\n      var chatId = obj ? obj.chat_id : 0;\n      var messageId = obj ? obj.id : 0;\n\n      if (photo) {\n        for (var i = 0; i < photo.sizes.length; i++) {\n          var photoSize = photo.sizes[i];\n\n          if (photoSize) {\n            var source = photoSize.photo;\n\n            if (source && source.id === file.id) {\n              _this.getLocalFile(store, source, arr, function () {\n                return _this.updatePhotoBlob(chatId, messageId, file.id);\n              }, function () {\n                return _this.getRemoteFile(file.id, FILE_PRIORITY, obj || photo);\n              });\n\n              break;\n            }\n          }\n        }\n      }\n    };\n\n    _this.handleSticker = function (store, sticker, file, arr, obj) {\n      var chatId = obj ? obj.chat_id : 0;\n      var messageId = obj ? obj.id : 0;\n\n      if (sticker.thumbnail) {\n        var source = sticker.thumbnail.photo;\n\n        if (source && source.id === file.id) {\n          _this.getLocalFile(store, source, arr, function () {\n            return _this.updateStickerThumbnailBlob(chatId, messageId, file.id);\n          }, function () {\n            return _this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || sticker);\n          });\n        }\n      }\n\n      if (sticker.sticker) {\n        var _source4 = sticker.sticker;\n\n        if (_source4 && _source4.id === file.id) {\n          _this.getLocalFile(store, _source4, arr, function () {\n            return _this.updateStickerBlob(chatId, messageId, file.id);\n          }, function () {\n            return _this.getRemoteFile(file.id, FILE_PRIORITY, obj || sticker);\n          });\n        }\n      }\n    };\n\n    _this.handleVoiceNote = function (store, voiceNote, file, arr, obj) {\n      var chatId = obj ? obj.chat_id : 0;\n      var messageId = obj ? obj.id : 0;\n\n      if (voiceNote.voice) {\n        var source = voiceNote.voice;\n\n        if (source && source.id === file.id) {\n          _this.getLocalFile(store, source, arr, function () {\n            return _this.updateVoiceNoteBlob(chatId, messageId, file.id);\n          }, function () {\n            return _this.getRemoteFile(file.id, FILE_PRIORITY, obj || voiceNote);\n          });\n        }\n      }\n    };\n\n    _this.handleVideoNote = function (store, videoNote, file, arr, obj) {\n      var chatId = obj ? obj.chat_id : 0;\n      var messageId = obj ? obj.id : 0;\n\n      if (videoNote.thumbnail) {\n        var source = videoNote.thumbnail.photo;\n\n        if (source && source.id === file.id) {\n          _this.getLocalFile(store, source, arr, function () {\n            return _this.updateVideoNoteThumbnailBlob(chatId, messageId, file.id);\n          }, function () {\n            return _this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || videoNote);\n          });\n        }\n      }\n\n      if (videoNote.video) {\n        var _source5 = videoNote.video;\n\n        if (_source5 && _source5.id === file.id) {\n          _this.getLocalFile(store, _source5, arr, function () {\n            return _this.updateVideoNoteBlob(chatId, messageId, file.id);\n          }, function () {\n            return _this.getRemoteFile(file.id, FILE_PRIORITY, obj || videoNote);\n          });\n        }\n      }\n    };\n\n    _this.handleVideo = function (store, video, file, arr, obj) {\n      var chatId = obj ? obj.chat_id : 0;\n      var messageId = obj ? obj.id : 0;\n\n      if (video.thumbnail) {\n        var source = video.thumbnail.photo;\n\n        if (source && source.id === file.id) {\n          _this.getLocalFile(store, source, arr, function () {\n            return _this.updateVideoThumbnailBlob(chatId, messageId, file.id);\n          }, function () {\n            return _this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || video);\n          });\n        }\n      }\n\n      if (video.video) {\n        var _source6 = video.video;\n\n        if (_source6 && _source6.id === file.id) {\n          _this.getLocalFile(store, _source6, arr, function () {\n            return _this.updateVideoBlob(chatId, messageId, file.id);\n          }, function () {\n            return _this.getRemoteFile(file.id, FILE_PRIORITY, obj || video);\n          });\n        }\n      }\n    };\n\n    _this.deleteLocalFile = function (store, file) {};\n\n    _this.get = function (fileId) {\n      return _this.items.get(fileId);\n    };\n\n    _this.set = function (file) {\n      _this.items.set(file.id, file);\n    };\n\n    _this.getBlob = function (fileId) {\n      return _this.blobItems.get(fileId);\n    };\n\n    _this.setBlob = function (fileId, blob) {\n      _this.blobItems.set(fileId, blob);\n    };\n\n    _this.deleteBlob = function (fileId) {\n      _this.blobItems.delete(fileId);\n    };\n\n    _this.getLocationFile = function (locationId) {\n      var fileId = _this.locationItems.get(locationId);\n\n      return _this.get(fileId);\n    };\n\n    _this.setLocationFile = function (locationId, file) {\n      _this.locationItems.set(locationId, file.id);\n\n      _this.set(file);\n    };\n\n    _this.getDataUrl = function (id) {\n      if (!id) {\n        return null;\n      }\n\n      if (_this.dataUrls.has(id)) {\n        return _this.dataUrls.get(id);\n      }\n\n      return null;\n    };\n\n    _this.setDataUrl = function (id, dataUrl) {\n      _this.dataUrls.set(id, dataUrl);\n    };\n\n    _this.deleteDataUrl = function (id) {\n      _this.dataUrls.delete(id);\n    };\n\n    _this.getBlobUrl = function (blob) {\n      if (!blob) {\n        return null;\n      }\n\n      if (_this.urls.has(blob)) {\n        return _this.urls.get(blob);\n      }\n\n      var url = URL.createObjectURL(blob);\n\n      _this.urls.set(blob, url);\n\n      return url;\n    };\n\n    _this.deleteBlobUrl = function (blob) {\n      if (_this.urls.has(blob)) {\n        _this.urls.delete(blob);\n      }\n    };\n\n    _this.updatePhotoBlob = function (chatId, messageId, fileId) {\n      _this.emit('clientUpdatePhotoBlob', {\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    _this.updateAudioThumbnailBlob = function (chatId, messageId, fileId) {\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateAudioThumbnailBlob',\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    _this.updateAudioBlob = function (chatId, messageId, fileId) {\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateAudioBlob',\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    _this.updateVoiceNoteBlob = function (chatId, messageId, fileId) {\n      _this.emit('clientUpdateVoiceNoteBlob', {\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    _this.updateVideoNoteThumbnailBlob = function (chatId, messageId, fileId) {\n      _this.emit('clientUpdateVideoNoteThumbnailBlob', {\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    _this.updateVideoNoteBlob = function (chatId, messageId, fileId) {\n      _this.emit('clientUpdateVideoNoteBlob', {\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    _this.updateAnimationThumbnailBlob = function (chatId, messageId, fileId) {\n      _this.emit('clientUpdateAnimationThumbnailBlob', {\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    _this.updateAnimationBlob = function (chatId, messageId, fileId) {\n      _this.emit('clientUpdateAnimationBlob', {\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    _this.updateDocumentBlob = function (chatId, messageId, fileId) {\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateDocumentBlob',\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    _this.updateVideoThumbnailBlob = function (chatId, messageId, fileId) {\n      _this.emit('clientUpdateVideoThumbnailBlob', {\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    _this.updateVideoBlob = function (chatId, messageId, fileId) {\n      _this.emit('clientUpdateVideoBlob', {\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    _this.updateStickerThumbnailBlob = function (chatId, messageId, fileId) {\n      _this.emit('clientUpdateStickerThumbnailBlob', {\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    _this.updateStickerBlob = function (chatId, messageId, fileId) {\n      _this.emit('clientUpdateStickerBlob', {\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    _this.updateLocationBlob = function (chatId, messageId, fileId) {\n      _this.emit('clientUpdateLocationBlob', {\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    _this.updateDocumentThumbnailBlob = function (chatId, messageId, fileId) {\n      _this.emit('clientUpdateDocumentThumbnailBlob', {\n        chatId: chatId,\n        messageId: messageId,\n        fileId: fileId\n      });\n    };\n\n    _this.reset();\n\n    _this.addTdLibListener();\n\n    return _this;\n  }\n\n  _createClass(FileStore, [{\n    key: \"initDB\",\n    value: function () {\n      var _initDB = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(callback) {\n        var i;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this.db) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                // console.log('[FileStore] db exists');\n                if (callback) callback();\n                return _context3.abrupt(\"return\");\n\n              case 3:\n                if (!this.initiatingDB) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                // console.log('[FileStore] add callback');\n                if (callback) this.callbacks.push(callback);\n                return _context3.abrupt(\"return\");\n\n              case 6:\n                // console.log('[FileStore] start initDB');\n                if (callback) this.callbacks.push(callback);\n                this.initiatingDB = true;\n                _context3.next = 10;\n                return this.openDB().catch(function (error) {\n                  return console.log('[FileStore] initDB error', error);\n                });\n\n              case 10:\n                this.db = _context3.sent;\n                this.initiatingDB = false; // console.log('[FileStore] stop initDB');\n\n                if (this.callbacks.length) {\n                  // console.log('[FileStore] invoke callbacks count=' + this.callbacks.length);\n                  for (i = 0; i < this.callbacks.length; i++) {\n                    this.callbacks[i]();\n                  }\n\n                  this.callbacks = [];\n                }\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function initDB(_x3) {\n        return _initDB.apply(this, arguments);\n      }\n\n      return initDB;\n    }()\n  }, {\n    key: \"openDB\",\n    value: function openDB() {\n      return new Promise(function (resolve, reject) {\n        var request = window.indexedDB.open('tdlib');\n\n        request.onsuccess = function () {\n          return resolve(request.result);\n        };\n\n        request.onerror = function () {\n          return reject(request.error);\n        };\n      });\n    }\n  }, {\n    key: \"getStore\",\n    value: function getStore() {\n      if (useReadFile) {\n        return undefined;\n      } //console.log('FileStore.getStore ' + this.transactionCount++);\n\n\n      return this.db.transaction(['keyvaluepairs'], 'readonly').objectStore('keyvaluepairs');\n    }\n  }, {\n    key: \"getReadWriteStore\",\n    value: function getReadWriteStore() {\n      if (useReadFile) {\n        return undefined;\n      }\n\n      return this.db.transaction(['keyvaluepairs'], 'readwrite').objectStore('keyvaluepairs');\n    }\n  }, {\n    key: \"getLocalFile\",\n    value: function getLocalFile(store, file, arr, callback, faultCallback) {\n      var _this2 = this;\n\n      if (!useDownloadFile) {\n        return;\n      }\n\n      if (useReadFile) {\n        file = this.get(file.id) || file;\n\n        if (file && file.local && !file.local.is_downloading_completed) {\n          faultCallback();\n          return;\n        }\n\n        (function () {\n          var _ref3 = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee4(file) {\n            var response;\n            return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    _context4.next = 2;\n                    return TdLibController.send({\n                      '@type': 'readFile',\n                      file_id: file.id\n                    });\n\n                  case 2:\n                    response = _context4.sent;\n\n                    // console.log(`[fs] readFile result file_id=${file.id}`, file, response);\n                    _this2.setBlob(file.id, response.data);\n\n                  case 4:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, _callee4);\n          }));\n\n          return function (_x4) {\n            return _ref3.apply(this, arguments);\n          };\n        })()(file).then(callback, faultCallback);\n        return;\n      }\n\n      var idb_key = file.idb_key;\n\n      if (!idb_key) {\n        file = this.get(file.id) || file;\n        idb_key = file.idb_key;\n      }\n\n      if (!idb_key && !arr) {\n        faultCallback();\n        return;\n      }\n\n      if (arr) {\n        file.blob = new Blob([arr]);\n        this.setBlob(file.id, file.blob);\n        callback();\n        return;\n      }\n\n      if (file.blob) {\n        //callback();\n        return;\n      } // if (this.getBlob(file.id)){\n      //     return;\n      // }\n\n\n      var request = store.get(idb_key);\n\n      request.onsuccess = function (event) {\n        var blob = event.target.result;\n\n        if (blob) {\n          file.blob = blob;\n\n          _this2.setBlob(file.id, file.blob);\n\n          callback();\n        } else {\n          faultCallback();\n        }\n      };\n\n      request.onerror = function () {\n        faultCallback();\n      };\n    }\n  }, {\n    key: \"getRemoteFile\",\n    value: function getRemoteFile(fileId, priority, obj) {\n      if (!useDownloadFile) {\n        return;\n      }\n\n      var items = this.downloads.get(fileId) || [];\n      if (items.some(function (x) {\n        return x === obj;\n      })) return;\n      items.push(obj);\n      this.downloads.set(fileId, items);\n      TdLibController.send({\n        '@type': 'downloadFile',\n        file_id: fileId,\n        priority: priority\n      });\n    }\n  }, {\n    key: \"cancelGetRemoteFile\",\n    value: function cancelGetRemoteFile(fileId, obj) {\n      if (!this.downloads.has(fileId)) return;\n\n      if (!obj) {\n        this.downloads.delete(fileId);\n      } else {\n        var items = this.downloads.get(fileId).filter(function (x) {\n          return x !== obj;\n        });\n        this.downloads.set(fileId, items);\n      }\n\n      TdLibController.send({\n        '@type': 'cancelDownloadFile',\n        file_id: fileId,\n        only_if_pending: false\n      });\n    }\n  }, {\n    key: \"uploadFile\",\n    value: function uploadFile(fileId, obj) {\n      if (this.uploads.has(fileId)) {\n        var items = this.uploads.get(fileId);\n        items.push(obj);\n      } else {\n        this.uploads.set(fileId, [obj]);\n      }\n\n      console.log('[perf] uploadFile file_id=' + fileId);\n    }\n  }, {\n    key: \"cancelUploadFile\",\n    value: function cancelUploadFile(fileId, obj) {\n      if (this.uploads.has(fileId)) {\n        this.uploads.delete(fileId);\n        console.log('cancel_upload_message id=' + obj.id);\n        TdLibController.send({\n          '@type': 'deleteMessages',\n          chat_id: obj.chat_id,\n          message_ids: [obj.id],\n          revoke: true\n        });\n      }\n    }\n  }, {\n    key: \"updateUserPhotoBlob\",\n    value: function updateUserPhotoBlob(userId, fileId) {\n      this.emit('clientUpdateUserBlob', {\n        userId: userId,\n        fileId: fileId\n      });\n    }\n  }, {\n    key: \"updateChatPhotoBlob\",\n    value: function updateChatPhotoBlob(chatId, fileId) {\n      this.emit('clientUpdateChatBlob', {\n        chatId: chatId,\n        fileId: fileId\n      });\n    }\n  }]);\n\n  return FileStore;\n}(EventEmitter);\n\nvar store = new FileStore();\nwindow.file = store;\nexport default store;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Stores/FileStore.js"],"names":["EventEmitter","getLocationId","FILE_PRIORITY","IV_LOCATION_HEIGHT","IV_LOCATION_WIDTH","THUMBNAIL_PRIORITY","TdLibController","useReadFile","useDownloadFile","FileStore","reset","callbacks","db","urls","WeakMap","dataUrls","Map","items","blobItems","locationItems","downloads","uploads","onUpdate","update","onUpdateAuthorizationState","set","file","onUpdateFile","emit","onClientUpdate","addTdLibListener","on","removeTdLibListener","off","authorization_state","initDB","handleDownloads","handleUploads","arr","id","idb_key","local","has","is_downloading_completed","get","delete","store","getStore","forEach","item","handleAnimation","handleAudio","handleChat","handleDocument","handleGame","handleLocation","handleMessage","handlePageBlockMap","handlePhoto","handleSticker","handleVideo","handleVideoNote","handleVoiceNote","handleUser","console","error","remote","is_uploading_completed","chat","getLocalFile","updateChatPhotoBlob","getRemoteFile","user","updateUserPhotoBlob","message","content","animation","audio","photo","document","game","location","sticker","web_page","video","video_note","voice_note","venue","obj","chatId","chat_id","messageId","thumbnail","source","updateAnimationThumbnailBlob","updateAnimationBlob","album_cover_thumbnail","updateAudioThumbnailBlob","updateAudioBlob","updateDocumentThumbnailBlob","updateDocumentBlob","locationId","getLocationFile","updateLocationBlob","pageBlockMap","i","sizes","length","photoSize","updatePhotoBlob","updateStickerThumbnailBlob","updateStickerBlob","voiceNote","voice","updateVoiceNoteBlob","videoNote","updateVideoNoteThumbnailBlob","updateVideoNoteBlob","updateVideoThumbnailBlob","updateVideoBlob","deleteLocalFile","fileId","getBlob","setBlob","blob","deleteBlob","setLocationFile","getDataUrl","setDataUrl","dataUrl","deleteDataUrl","getBlobUrl","url","URL","createObjectURL","deleteBlobUrl","clientUpdate","callback","initiatingDB","push","openDB","catch","log","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","result","onerror","undefined","transaction","objectStore","faultCallback","send","file_id","response","data","then","Blob","event","target","priority","some","x","filter","only_if_pending","message_ids","revoke","userId"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { getLocationId } from '../Utils/Message';\nimport { FILE_PRIORITY, IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH, THUMBNAIL_PRIORITY } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nconst useReadFile = true;\nconst useDownloadFile = true;\n\nclass FileStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.callbacks = [];\n\n        //this.transactionCount = 0;\n        this.db = null;\n        this.urls = new WeakMap();\n        this.dataUrls = new Map();\n        this.items = new Map();\n        this.blobItems = new Map();\n        this.locationItems = new Map();\n\n        this.downloads = new Map();\n        this.uploads = new Map();\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                await this.onUpdateAuthorizationState(update);\n\n                break;\n            }\n            case 'updateFile': {\n                this.set(update.file);\n\n                this.onUpdateFile(update);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateAudioThumbnailBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateAudioBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateDocumentBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateSendFiles': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdateAuthorizationState = async update => {\n        if (!update) return;\n\n        const { authorization_state } = update;\n        if (!authorization_state) return;\n\n        switch (authorization_state['@type']) {\n            case 'authorizationStateWaitTdlibParameters': {\n                await this.initDB();\n                break;\n            }\n            case 'authorizationStateClosed': {\n                this.reset();\n                break;\n            }\n        }\n    };\n\n    onUpdateFile = update => {\n        if (!update) return;\n\n        const { file } = update;\n        if (!file) return;\n\n        this.handleDownloads(file);\n        this.handleUploads(file);\n    };\n\n    handleDownloads = file => {\n        const { arr, id, idb_key, local } = file;\n        delete file.arr;\n\n        if (!this.downloads.has(id)) return;\n        if (!local.is_downloading_completed) return;\n        if (!useReadFile && !idb_key && !arr) return;\n\n        const items = this.downloads.get(id);\n        if (!items) return;\n\n        this.downloads.delete(id);\n\n        const store = this.getStore();\n\n        items.forEach(item => {\n            switch (item['@type']) {\n                case 'animation': {\n                    this.handleAnimation(store, item, file, arr, null);\n                    break;\n                }\n                case 'audio': {\n                    this.handleAudio(store, item, file, arr, null);\n                    break;\n                }\n                case 'chat': {\n                    this.handleChat(store, item, file, arr);\n                    break;\n                }\n                case 'document': {\n                    this.handleDocument(store, item, file, arr, null);\n                    break;\n                }\n                case 'game': {\n                    this.handleGame(store, item, file, arr, null);\n                    break;\n                }\n                case 'location': {\n                    this.handleLocation(store, item, file, arr, null);\n                    break;\n                }\n                case 'message': {\n                    this.handleMessage(store, item, file, arr);\n                    break;\n                }\n                case 'pageBlockMap': {\n                    this.handlePageBlockMap(store, item, file, arr, null);\n                    break;\n                }\n                case 'photo': {\n                    this.handlePhoto(store, item, file, arr, null);\n                    break;\n                }\n                case 'sticker': {\n                    this.handleSticker(store, item, file, arr, null);\n                    break;\n                }\n                case 'video': {\n                    this.handleVideo(store, item, file, arr, null);\n                    break;\n                }\n                case 'videoNote': {\n                    this.handleVideoNote(store, item, file, arr, null);\n                    break;\n                }\n                case 'voiceNote': {\n                    this.handleVoiceNote(store, item, file, arr, null);\n                    break;\n                }\n                case 'user': {\n                    this.handleUser(store, item, file, arr);\n                    break;\n                }\n                default:\n                    console.error('FileStore.onUpdateFile unhandled item', item);\n                    break;\n            }\n        });\n    };\n\n    handleUploads = file => {\n        const { id, remote } = file;\n        delete file.arr;\n\n        if (!this.uploads.has(id)) return;\n        if (remote.is_uploading_completed) return;\n\n        this.uploads.delete(id);\n    };\n\n    handleChat = (store, chat, file, arr) => {\n        if (!chat) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateChatPhotoBlob(chat.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, chat)\n        );\n    };\n\n    handleUser = (store, user, file, arr) => {\n        if (!user) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateUserPhotoBlob(user.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, user)\n        );\n    };\n\n    handleMessage = (store, message, file, arr) => {\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.handleAnimation(store, animation, file, arr, message);\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n\n                this.handleAudio(store, audio, file, arr, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.handleDocument(store, document, file, arr, message);\n                break;\n            }\n            case 'messageGame': {\n                const { game } = content;\n\n                this.handleGame(store, game, file, arr, message);\n                break;\n            }\n            case 'messageLocation': {\n                const { location } = content;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageSticker': {\n                const { sticker } = content;\n\n                this.handleSticker(store, sticker, file, arr, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) break;\n\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    this.handleAnimation(store, animation, file, arr, message);\n                }\n\n                if (audio) {\n                    this.handleAudio(store, audio, file, arr, message);\n                }\n\n                if (document) {\n                    this.handleDocument(store, document, file, arr, message);\n                }\n\n                if (photo) {\n                    this.handlePhoto(store, photo, file, arr, message);\n                }\n\n                if (sticker) {\n                    this.handleSticker(store, sticker, file, arr, message);\n                }\n\n                if (video) {\n                    this.handleVideo(store, video, file, arr, message);\n                }\n\n                if (voice_note) {\n                    this.handleVoiceNote(store, voice_note, file, arr, message);\n                }\n\n                if (video_note) {\n                    this.handleVideoNote(store, video_note, file, arr, message);\n                }\n\n                break;\n            }\n            case 'messageVenue': {\n                const { venue } = content;\n                const { location } = venue;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.handleVideo(store, video, file, arr, message);\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n\n                this.handleVideoNote(store, video_note, file, arr, message);\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n\n                this.handleVoiceNote(store, voice_note, file, arr, message);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    handleAnimation = (store, animation, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (animation.thumbnail) {\n            const source = animation.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || animation)\n                );\n            }\n        }\n\n        if (animation.animation) {\n            const source = animation.animation;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || animation)\n                );\n            }\n        }\n    };\n\n    handleAudio = (store, audio, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (audio.album_cover_thumbnail) {\n            const source = audio.album_cover_thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || audio)\n                );\n            }\n        }\n\n        if (audio.audio) {\n            const source = audio.audio;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || audio)\n                );\n            }\n        }\n    };\n\n    handleGame = (store, game, file, arr, message) => {\n        if (!game) return;\n\n        const { animation, photo } = game;\n        if (photo) {\n            this.handlePhoto(store, photo, file, arr, message);\n        }\n\n        if (animation) {\n            this.handleAnimation(store, animation, file, arr, message);\n        }\n    };\n\n    handleDocument = (store, document, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (document.thumbnail) {\n            const { photo: source } = document.thumbnail;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || document)\n                );\n            }\n        }\n\n        if (document.document) {\n            const { document: source } = document;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || document)\n                );\n            }\n        }\n    };\n\n    handleLocation = (store, location, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        const locationId = getLocationId(location);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || location)\n                );\n            }\n        }\n    };\n\n    handlePageBlockMap = (store, pageBlockMap, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        const { location } = pageBlockMap;\n        const locationId = getLocationId(location, IV_LOCATION_WIDTH, IV_LOCATION_HEIGHT);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || pageBlockMap)\n                );\n            }\n        }\n    };\n\n    handlePhoto = (store, photo, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (photo) {\n            for (let i = 0; i < photo.sizes.length; i++) {\n                const photoSize = photo.sizes[i];\n                if (photoSize) {\n                    const source = photoSize.photo;\n                    if (source && source.id === file.id) {\n                        this.getLocalFile(\n                            store,\n                            source,\n                            arr,\n                            () => this.updatePhotoBlob(chatId, messageId, file.id),\n                            () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || photo)\n                        );\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    handleSticker = (store, sticker, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (sticker.thumbnail) {\n            const source = sticker.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || sticker)\n                );\n            }\n        }\n\n        if (sticker.sticker) {\n            const source = sticker.sticker;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || sticker)\n                );\n            }\n        }\n    };\n\n    handleVoiceNote = (store, voiceNote, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (voiceNote.voice) {\n            const source = voiceNote.voice;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVoiceNoteBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || voiceNote)\n                );\n            }\n        }\n    };\n\n    handleVideoNote = (store, videoNote, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (videoNote.thumbnail) {\n            const source = videoNote.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || videoNote)\n                );\n            }\n        }\n\n        if (videoNote.video) {\n            const source = videoNote.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || videoNote)\n                );\n            }\n        }\n    };\n\n    handleVideo = (store, video, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (video.thumbnail) {\n            const source = video.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || video)\n                );\n            }\n        }\n\n        if (video.video) {\n            const source = video.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || video)\n                );\n            }\n        }\n    };\n\n    async initDB(callback) {\n        /*if (this.store) return;\n            if (this.initiatingDB) return;\n\n            this.initiatingDB = true;\n            this.store = localForage.createInstance({\n                name: 'tdlib'\n            });\n            this.initiatingDB = false;\n\n            return;*/\n        if (this.db) {\n            // console.log('[FileStore] db exists');\n            if (callback) callback();\n            return;\n        }\n\n        if (this.initiatingDB) {\n            // console.log('[FileStore] add callback');\n            if (callback) this.callbacks.push(callback);\n            return;\n        }\n\n        // console.log('[FileStore] start initDB');\n        if (callback) this.callbacks.push(callback);\n\n        this.initiatingDB = true;\n        this.db = await this.openDB().catch(error => console.log('[FileStore] initDB error', error));\n        this.initiatingDB = false;\n\n        // console.log('[FileStore] stop initDB');\n\n        if (this.callbacks.length) {\n            // console.log('[FileStore] invoke callbacks count=' + this.callbacks.length);\n            for (let i = 0; i < this.callbacks.length; i++) {\n                this.callbacks[i]();\n            }\n            this.callbacks = [];\n        }\n    }\n\n    openDB() {\n        return new Promise((resolve, reject) => {\n            const request = window.indexedDB.open('tdlib');\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => reject(request.error);\n        });\n    }\n\n    getStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n\n        //console.log('FileStore.getStore ' + this.transactionCount++);\n        return this.db.transaction(['keyvaluepairs'], 'readonly').objectStore('keyvaluepairs');\n    }\n\n    getReadWriteStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n\n        return this.db.transaction(['keyvaluepairs'], 'readwrite').objectStore('keyvaluepairs');\n    }\n\n    deleteLocalFile = (store, file) => {};\n\n    getLocalFile(store, file, arr, callback, faultCallback) {\n        if (!useDownloadFile) {\n            return;\n        }\n\n        if (useReadFile) {\n            file = this.get(file.id) || file;\n            if (file && file.local && !file.local.is_downloading_completed) {\n                faultCallback();\n                return;\n            }\n\n            (async file => {\n                // console.log('[fs] readFile file_id=' + file.id);\n                const response = await TdLibController.send({\n                    '@type': 'readFile',\n                    file_id: file.id\n                });\n\n                // console.log(`[fs] readFile result file_id=${file.id}`, file, response);\n                this.setBlob(file.id, response.data);\n            })(file).then(callback, faultCallback);\n\n            return;\n        }\n\n        let idb_key = file.idb_key;\n        if (!idb_key) {\n            file = this.get(file.id) || file;\n            idb_key = file.idb_key;\n        }\n\n        if (!idb_key && !arr) {\n            faultCallback();\n            return;\n        }\n\n        if (arr) {\n            file.blob = new Blob([arr]);\n            this.setBlob(file.id, file.blob);\n            callback();\n            return;\n        }\n\n        if (file.blob) {\n            //callback();\n            return;\n        }\n\n        // if (this.getBlob(file.id)){\n        //     return;\n        // }\n\n        const request = store.get(idb_key);\n        request.onsuccess = event => {\n            const blob = event.target.result;\n\n            if (blob) {\n                file.blob = blob;\n                this.setBlob(file.id, file.blob);\n                callback();\n            } else {\n                faultCallback();\n            }\n        };\n        request.onerror = () => {\n            faultCallback();\n        };\n    }\n\n    getRemoteFile(fileId, priority, obj) {\n        if (!useDownloadFile) {\n            return;\n        }\n\n        const items = this.downloads.get(fileId) || [];\n        if (items.some(x => x === obj)) return;\n\n        items.push(obj);\n        this.downloads.set(fileId, items);\n\n        TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: priority\n        });\n    }\n\n    cancelGetRemoteFile(fileId, obj) {\n        if (!this.downloads.has(fileId)) return;\n\n        if (!obj) {\n            this.downloads.delete(fileId);\n        } else {\n            const items = this.downloads.get(fileId).filter(x => x !== obj);\n            this.downloads.set(fileId, items);\n        }\n\n        TdLibController.send({\n            '@type': 'cancelDownloadFile',\n            file_id: fileId,\n            only_if_pending: false\n        });\n    }\n\n    uploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            let items = this.uploads.get(fileId);\n            items.push(obj);\n        } else {\n            this.uploads.set(fileId, [obj]);\n        }\n\n        console.log('[perf] uploadFile file_id=' + fileId);\n    }\n\n    cancelUploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            this.uploads.delete(fileId);\n            console.log('cancel_upload_message id=' + obj.id);\n            TdLibController.send({\n                '@type': 'deleteMessages',\n                chat_id: obj.chat_id,\n                message_ids: [obj.id],\n                revoke: true\n            });\n        }\n    }\n\n    get = fileId => {\n        return this.items.get(fileId);\n    };\n\n    set = file => {\n        this.items.set(file.id, file);\n    };\n\n    getBlob = fileId => {\n        return this.blobItems.get(fileId);\n    };\n\n    setBlob = (fileId, blob) => {\n        this.blobItems.set(fileId, blob);\n    };\n\n    deleteBlob = fileId => {\n        this.blobItems.delete(fileId);\n    };\n\n    getLocationFile = locationId => {\n        const fileId = this.locationItems.get(locationId);\n\n        return this.get(fileId);\n    };\n\n    setLocationFile = (locationId, file) => {\n        this.locationItems.set(locationId, file.id);\n\n        this.set(file);\n    };\n\n    getDataUrl = id => {\n        if (!id) {\n            return null;\n        }\n\n        if (this.dataUrls.has(id)) {\n            return this.dataUrls.get(id);\n        }\n\n        return null;\n    };\n\n    setDataUrl = (id, dataUrl) => {\n        this.dataUrls.set(id, dataUrl);\n    };\n\n    deleteDataUrl = id => {\n        this.dataUrls.delete(id);\n    };\n\n    getBlobUrl = blob => {\n        if (!blob) {\n            return null;\n        }\n\n        if (this.urls.has(blob)) {\n            return this.urls.get(blob);\n        }\n\n        const url = URL.createObjectURL(blob);\n        this.urls.set(blob, url);\n\n        return url;\n    };\n\n    deleteBlobUrl = blob => {\n        if (this.urls.has(blob)) {\n            this.urls.delete(blob);\n        }\n    };\n\n    updatePhotoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdatePhotoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioThumbnailBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioThumbnailBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVoiceNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVoiceNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDocumentBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateLocationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateLocationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateDocumentThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateUserPhotoBlob(userId, fileId) {\n        this.emit('clientUpdateUserBlob', {\n            userId: userId,\n            fileId: fileId\n        });\n    }\n\n    updateChatPhotoBlob(chatId, fileId) {\n        this.emit('clientUpdateChatBlob', {\n            chatId: chatId,\n            fileId: fileId\n        });\n    }\n}\n\nconst store = new FileStore();\nwindow.file = store;\nexport default store;\n"]},"metadata":{},"sourceType":"module"}