{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnLeft/Settings/EditProfile.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Chat from '../../Tile/Chat';\nimport SidebarPage from '../SidebarPage';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\n\nvar EditProfile =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditProfile, _React$Component);\n\n  function EditProfile(props) {\n    var _this;\n\n    _classCallCheck(this, EditProfile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditProfile).call(this, props));\n    _this.handleUsernameChange =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var chatId, username, newUsername, result, newUsername2;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              chatId = _this.props.chatId;\n              username = _this.state.username;\n              newUsername = _this.usernameRef.current.value;\n\n              if (newUsername.startsWith('@') && newUsername.length > 1) {\n                newUsername = newUsername.substr(1);\n              }\n\n              if (!(username === newUsername || newUsername === '')) {\n                _context.next = 8;\n                break;\n              }\n\n              _this.setState({\n                usernameCheck: null\n              }); // console.log('[un] checkChatUsername', 'null');\n\n\n              _context.next = 14;\n              break;\n\n            case 8:\n              _context.next = 10;\n              return TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n              });\n\n            case 10:\n              result = _context.sent;\n              // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n              newUsername2 = _this.usernameRef.current.value;\n\n              if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n              }\n\n              if (newUsername2 === newUsername) {\n                _this.setState({\n                  usernameCheck: result\n                });\n              }\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.firstNameRef = React.createRef();\n    _this.lastNameRef = React.createRef();\n    _this.bioRef = React.createRef();\n    _this.usernameRef = React.createRef();\n    var user = UserStore.get(UserStore.getMyId());\n    var userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n    _this.state = {\n      firstName: user ? user.first_name : '',\n      lastName: user ? user.last_name : '',\n      bio: userFullInfo ? userFullInfo.bio : '',\n      username: user ? user.username : '',\n      usernameCheck: null\n    };\n    return _this;\n  }\n\n  _createClass(EditProfile, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.setName();\n      this.setBio();\n      this.setUsername();\n    }\n  }, {\n    key: \"setUsername\",\n    value: function setUsername() {\n      var _this$state = this.state,\n          username = _this$state.username,\n          usernameCheck = _this$state.usernameCheck;\n      var newUsername = this.usernameRef.current.value;\n\n      if (newUsername.startsWith('@') && newUsername.length > 1) {\n        newUsername = newUsername.substr(1);\n      }\n\n      if (username === newUsername) return;\n      if (!usernameCheck) return;\n      if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n      TdLibController.send({\n        '@type': 'setUsername',\n        username: newUsername\n      });\n    }\n  }, {\n    key: \"setName\",\n    value: function setName() {\n      var _this$state2 = this.state,\n          firstName = _this$state2.firstName,\n          lastName = _this$state2.lastName;\n      var newFirstName = this.firstNameRef.current.value;\n      var newLastName = this.lastNameRef.current.value;\n\n      if (newFirstName === firstName && newLastName === lastName) {\n        return;\n      }\n\n      TdLibController.send({\n        '@type': 'setName',\n        first_name: newFirstName,\n        last_name: newLastName\n      });\n    }\n  }, {\n    key: \"setBio\",\n    value: function setBio() {\n      var bio = this.state.bio;\n      var newBio = this.bioRef.current.value;\n\n      if (newBio === bio) {\n        return;\n      }\n\n      TdLibController.send({\n        '@type': 'setBio',\n        bio: newBio\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          chatId = _this$props.chatId,\n          t = _this$props.t,\n          onClose = _this$props.onClose;\n      var _this$state3 = this.state,\n          firstName = _this$state3.firstName,\n          lastName = _this$state3.lastName,\n          bio = _this$state3.bio,\n          username = _this$state3.username,\n          usernameCheck = _this$state3.usernameCheck;\n      var hasError = false;\n      var usernameLabel = t('Username');\n\n      if (usernameCheck) {\n        switch (usernameCheck['@type']) {\n          case 'checkChatUsernameResultOk':\n            {\n              hasError = false;\n              usernameLabel = 'Username is available';\n              break;\n            }\n\n          case 'checkChatUsernameResultPublicChatsTooMuch':\n          case 'checkChatUsernameResultPublicGroupsUnavailable':\n          case 'checkChatUsernameResultUsernameInvalid':\n            {\n              hasError = true;\n              usernameLabel = 'Invalid username';\n              break;\n            }\n\n          case 'checkChatUsernameResultUsernameOccupied':\n            {\n              hasError = true;\n              usernameLabel = 'Username is already taken';\n              break;\n            }\n        }\n      } // console.log('[un] render', hasError, usernameLabel);\n\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"header-master\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        className: \"header-left-button\",\n        onClick: onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(ArrowBackIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"header-status grow cursor-pointer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"header-status-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, t('EditProfile')))), React.createElement(\"div\", {\n        className: \"sidebar-page-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chat-details-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Chat, {\n        chatId: chatId,\n        showTitle: false,\n        big: true,\n        showStatus: true,\n        showSavedMessages: false,\n        onTileSelect: null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"edit-profile-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        inputRef: this.firstNameRef,\n        className: \"edit-profile-input\",\n        variant: \"outlined\",\n        fullWidth: true,\n        label: t('FirstName'),\n        defaultValue: firstName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        inputRef: this.lastNameRef,\n        className: \"edit-profile-input\",\n        variant: \"outlined\",\n        fullWidth: true,\n        label: t('LastName'),\n        defaultValue: lastName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        inputRef: this.bioRef,\n        className: \"edit-profile-input\",\n        variant: \"outlined\",\n        fullWidth: true,\n        label: t('Bio'),\n        defaultValue: bio,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"edit-profile-hint\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, t('BioAbout'))), React.createElement(\"div\", {\n        className: \"sidebar-page-section-divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"edit-profile-username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        inputRef: this.usernameRef,\n        error: hasError,\n        className: \"edit-profile-input\",\n        variant: \"outlined\",\n        fullWidth: true,\n        label: usernameLabel,\n        defaultValue: username,\n        onChange: this.handleUsernameChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"edit-profile-hint\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"You can choose a username on NebulaChat. If you do, other people will be able to find you by this username and contact you without knowing your phone number. You can use a-z, 0-9 and underscores. Minimum length is 5 characters.\"))));\n    }\n  }]);\n\n  return EditProfile;\n}(React.Component);\n\nEditProfile.propTypes = {\n  chatId: PropTypes.number\n};\nvar enhance = compose(withSaveRef(), withTranslation(), withRestoreRef());\nexport default enhance(EditProfile);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnLeft/Settings/EditProfile.js"],"names":["React","PropTypes","withTranslation","compose","withRestoreRef","withSaveRef","TextField","IconButton","ArrowBackIcon","Chat","SidebarPage","UserStore","TdLibController","EditProfile","props","handleUsernameChange","chatId","username","state","newUsername","usernameRef","current","value","startsWith","length","substr","setState","usernameCheck","send","chat_id","result","newUsername2","firstNameRef","createRef","lastNameRef","bioRef","user","get","getMyId","userFullInfo","getFullInfo","firstName","first_name","lastName","last_name","bio","setName","setBio","setUsername","newFirstName","newLastName","newBio","t","onClose","hasError","usernameLabel","Component","propTypes","number","enhance"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Chat from '../../Tile/Chat';\nimport SidebarPage from '../SidebarPage';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        // console.log('[un] render', hasError, usernameLabel);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            showTitle={false}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={null}\n                        />\n                    </div>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            You can choose a username on NebulaChat. If you do, other people will be able to find you by\n                            this username and contact you without knowing your phone number. You can use a-z, 0-9 and\n                            underscores. Minimum length is 5 characters.\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n"]},"metadata":{},"sourceType":"module"}