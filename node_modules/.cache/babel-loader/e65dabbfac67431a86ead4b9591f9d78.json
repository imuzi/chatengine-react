{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Message/Meta.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nvar Meta =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Meta, _React$Component);\n\n  function Meta() {\n    _classCallCheck(this, Meta);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Meta).apply(this, arguments));\n  }\n\n  _createClass(Meta, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          chatId = _this$props.chatId,\n          messageId = _this$props.messageId,\n          date = _this$props.date,\n          editDate = _this$props.editDate,\n          onDateClick = _this$props.onDateClick,\n          t = _this$props.t,\n          views = _this$props.views,\n          style = _this$props.style;\n      var message = MessageStore.get(chatId, messageId);\n      if (!message) return null;\n      var is_outgoing = message.is_outgoing;\n      var dateStr = getDate(date);\n      var dateHintStr = getDateHint(date);\n      return React.createElement(\"div\", {\n        className: classNames('meta', className),\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"\\u2002\"), views > 0 && React.createElement(React.Fragment, null, React.createElement(VisibilityIcon, {\n        className: \"meta-views-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"meta-views\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"\\xA0\", views, \"\\xA0 \\xA0\")), editDate > 0 && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, t('EditedMessage'), \"\\xA0\"), React.createElement(\"a\", {\n        onClick: onDateClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        title: dateHintStr,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, dateStr)), is_outgoing && React.createElement(Status, {\n        chatId: chatId,\n        messageId: messageId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Meta;\n}(React.Component);\n\nMeta.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  messageId: PropTypes.number.isRequired,\n  views: PropTypes.number,\n  date: PropTypes.number.isRequired,\n  editDate: PropTypes.number,\n  onDateClick: PropTypes.func\n};\nexport default withTranslation()(Meta);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Message/Meta.js"],"names":["React","PropTypes","classNames","withTranslation","VisibilityIcon","Status","getDate","getDateHint","MessageStore","Meta","props","className","chatId","messageId","date","editDate","onDateClick","t","views","style","message","get","is_outgoing","dateStr","dateHintStr","Component","propTypes","number","isRequired","func"],"mappings":";;;;;;;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,qBAArC;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAO,YAAP;;IAEMC,I;;;;;;;;;;;;;6BACO;AAAA,wBACkF,KAAKC,KADvF;AAAA,UACGC,SADH,eACGA,SADH;AAAA,UACcC,MADd,eACcA,MADd;AAAA,UACsBC,SADtB,eACsBA,SADtB;AAAA,UACiCC,IADjC,eACiCA,IADjC;AAAA,UACuCC,QADvC,eACuCA,QADvC;AAAA,UACiDC,WADjD,eACiDA,WADjD;AAAA,UAC8DC,CAD9D,eAC8DA,CAD9D;AAAA,UACiEC,KADjE,eACiEA,KADjE;AAAA,UACwEC,KADxE,eACwEA,KADxE;AAGL,UAAMC,OAAO,GAAGZ,YAAY,CAACa,GAAb,CAAiBT,MAAjB,EAAyBC,SAAzB,CAAhB;AACA,UAAI,CAACO,OAAL,EAAc,OAAO,IAAP;AAJT,UAMGE,WANH,GAMmBF,OANnB,CAMGE,WANH;AAQL,UAAMC,OAAO,GAAGjB,OAAO,CAACQ,IAAD,CAAvB;AACA,UAAMU,WAAW,GAAGjB,WAAW,CAACO,IAAD,CAA/B;AAEA,aACI;AAAK,QAAA,SAAS,EAAEZ,UAAU,CAAC,MAAD,EAASS,SAAT,CAA1B;AAA+C,QAAA,KAAK,EAAEQ,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKD,KAAK,GAAG,CAAR,IACG,0CACI,oBAAC,cAAD;AAAgB,QAAA,SAAS,EAAC,iBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEKA,KAFL,cAFJ,CAHR,EAYKH,QAAQ,GAAG,CAAX,IAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOE,CAAC,CAAC,eAAD,CAAR,SAZrB,EAaI;AAAG,QAAA,OAAO,EAAED,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,KAAK,EAAEQ,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BD,OAA3B,CADJ,CAbJ,EAgBKD,WAAW,IAAI,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAEV,MAAhB;AAAwB,QAAA,SAAS,EAAEC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBpB,CADJ;AAoBH;;;;EAhCcb,KAAK,CAACyB,S;;AAmCzBhB,IAAI,CAACiB,SAAL,GAAiB;AACbd,EAAAA,MAAM,EAAEX,SAAS,CAAC0B,MAAV,CAAiBC,UADZ;AAEbf,EAAAA,SAAS,EAAEZ,SAAS,CAAC0B,MAAV,CAAiBC,UAFf;AAGbV,EAAAA,KAAK,EAAEjB,SAAS,CAAC0B,MAHJ;AAIbb,EAAAA,IAAI,EAAEb,SAAS,CAAC0B,MAAV,CAAiBC,UAJV;AAKbb,EAAAA,QAAQ,EAAEd,SAAS,CAAC0B,MALP;AAMbX,EAAAA,WAAW,EAAEf,SAAS,CAAC4B;AANV,CAAjB;AASA,eAAe1B,eAAe,GAAGM,IAAH,CAA9B","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n    render() {\n        const { className, chatId, messageId, date, editDate, onDateClick, t, views, style } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { is_outgoing } = message;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {is_outgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n"]},"metadata":{},"sourceType":"module"}