{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnLeft/Dialogs.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\nimport SidebarDialog from '../Popup/SidebarDialog';\nvar defaultTimeout = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n\nvar Dialogs =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dialogs, _Component);\n\n  function Dialogs(props) {\n    var _this;\n\n    _classCallCheck(this, Dialogs);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dialogs).call(this, props));\n\n    _this.onClientUpdatePageWidth = function (update) {\n      var isSmallWidth = update.isSmallWidth;\n      if (!isSmallWidth) return;\n      var _this$state = _this.state,\n          openSettings = _this$state.openSettings,\n          openContacts = _this$state.openContacts,\n          openSearch = _this$state.openSearch;\n\n      if (openSettings || openContacts || openSearch) {\n        _this.setState({\n          openContacts: false,\n          openSettings: false,\n          openSearch: false,\n          timeout: 0\n        }, function () {\n          _this.setState({\n            timeout: defaultTimeout\n          });\n        });\n      }\n    };\n\n    _this.onUpdateChatOrder = function (update) {\n      var chat_id = update.chat_id;\n      var mainCurrent = _this.dialogListRef.current;\n\n      if (mainCurrent && mainCurrent.loading) {\n        return;\n      }\n\n      var archiveCurrent = _this.archiveListRef.current;\n\n      if (archiveCurrent && archiveCurrent.loading) {\n        return;\n      }\n\n      var archive = ChatStore.chatList.get('chatListArchive');\n\n      if (archive && archive.has(chat_id)) {\n        _this.setState({\n          archiveTitle: getArchiveTitle()\n        });\n      }\n    };\n\n    _this.onUpdateChatChatList = function (update) {\n      var prevShowArchive = _this.state.showArchive;\n      var mainCurrent = _this.dialogListRef.current;\n\n      if (mainCurrent && mainCurrent.loading) {\n        return;\n      }\n\n      var archiveCurrent = _this.archiveListRef.current;\n\n      if (archiveCurrent && archiveCurrent.loading) {\n        return;\n      }\n\n      var archiveList = ChatStore.chatList.get('chatListArchive');\n      var showArchive = archiveList && archiveList.size > 0;\n\n      _this.setState({\n        showArchive: showArchive,\n        archiveTitle: getArchiveTitle()\n      }, function () {\n        if (!prevShowArchive && showArchive) {\n          var current = _this.dialogListRef.current;\n\n          if (current.listRef) {\n            var listCurrent = current.listRef.current;\n\n            if (listCurrent && listCurrent.scrollTop > 0) {\n              current.scrollTop += 68;\n            }\n          }\n        }\n      });\n\n      if (prevShowArchive && !showArchive) {\n        TdLibController.clientUpdate({\n          '@type': 'clientUpdateCloseArchive'\n        });\n      }\n    };\n\n    _this.onClientUpdateContacts =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(update) {\n        var isSmallWidth, open;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                isSmallWidth = AppStore.isSmallWidth;\n\n                if (!isSmallWidth) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                open = update.open;\n\n                _this.setState({\n                  openContacts: open\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onClientUpdateSettings = function (update) {\n      var isSmallWidth = AppStore.isSmallWidth;\n      if (isSmallWidth) return;\n      var open = update.open,\n          chatId = update.chatId;\n\n      _this.setState({\n        openSettings: open,\n        meChatId: chatId\n      });\n    };\n\n    _this.onClientUpdateArchive = function (update) {\n      var open = update.open;\n\n      _this.setState({\n        openArchive: open\n      });\n    };\n\n    _this.onClientUpdateThemeChange = function (update) {\n      _this.forceUpdate();\n    };\n\n    _this.onClientUpdateSearchChat = function (update) {\n      var isSmallWidth = AppStore.isSmallWidth;\n      if (isSmallWidth) return;\n      var chatId = update.chatId,\n          query = update.query;\n      var _this$state2 = _this.state,\n          openSearch = _this$state2.openSearch,\n          searchChatId = _this$state2.searchChatId,\n          searchText = _this$state2.searchText;\n\n      if (openSearch && chatId === searchChatId && query === searchText) {\n        return;\n      }\n\n      var header = _this.dialogsHeaderRef.current;\n\n      _this.setState({\n        openSearch: true,\n        searchChatId: chatId,\n        searchText: null,\n        openSettings: false,\n        openActiveSessions: false,\n        openContacts: false\n      }, function () {\n        if (header) {\n          header.setInitQuery(query);\n        }\n      });\n    };\n\n    _this.handleHeaderClick = function () {\n      var openArchive = _this.state.openArchive;\n\n      if (openArchive) {\n        TdLibController.clientUpdate({\n          '@type': 'clientUpdateCloseArchive'\n        });\n      } else {\n        _this.dialogListRef.current.scrollToTop();\n      }\n    };\n\n    _this.handleSearch = function (visible) {\n      _this.setState({\n        openSearch: visible,\n        searchChatId: 0,\n        searchText: null\n      });\n    };\n\n    _this.handleSelectMessage = function (chatId, messageId, openSearch) {\n      openChat(chatId, messageId);\n      var searchChatId = openSearch ? _this.state.searchChatId : 0;\n      var searchText = openSearch ? _this.state.searchText : null;\n\n      _this.setState({\n        openSearch: openSearch,\n        searchChatId: searchChatId,\n        searchText: searchText\n      });\n    };\n\n    _this.handleCloseSearch = function () {\n      _this.setState({\n        openSearch: false,\n        searchChatId: 0,\n        searchText: null\n      });\n    };\n\n    _this.handleSearchTextChange = function (text) {\n      _this.setState({\n        searchText: text,\n        query: null\n      });\n    };\n\n    _this.handleSaveCache = function () {\n      _this.saveCache();\n    };\n\n    _this.handleCloseArchive = function () {\n      _this.setState({\n        openArchive: false\n      });\n    };\n\n    _this.handleCloseContacts = function () {\n      _this.setState({\n        openContacts: false\n      });\n    };\n\n    _this.handleCloseSettings = function () {\n      _this.setState({\n        openSettings: false\n      });\n    };\n\n    _this.dialogListRef = React.createRef();\n    _this.archiveListRef = React.createRef();\n    _this.dialogsHeaderRef = React.createRef();\n    _this.state = {\n      cache: null,\n      showArchive: false,\n      archiveTitle: null,\n      mainItems: [],\n      archiveItems: [],\n      timeout: defaultTimeout,\n      openSearch: false,\n      openArchive: false,\n      openContacts: false,\n      openSettings: false,\n      searchChatId: 0,\n      searchText: null,\n      query: null\n    };\n    return _this;\n  }\n\n  _createClass(Dialogs, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      var _this$state3 = this.state,\n          cache = _this$state3.cache,\n          showArchive = _this$state3.showArchive,\n          archiveTitle = _this$state3.archiveTitle,\n          mainItems = _this$state3.mainItems,\n          archiveItems = _this$state3.archiveItems,\n          openSearch = _this$state3.openSearch,\n          openArchive = _this$state3.openArchive,\n          openSettings = _this$state3.openSettings,\n          openContacts = _this$state3.openContacts,\n          searchChatId = _this$state3.searchChatId,\n          searchText = _this$state3.searchText;\n\n      if (nextState.cache !== cache) {\n        return true;\n      }\n\n      if (nextState.showArchive !== showArchive) {\n        return true;\n      }\n\n      if (nextState.archiveTitle !== archiveTitle) {\n        return true;\n      }\n\n      if (nextState.archiveItems !== archiveItems) {\n        return true;\n      }\n\n      if (nextState.mainItems !== mainItems) {\n        return true;\n      }\n\n      if (nextState.openSearch !== openSearch) {\n        return true;\n      }\n\n      if (nextState.openArchive !== openArchive) {\n        return true;\n      }\n\n      if (nextState.openSettings !== openSettings) {\n        return true;\n      }\n\n      if (nextState.openContacts !== openContacts) {\n        return true;\n      }\n\n      if (nextState.searchChatId !== searchChatId) {\n        return true;\n      }\n\n      if (nextState.searchText !== searchText) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadCache();\n      AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n      AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n      ChatStore.on('updateChatChatList', this.onUpdateChatChatList);\n      ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n      ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n      ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n      ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n      ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n      AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n      ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n      ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n      ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n      AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n      ChatStore.off('updateChatChatList', this.onUpdateChatChatList);\n      ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n      ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n      ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n      ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n      ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n      AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n      ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n      ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n      ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n    }\n  }, {\n    key: \"loadCache\",\n    value: function () {\n      var _loadCache = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var cache, chats, archiveChats;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return CacheStore.loadCache();\n\n              case 2:\n                _context2.t0 = _context2.sent;\n\n                if (_context2.t0) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                _context2.t0 = {};\n\n              case 5:\n                cache = _context2.t0;\n                chats = cache.chats, archiveChats = cache.archiveChats;\n                this.setState({\n                  cache: cache,\n                  showArchive: archiveChats && archiveChats.length > 0,\n                  archiveTitle: getArchiveTitle()\n                });\n                this.loadChatContents((chats || []).map(function (x) {\n                  return x.id;\n                }));\n                TdLibController.clientUpdate({\n                  '@type': 'clientUpdateCacheLoaded'\n                });\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadCache() {\n        return _loadCache.apply(this, arguments);\n      }\n\n      return loadCache;\n    }()\n  }, {\n    key: \"saveCache\",\n    value: function saveCache() {\n      var archiveCurrent = this.archiveListRef.current;\n      var archiveChatIds = archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\n      var mainCurrent = this.dialogListRef.current;\n      var mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\n      CacheStore.saveChats(mainChatIds, archiveChatIds);\n    }\n  }, {\n    key: \"loadChatContents\",\n    value: function loadChatContents(chatIds) {\n      var store = FileStore.getStore();\n      loadChatsContent(store, chatIds);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state4 = this.state,\n          cache = _this$state4.cache,\n          showArchive = _this$state4.showArchive,\n          archiveTitle = _this$state4.archiveTitle,\n          mainItems = _this$state4.mainItems,\n          archiveItems = _this$state4.archiveItems,\n          meChatId = _this$state4.meChatId,\n          openSettings = _this$state4.openSettings,\n          openContacts = _this$state4.openContacts,\n          openArchive = _this$state4.openArchive,\n          openSearch = _this$state4.openSearch,\n          timeout = _this$state4.timeout,\n          searchChatId = _this$state4.searchChatId,\n          searchText = _this$state4.searchText;\n      var mainCacheItems = cache ? cache.chats || [] : null;\n      var archiveCacheItems = cache ? cache.archiveChats || [] : null;\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"dialogs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sidebar-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, React.createElement(DialogsHeader, {\n        ref: this.dialogsHeaderRef,\n        openSearch: openSearch,\n        timeout: timeout !== 0,\n        onClick: this.handleHeaderClick,\n        onSearch: this.handleSearch,\n        onSearchTextChange: this.handleSearchTextChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"dialogs-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, React.createElement(DialogsList, {\n        type: \"chatListMain\",\n        ref: this.dialogListRef,\n        cacheItems: mainCacheItems,\n        items: mainItems,\n        showArchive: showArchive,\n        archiveTitle: archiveTitle,\n        open: true,\n        onSaveCache: this.handleSaveCache,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }), React.createElement(CSSTransition, {\n        classNames: \"search\",\n        timeout: timeout,\n        in: openSearch,\n        mountOnEnter: true,\n        unmountOnExit: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }, React.createElement(Search, {\n        chatId: searchChatId,\n        text: searchText,\n        onSelectMessage: this.handleSelectMessage,\n        onClose: this.handleCloseSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }))), React.createElement(UpdatePanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      })), React.createElement(SidebarPage, {\n        open: openArchive,\n        timeout: timeout,\n        onClose: this.handleCloseArchive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, React.createElement(Archive, {\n        innerListRef: this.archiveListRef,\n        items: archiveItems,\n        cacheItems: archiveCacheItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      })), React.createElement(SidebarPage, {\n        open: openContacts,\n        timeout: timeout,\n        onClose: this.handleCloseContacts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, React.createElement(Contacts, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      })), React.createElement(SidebarPage, {\n        open: openSettings,\n        timeout: timeout,\n        onClose: this.handleCloseSettings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }, React.createElement(Settings, {\n        chatId: meChatId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      })), React.createElement(SidebarDialog, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Dialogs;\n}(Component);\n\nexport default Dialogs;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnLeft/Dialogs.js"],"names":["React","Component","classNames","CSSTransition","Archive","Search","DialogsHeader","DialogsList","SidebarPage","Settings","Contacts","UpdatePanel","openChat","getArchiveTitle","loadChatsContent","duration","AppStore","CacheStore","ChatStore","FileStore","TdLibController","SidebarDialog","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","props","onClientUpdatePageWidth","update","isSmallWidth","state","openSettings","openContacts","openSearch","setState","timeout","onUpdateChatOrder","chat_id","mainCurrent","dialogListRef","current","loading","archiveCurrent","archiveListRef","archive","chatList","get","has","archiveTitle","onUpdateChatChatList","prevShowArchive","showArchive","archiveList","size","listRef","listCurrent","scrollTop","clientUpdate","onClientUpdateContacts","open","onClientUpdateSettings","chatId","meChatId","onClientUpdateArchive","openArchive","onClientUpdateThemeChange","forceUpdate","onClientUpdateSearchChat","query","searchChatId","searchText","header","dialogsHeaderRef","openActiveSessions","setInitQuery","handleHeaderClick","scrollToTop","handleSearch","visible","handleSelectMessage","messageId","handleCloseSearch","handleSearchTextChange","text","handleSaveCache","saveCache","handleCloseArchive","handleCloseContacts","handleCloseSettings","createRef","cache","mainItems","archiveItems","nextProps","nextState","loadCache","on","off","chats","archiveChats","length","loadChatContents","map","x","id","archiveChatIds","slice","mainChatIds","saveChats","chatIds","store","getStore","mainCacheItems","archiveCacheItems"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\nimport SidebarDialog from '../Popup/SidebarDialog';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n\n        ChatStore.on('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n\n        ChatStore.off('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch } = this.state;\n        if (openSettings || openContacts || openSearch) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.loadCache()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    saveCache() {\n        const { current: archiveCurrent } = this.archiveListRef;\n        const archiveChatIds =\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\n\n        const { current: mainCurrent } = this.dialogListRef;\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\n\n        CacheStore.saveChats(mainChatIds, archiveChatIds);\n    }\n\n    onUpdateChatOrder = update => {\n        const { chat_id } = update;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archive = ChatStore.chatList.get('chatListArchive');\n        if (archive && archive.has(chat_id)) {\n            this.setState({ archiveTitle: getArchiveTitle() });\n        }\n    };\n\n    onUpdateChatChatList = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openSettings: false,\n                openActiveSessions: false,\n                openContacts: false\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <DialogsList\n                                type='chatListMain'\n                                ref={this.dialogListRef}\n                                cacheItems={mainCacheItems}\n                                items={mainItems}\n                                showArchive={showArchive}\n                                archiveTitle={archiveTitle}\n                                open={true}\n                                onSaveCache={this.handleSaveCache}\n                            />\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n"]},"metadata":{},"sourceType":"module"}