{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Tile/DialogTitle.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nvar DialogTitle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DialogTitle, _React$Component);\n\n  function DialogTitle() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DialogTitle);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DialogTitle)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onFastUpdatingComplete = function (update) {\n      _this.forceUpdate();\n    };\n\n    _this.onUpdateChatTitle = function (update) {\n      var chatId = _this.props.chatId;\n      if (update.chat_id !== chatId) return;\n\n      _this.forceUpdate();\n    };\n\n    return _this;\n  }\n\n  _createClass(DialogTitle, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      var _this$props = this.props,\n          chatId = _this$props.chatId,\n          t = _this$props.t;\n\n      if (nextProps.chatId !== chatId) {\n        return true;\n      }\n\n      if (nextProps.t !== t) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n      ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n      ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          t = _this$props2.t,\n          chatId = _this$props2.chatId,\n          showSavedMessages = _this$props2.showSavedMessages;\n      var isVerified = isChatVerified(chatId);\n      var title = getChatTitle(chatId, showSavedMessages, t);\n      return React.createElement(\"div\", {\n        className: \"dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"dialog-title-span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, title), isVerified && React.createElement(CheckDecagramIcon, {\n        className: \"dialog-title-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return DialogTitle;\n}(React.Component);\n\nDialogTitle.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  showSavedMessages: PropTypes.bool\n};\nDialogTitle.defaultProps = {\n  showSavedMessages: true\n};\nexport default withTranslation()(DialogTitle);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Tile/DialogTitle.js"],"names":["React","PropTypes","withTranslation","CheckDecagramIcon","getChatTitle","isChatVerified","ChatStore","DialogTitle","onFastUpdatingComplete","update","forceUpdate","onUpdateChatTitle","chatId","props","chat_id","nextProps","nextState","t","on","off","showSavedMessages","isVerified","title","Component","propTypes","number","isRequired","bool","defaultProps"],"mappings":";;;;;;;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,kBAA7C;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,mBAAP;;IAEMC,W;;;;;;;;;;;;;;;;;;UAyBFC,sB,GAAyB,UAAAC,MAAM,EAAI;AAC/B,YAAKC,WAAL;AACH,K;;UAEDC,iB,GAAoB,UAAAF,MAAM,EAAI;AAAA,UAClBG,MADkB,GACP,MAAKC,KADE,CAClBD,MADkB;AAG1B,UAAIH,MAAM,CAACK,OAAP,KAAmBF,MAAvB,EAA+B;;AAE/B,YAAKF,WAAL;AACH,K;;;;;;;0CAlCqBK,S,EAAWC,S,EAAW;AAAA,wBAClB,KAAKH,KADa;AAAA,UAChCD,MADgC,eAChCA,MADgC;AAAA,UACxBK,CADwB,eACxBA,CADwB;;AAGxC,UAAIF,SAAS,CAACH,MAAV,KAAqBA,MAAzB,EAAiC;AAC7B,eAAO,IAAP;AACH;;AAED,UAAIG,SAAS,CAACE,CAAV,KAAgBA,CAApB,EAAuB;AACnB,eAAO,IAAP;AACH;;AAED,aAAO,KAAP;AACH;;;wCAEmB;AAChBX,MAAAA,SAAS,CAACY,EAAV,CAAa,kCAAb,EAAiD,KAAKV,sBAAtD;AACAF,MAAAA,SAAS,CAACY,EAAV,CAAa,iBAAb,EAAgC,KAAKP,iBAArC;AACH;;;2CAEsB;AACnBL,MAAAA,SAAS,CAACa,GAAV,CAAc,kCAAd,EAAkD,KAAKX,sBAAvD;AACAF,MAAAA,SAAS,CAACa,GAAV,CAAc,iBAAd,EAAiC,KAAKR,iBAAtC;AACH;;;6BAcQ;AAAA,yBACoC,KAAKE,KADzC;AAAA,UACGI,CADH,gBACGA,CADH;AAAA,UACML,MADN,gBACMA,MADN;AAAA,UACcQ,iBADd,gBACcA,iBADd;AAGL,UAAMC,UAAU,GAAGhB,cAAc,CAACO,MAAD,CAAjC;AACA,UAAMU,KAAK,GAAGlB,YAAY,CAACQ,MAAD,EAASQ,iBAAT,EAA4BH,CAA5B,CAA1B;AAEA,aACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCK,KAArC,CADJ,EAEKD,UAAU,IAAI,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,mBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFnB,CADJ;AAMH;;;;EAjDqBrB,KAAK,CAACuB,S;;AAoDhChB,WAAW,CAACiB,SAAZ,GAAwB;AACpBZ,EAAAA,MAAM,EAAEX,SAAS,CAACwB,MAAV,CAAiBC,UADL;AAEpBN,EAAAA,iBAAiB,EAAEnB,SAAS,CAAC0B;AAFT,CAAxB;AAKApB,WAAW,CAACqB,YAAZ,GAA2B;AACvBR,EAAAA,iBAAiB,EAAE;AADI,CAA3B;AAIA,eAAelB,eAAe,GAAGK,WAAH,CAA9B","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n"]},"metadata":{},"sourceType":"module"}