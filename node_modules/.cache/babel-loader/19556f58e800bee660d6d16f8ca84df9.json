{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Popup/EditUrlDialog.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from './../../Utils/Url';\nimport './EditUrlDialog.css';\n\nvar EditUrlDialog =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditUrlDialog, _React$Component);\n\n  function EditUrlDialog(props) {\n    var _this;\n\n    _classCallCheck(this, EditUrlDialog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditUrlDialog).call(this, props));\n\n    _this.handleTextKeyDown = function (event) {\n      if (event.key === 'Enter') {\n        _this.urlInputRef.current.focus();\n\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    };\n\n    _this.handleUrlKeyDown = function (event) {\n      if (event.key === 'Enter') {\n        _this.handleDone();\n\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    };\n\n    _this.handleTextChange = function (event) {\n      _this.setState({\n        text: event.target.value\n      });\n    };\n\n    _this.handleUrlChange = function (event) {\n      _this.setState({\n        url: event.target.value\n      });\n    };\n\n    _this.handleDone = function () {\n      var _this$props = _this.props,\n          defaultText = _this$props.defaultText,\n          defaultUrl = _this$props.defaultUrl;\n      var _this$state = _this.state,\n          text = _this$state.text,\n          url = _this$state.url;\n      text = text !== null ? text : defaultText;\n      url = url !== null ? url : defaultUrl;\n\n      if (!text && !url) {\n        _this.textInputRef.current.focus();\n\n        return;\n      }\n\n      if (!text) {\n        _this.setState({\n          textError: true\n        });\n\n        _this.textInputRef.current.focus();\n\n        return;\n      }\n\n      url = validateUrl(url);\n\n      if (!url) {\n        _this.setState({\n          urlError: true\n        });\n\n        _this.urlInputRef.current.focus();\n\n        return;\n      }\n\n      var onDone = _this.props.onDone;\n      onDone(text, url);\n    };\n\n    _this.handleCancel = function () {\n      var onCancel = _this.props.onCancel;\n      onCancel();\n    };\n\n    _this.textRef = React.createRef();\n    _this.textInputRef = React.createRef();\n    _this.urlRef = React.createRef();\n    _this.urlInputRef = React.createRef();\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(EditUrlDialog, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          defaultText = _this$props2.defaultText,\n          defaultUrl = _this$props2.defaultUrl,\n          open = _this$props2.open;\n\n      if (open && prevProps.open !== open) {\n        setTimeout(function () {\n          var text = _this2.textInputRef.current;\n          var url = _this2.urlInputRef.current;\n          if (!text) return;\n          if (!url) return;\n\n          if (!defaultText) {\n            text.focus();\n          } else if (!defaultUrl) {\n            url.focus();\n          } else {\n            text.focus();\n            text.select();\n          }\n        }, 0);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// const { defaultText, defaultUrl } = this.props;\n      //\n      // const text = this.textInputRef.current;\n      // const url = this.urlInputRef.current;\n      //\n      // if (!text) return;\n      // if (!url) return;\n      //\n      // setTimeout(() => {\n      //     if (!defaultText) {\n      //         text.focus();\n      //     } else if (!defaultUrl) {\n      //         url.focus();\n      //     } else {\n      //         text.focus();\n      //         // text.select();\n      //     }\n      // }, 0);\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState, nextContext) {\n      var _this$props3 = this.props,\n          defaultText = _this$props3.defaultText,\n          defaultUrl = _this$props3.defaultUrl,\n          onDone = _this$props3.onDone,\n          onCancel = _this$props3.onCancel,\n          open = _this$props3.open;\n      var _this$state2 = this.state,\n          textError = _this$state2.textError,\n          urlError = _this$state2.urlError;\n\n      if (nextProps.defaultText !== defaultText) {\n        return true;\n      }\n\n      if (nextProps.defaultUrl !== defaultUrl) {\n        return true;\n      }\n\n      if (nextState.textError !== textError) {\n        return true;\n      }\n\n      if (nextState.urlError !== urlError) {\n        return true;\n      }\n\n      if (nextProps.onDone !== onDone) {\n        return true;\n      }\n\n      if (nextProps.onCancel !== onCancel) {\n        return true;\n      }\n\n      if (nextProps.open !== open) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          open = _this$props4.open,\n          defaultUrl = _this$props4.defaultUrl,\n          defaultText = _this$props4.defaultText,\n          t = _this$props4.t;\n      var _this$state3 = this.state,\n          textError = _this$state3.textError,\n          urlError = _this$state3.urlError;\n      if (!open) return null;\n      return React.createElement(Dialog, {\n        transitionDuration: 0,\n        open: true,\n        onClose: this.handleCancel,\n        \"aria-labelledby\": \"edit-url-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"edit-url-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, t('CreateLink')), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          width: 260\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        ref: this.textRef,\n        inputRef: this.textInputRef,\n        label: t('Text'),\n        margin: \"normal\",\n        autoComplete: \"off\",\n        defaultValue: defaultText,\n        error: textError,\n        onChange: this.handleTextChange,\n        onKeyDown: this.handleTextKeyDown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        ref: this.urlRef,\n        inputRef: this.urlInputRef,\n        label: t('URL'),\n        margin: \"normal\",\n        autoComplete: \"off\",\n        defaultValue: defaultUrl,\n        error: urlError,\n        onChange: this.handleUrlChange,\n        onKeyDown: this.handleUrlKeyDown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleCancel,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, t('Cancel')), React.createElement(Button, {\n        onClick: this.handleDone,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, t('Create'))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if (state.prevOpen !== props.open) {\n        return {\n          prevOpen: true,\n          textError: false,\n          urlError: false,\n          text: null,\n          url: null\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return EditUrlDialog;\n}(React.Component);\n\nEditUrlDialog.propTypes = {\n  open: PropTypes.bool,\n  defaultText: PropTypes.string,\n  defaultUrl: PropTypes.string,\n  onDone: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};\nexport default withTranslation()(EditUrlDialog);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Popup/EditUrlDialog.js"],"names":["React","PropTypes","withTranslation","Button","Dialog","DialogActions","DialogContent","DialogTitle","TextField","validateUrl","EditUrlDialog","props","handleTextKeyDown","event","key","urlInputRef","current","focus","preventDefault","stopPropagation","handleUrlKeyDown","handleDone","handleTextChange","setState","text","target","value","handleUrlChange","url","defaultText","defaultUrl","state","textInputRef","textError","urlError","onDone","handleCancel","onCancel","textRef","createRef","urlRef","prevProps","prevState","snapshot","open","setTimeout","select","nextProps","nextState","nextContext","t","display","flexDirection","width","prevOpen","Component","propTypes","bool","string","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from './../../Utils/Url';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n"]},"metadata":{},"sourceType":"module"}