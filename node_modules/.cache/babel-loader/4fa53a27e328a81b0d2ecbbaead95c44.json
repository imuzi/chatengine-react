{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnLeft/Settings/Main.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nvar Main =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  function Main() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Main)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleOpenViewer = function () {\n      var chatId = _this.props.chatId;\n      var chat = ChatStore.get(chatId);\n      if (!chat) return;\n      if (!chat.photo) return;\n      setProfileMediaViewerContent({\n        chatId: chatId\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          chatId = _this$props.chatId,\n          popup = _this$props.popup,\n          t = _this$props.t,\n          onClose = _this$props.onClose,\n          onEditProfile = _this$props.onEditProfile,\n          onGeneral = _this$props.onGeneral,\n          onNotifications = _this$props.onNotifications,\n          onPrivacySecurity = _this$props.onPrivacySecurity,\n          onLanguage = _this$props.onLanguage;\n      var chat = ChatStore.get(chatId);\n      if (!chat) return null;\n      var photo = chat.photo;\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"header-master\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        className: \"header-left-button\",\n        onClick: onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, popup ? React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }) : React.createElement(ArrowBackIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"header-status grow cursor-pointer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"header-status-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, t('Settings'))), React.createElement(SettingsMenuButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"sidebar-page-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chat-details-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Chat, {\n        chatId: chatId,\n        big: true,\n        showStatus: true,\n        showSavedMessages: false,\n        onTileSelect: photo ? this.handleOpenViewer : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(ListItem, {\n        className: \"settings-list-item\",\n        button: true,\n        onClick: onEditProfile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(EditIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: t('EditProfile'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), React.createElement(ListItem, {\n        className: \"settings-list-item\",\n        button: true,\n        onClick: onGeneral,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(SettingsIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: t('GeneralSettings'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(ListItem, {\n        className: \"settings-list-item\",\n        button: true,\n        onClick: onNotifications,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(UnmuteIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: t('Notifications'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(ListItem, {\n        className: \"settings-list-item\",\n        button: true,\n        onClick: onPrivacySecurity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(DataIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: t('PrivacySettings'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(ListItem, {\n        autoFocus: false,\n        className: \"settings-list-item\",\n        button: true,\n        onClick: onLanguage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(LanguageIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: t('Language'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nMain.propTypes = {\n  chatId: PropTypes.number,\n  popup: PropTypes.bool,\n  onClose: PropTypes.func,\n  onEditProfile: PropTypes.func,\n  onGeneral: PropTypes.func,\n  onNotifications: PropTypes.func,\n  onPrivacySecurity: PropTypes.func,\n  onLanguage: PropTypes.func\n};\nexport default withTranslation()(Main);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnLeft/Settings/Main.js"],"names":["React","PropTypes","withTranslation","IconButton","ListItem","ListItemIcon","ArrowBackIcon","CloseIcon","Chat","EditIcon","ListItemText","SettingsIcon","SettingsMenuButton","UnmuteIcon","DataIcon","LanguageIcon","setProfileMediaViewerContent","ChatStore","Main","handleOpenViewer","chatId","props","chat","get","photo","popup","t","onClose","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","Component","propTypes","number","bool","func"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n"]},"metadata":{},"sourceType":"module"}