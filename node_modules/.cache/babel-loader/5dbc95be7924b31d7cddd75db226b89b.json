{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnMiddle/StickersHint.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nvar StickersHint =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StickersHint, _React$Component);\n\n  function StickersHint(props) {\n    var _this;\n\n    _classCallCheck(this, StickersHint);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StickersHint).call(this, props));\n\n    _this.onClientUpdateRemoteStickersHint = function (update) {\n      var hint = update.hint;\n      var currentHint = _this.state.hint;\n      if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n      _this.setState({\n        hint: StickerStore.hint,\n        items: _this.getItems(StickerStore.hint)\n      });\n\n      var store = FileStore.getStore();\n      var stickers = hint.stickers;\n      loadStickersContent(store, stickers.stickers);\n    };\n\n    _this.onClientUpdateLocalStickersHint = function (update) {\n      var hint = update.hint;\n\n      _this.setState({\n        hint: hint,\n        items: _this.getItems(hint),\n        previewStickerId: 0,\n        showPreview: false,\n        cancelSend: false\n      });\n\n      if (!hint) return;\n      var store = FileStore.getStore();\n      var stickers = hint.stickers;\n      loadStickersContent(store, stickers.stickers);\n    };\n\n    _this.handleSend = function (sticker) {\n      var cancelSend = _this.state.cancelSend;\n      if (cancelSend) return;\n      if (!sticker) return;\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateStickerSend',\n        sticker: sticker\n      });\n    };\n\n    _this.loadPreviewContent = function (stickerId) {\n      var items = _this.state.items;\n      var sticker = items.find(function (x) {\n        return x.sticker.id === stickerId;\n      });\n      if (!sticker) return;\n      var store = FileStore.getStore();\n      loadStickerContent(store, sticker, null);\n      var stickersPerRow = 8;\n\n      if (_this.hintsRef && _this.hintsRef.current) {\n        stickersPerRow = Math.floor(_this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n      }\n\n      var preloadStickers = _this.getNeighborStickers(stickerId, items, stickersPerRow);\n\n      preloadStickers.forEach(function (x) {\n        loadStickerContent(store, x, null);\n      });\n    };\n\n    _this.getNeighborStickers = function (stickerId, stickers, stickersPerRow) {\n      if (!stickers) return [];\n      var indexes = [];\n      var index = stickers.findIndex(function (x) {\n        return x.sticker.id === stickerId;\n      });\n      if (index === -1) return [];\n      var row = Math.floor(index / stickersPerRow);\n      var column = index % stickersPerRow;\n      var prevRow = row - 1;\n      var nextRow = row + 1;\n      var prevColumn = column - 1;\n      var nextColumn = column + 1;\n\n      if (prevRow >= 0) {\n        if (prevColumn >= 0) {\n          indexes.push(stickersPerRow * prevRow + prevColumn);\n        }\n\n        indexes.push(stickersPerRow * prevRow + column);\n\n        if (nextColumn < stickersPerRow) {\n          indexes.push(stickersPerRow * prevRow + nextColumn);\n        }\n      }\n\n      if (prevColumn >= 0) {\n        indexes.push(stickersPerRow * row + prevColumn);\n      }\n\n      if (nextColumn < stickersPerRow) {\n        indexes.push(stickersPerRow * row + nextColumn);\n      }\n\n      if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n        if (prevColumn >= 0) {\n          indexes.push(stickersPerRow * nextRow + prevColumn);\n        }\n\n        indexes.push(stickersPerRow * nextRow + column);\n\n        if (nextColumn < stickersPerRow) {\n          indexes.push(stickersPerRow * nextRow + nextColumn);\n        }\n      }\n\n      return indexes.map(function (i) {\n        return stickers[i];\n      });\n    };\n\n    _this.handleMouseEnter = function (event) {\n      var stickerId = Number(event.currentTarget.dataset.stickerId);\n\n      var sticker = _this.getSticker(stickerId);\n\n      if (!sticker) return;\n      if (!_this.mouseDown) return;\n\n      if (_this.mouseDownStickerId !== stickerId) {\n        _this.mouseDownStickerId = null;\n      }\n\n      _this.setState({\n        sticker: sticker\n      });\n\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateStickerPreview',\n        sticker: sticker\n      });\n\n      _this.loadPreviewContent(stickerId);\n    };\n\n    _this.handleMouseDown = function (event) {\n      var stickerId = Number(event.currentTarget.dataset.stickerId);\n\n      var sticker = _this.getSticker(stickerId);\n\n      if (!sticker) return;\n      _this.mouseDownStickerId = stickerId;\n      var now = Date.now();\n\n      _this.setState({\n        sticker: sticker,\n        timestamp: now,\n        showPreview: false,\n        cancelSend: false\n      });\n\n      setTimeout(function () {\n        var timestamp = _this.state.timestamp;\n\n        if (timestamp === now) {\n          _this.setState({\n            showPreview: true,\n            cancelSend: true\n          });\n\n          TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker: sticker\n          });\n        }\n      }, 500);\n\n      _this.loadPreviewContent(stickerId);\n\n      _this.mouseDown = true;\n      document.addEventListener('mouseup', _this.handleMouseUp);\n      event.preventDefault();\n      event.stopPropagation();\n      return false;\n    };\n\n    _this.handleMouseUp = function () {\n      var sticker = null;\n\n      _this.setState({\n        sticker: sticker,\n        timestamp: 0,\n        showPreview: false\n      });\n\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateStickerPreview',\n        sticker: sticker\n      });\n      _this.mouseDown = false;\n      document.removeEventListener('mouseup', _this.handleMouseUp);\n    };\n\n    _this.getItems = function (hint) {\n      var items = [];\n      if (!hint) return items;\n      var dict = new Map();\n      var stickers = hint.stickers,\n          foundStickers = hint.foundStickers;\n\n      if (stickers) {\n        stickers.stickers.forEach(function (x) {\n          items.push(x);\n          dict.set(x.sticker.id, x.sticker.id);\n        });\n      }\n\n      if (foundStickers) {\n        foundStickers.stickers.forEach(function (x) {\n          if (!dict.has(x.sticker.id)) {\n            items.push(x);\n            dict.set(x.sticker.id, x.sticker.id);\n          }\n        });\n      }\n\n      return items;\n    };\n\n    _this.hintsRef = React.createRef();\n    _this.state = {\n      hint: null,\n      items: [],\n      previewStickerId: 0,\n      showPreview: false,\n      cancelSend: false\n    };\n    return _this;\n  }\n\n  _createClass(StickersHint, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n      StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n      StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n  }, {\n    key: \"getSticker\",\n    value: function getSticker(stickerId) {\n      var items = this.state.items;\n      var stickerIndex = items.findIndex(function (x) {\n        return x.sticker.id === stickerId;\n      });\n      return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          hint = _this$state.hint,\n          items = _this$state.items,\n          sticker = _this$state.sticker,\n          showPreview = _this$state.showPreview;\n      if (!hint) return null;\n      if (!items) return null;\n      if (!items.length) return null;\n      var controls = items.map(function (x) {\n        return React.createElement(\"div\", {\n          className: \"sticker-set-dialog-item\",\n          key: x.sticker.id,\n          \"data-sticker-id\": x.sticker.id,\n          style: {\n            width: STICKER_HINT_DISPLAY_SIZE,\n            height: STICKER_HINT_DISPLAY_SIZE\n          },\n          onClick: function onClick() {\n            return _this2.handleSend(x);\n          },\n          onMouseEnter: _this2.handleMouseEnter,\n          onMouseDown: _this2.handleMouseDown,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        }, React.createElement(Sticker, {\n          key: x.sticker.id,\n          className: \"sticker-set-dialog-item-sticker\",\n          sticker: x,\n          autoplay: false,\n          blur: false,\n          displaySize: STICKER_SMALL_DISPLAY_SIZE,\n          preview: true,\n          source: StickerSourceEnum.HINTS,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        ref: this.hintsRef,\n        className: \"stickers-hint\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, controls, Boolean(sticker) && showPreview && React.createElement(StickerPreview, {\n        sticker: sticker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StickersHint;\n}(React.Component);\n\nexport default StickersHint;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnMiddle/StickersHint.js"],"names":["React","Sticker","StickerSourceEnum","StickerPreview","loadStickerContent","loadStickersContent","STICKER_HINT_DISPLAY_SIZE","STICKER_SMALL_DISPLAY_SIZE","FileStore","StickerStore","TdLibController","StickersHint","props","onClientUpdateRemoteStickersHint","update","hint","currentHint","state","timestamp","setState","items","getItems","store","getStore","stickers","onClientUpdateLocalStickersHint","previewStickerId","showPreview","cancelSend","handleSend","sticker","clientUpdate","loadPreviewContent","stickerId","find","x","id","stickersPerRow","hintsRef","current","Math","floor","clientWidth","preloadStickers","getNeighborStickers","forEach","indexes","index","findIndex","row","column","prevRow","nextRow","prevColumn","nextColumn","push","ceil","length","map","i","handleMouseEnter","event","Number","currentTarget","dataset","getSticker","mouseDown","mouseDownStickerId","handleMouseDown","now","Date","setTimeout","document","addEventListener","handleMouseUp","preventDefault","stopPropagation","removeEventListener","dict","Map","foundStickers","set","has","createRef","on","off","stickerIndex","controls","width","height","HINTS","Boolean","Component"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n"]},"metadata":{},"sourceType":"module"}