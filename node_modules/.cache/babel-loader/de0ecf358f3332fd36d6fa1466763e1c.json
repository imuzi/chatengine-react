{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnRight/GroupsInCommon.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nvar GroupsInCommon =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GroupsInCommon, _React$Component);\n\n  function GroupsInCommon(props) {\n    var _this;\n\n    _classCallCheck(this, GroupsInCommon);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GroupsInCommon).call(this, props));\n\n    _this.handleSelect = function (chatId) {\n      var popup = _this.props.popup;\n      openChat(chatId);\n\n      if (popup) {\n        TdLibController.clientUpdate({\n          '@type': 'clientUpdateDialogChatId',\n          chatId: 0\n        });\n      }\n    };\n\n    _this.state = {\n      chatIds: []\n    };\n    return _this;\n  }\n\n  _createClass(GroupsInCommon, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var chatId = this.props.chatId;\n      var userId = getChatUserId(chatId);\n      if (!userId) return;\n      TdLibController.send({\n        '@type': 'getGroupsInCommon',\n        user_id: userId,\n        offset_chat_id: 0,\n        limit: 100\n      }).then(function (result) {\n        var store = FileStore.getStore();\n        loadChatsContent(store, result.chat_ids);\n\n        _this2.setState({\n          chatIds: result.chat_ids\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          minHeight = _this$props.minHeight,\n          onClose = _this$props.onClose,\n          popup = _this$props.popup;\n      var chatIds = this.state.chatIds;\n      var chats = chatIds.map(function (x) {\n        return React.createElement(ListItem, {\n          button: true,\n          key: x,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(Chat, {\n          chatId: x,\n          onSelect: _this3.handleSelect,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }));\n      });\n      var content = React.createElement(React.Fragment, null, React.createElement(GroupsInCommonHeader, {\n        onClose: onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"groups-in-common-list\",\n        style: {\n          minHeight: minHeight\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, chats));\n      return popup ? React.createElement(React.Fragment, null, content) : React.createElement(\"div\", {\n        className: \"groups-in-common\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, content);\n    }\n  }]);\n\n  return GroupsInCommon;\n}(React.Component);\n\nGroupsInCommon.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  onClose: PropTypes.func.isRequired,\n  popup: PropTypes.bool,\n  minHeight: PropTypes.number\n};\nGroupsInCommon.defaultProps = {\n  popup: false,\n  minHeight: 0\n};\nexport default GroupsInCommon;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnRight/GroupsInCommon.js"],"names":["React","PropTypes","ListItem","Chat","GroupsInCommonHeader","getChatUserId","loadChatsContent","openChat","FileStore","TdLibController","GroupsInCommon","props","handleSelect","chatId","popup","clientUpdate","state","chatIds","userId","send","user_id","offset_chat_id","limit","then","result","store","getStore","chat_ids","setState","minHeight","onClose","chats","map","x","content","Component","propTypes","number","isRequired","func","bool","defaultProps"],"mappings":";;;;;;;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAO,sBAAP;;IAEMC,c;;;;;AACF,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,wFAAMA,KAAN;;AADe,UA2BnBC,YA3BmB,GA2BJ,UAAAC,MAAM,EAAI;AAAA,UACbC,KADa,GACH,MAAKH,KADF,CACbG,KADa;AAGrBP,MAAAA,QAAQ,CAACM,MAAD,CAAR;;AAEA,UAAIC,KAAJ,EAAW;AACPL,QAAAA,eAAe,CAACM,YAAhB,CAA6B;AACzB,mBAAS,0BADgB;AAEzBF,UAAAA,MAAM,EAAE;AAFiB,SAA7B;AAIH;AACJ,KAtCkB;;AAGf,UAAKG,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAHe;AAMlB;;;;wCAEmB;AAAA;;AAAA,UACRJ,MADQ,GACG,KAAKF,KADR,CACRE,MADQ;AAGhB,UAAMK,MAAM,GAAGb,aAAa,CAACQ,MAAD,CAA5B;AACA,UAAI,CAACK,MAAL,EAAa;AAEbT,MAAAA,eAAe,CAACU,IAAhB,CAAqB;AACjB,iBAAS,mBADQ;AAEjBC,QAAAA,OAAO,EAAEF,MAFQ;AAGjBG,QAAAA,cAAc,EAAE,CAHC;AAIjBC,QAAAA,KAAK,EAAE;AAJU,OAArB,EAKGC,IALH,CAKQ,UAAAC,MAAM,EAAI;AACd,YAAMC,KAAK,GAAGjB,SAAS,CAACkB,QAAV,EAAd;AACApB,QAAAA,gBAAgB,CAACmB,KAAD,EAAQD,MAAM,CAACG,QAAf,CAAhB;;AAEA,QAAA,MAAI,CAACC,QAAL,CAAc;AAAEX,UAAAA,OAAO,EAAEO,MAAM,CAACG;AAAlB,SAAd;AACH,OAVD;AAWH;;;6BAeQ;AAAA;;AAAA,wBACiC,KAAKhB,KADtC;AAAA,UACGkB,SADH,eACGA,SADH;AAAA,UACcC,OADd,eACcA,OADd;AAAA,UACuBhB,KADvB,eACuBA,KADvB;AAAA,UAEGG,OAFH,GAEe,KAAKD,KAFpB,CAEGC,OAFH;AAIL,UAAMc,KAAK,GAAGd,OAAO,CAACe,GAAR,CAAY,UAAAC,CAAC;AAAA,eACvB,oBAAC,QAAD;AAAU,UAAA,MAAM,MAAhB;AAAiB,UAAA,GAAG,EAAEA,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,MAAM,EAAEA,CAAd;AAAiB,UAAA,QAAQ,EAAE,MAAI,CAACrB,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADuB;AAAA,OAAb,CAAd;AAMA,UAAMsB,OAAO,GACT,0CACI,oBAAC,oBAAD;AAAsB,QAAA,OAAO,EAAEJ,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAuC,QAAA,KAAK,EAAE;AAAED,UAAAA,SAAS,EAATA;AAAF,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKE,KADL,CAFJ,CADJ;AASA,aAAOjB,KAAK,GAAG,0CAAGoB,OAAH,CAAH,GAAoB;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmCA,OAAnC,CAAhC;AACH;;;;EA7DwBlC,KAAK,CAACmC,S;;AAgEnCzB,cAAc,CAAC0B,SAAf,GAA2B;AACvBvB,EAAAA,MAAM,EAAEZ,SAAS,CAACoC,MAAV,CAAiBC,UADF;AAEvBR,EAAAA,OAAO,EAAE7B,SAAS,CAACsC,IAAV,CAAeD,UAFD;AAGvBxB,EAAAA,KAAK,EAAEb,SAAS,CAACuC,IAHM;AAIvBX,EAAAA,SAAS,EAAE5B,SAAS,CAACoC;AAJE,CAA3B;AAOA3B,cAAc,CAAC+B,YAAf,GAA8B;AAC1B3B,EAAAA,KAAK,EAAE,KADmB;AAE1Be,EAAAA,SAAS,EAAE;AAFe,CAA9B;AAKA,eAAenB,cAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n"]},"metadata":{},"sourceType":"module"}