{"ast":null,"code":"import _slicedToArray from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Viewer/InstantViewMediaViewer.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidMediaBlocks } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport './InstantViewMediaViewer.css';\n\nvar InstantViewMediaViewer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InstantViewMediaViewer, _React$Component);\n\n  function InstantViewMediaViewer(props) {\n    var _this;\n\n    _classCallCheck(this, InstantViewMediaViewer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InstantViewMediaViewer).call(this, props));\n\n    _this.onKeyDown = function (event) {\n      if (event.keyCode === 27) {\n        _this.handleClose();\n      } else if (event.keyCode === 39) {\n        _this.handlePrevious();\n      } else if (event.keyCode === 37) {\n        _this.handleNext();\n      }\n    };\n\n    _this.handlePrevious = function (event) {\n      if (event) {\n        event.stopPropagation();\n      }\n\n      var _this$state = _this.state,\n          index = _this$state.index,\n          blocks = _this$state.blocks;\n      var nextIndex = index + 1;\n      if (!_this.hasPreviousMedia(index, blocks)) return;\n      return _this.loadMedia(nextIndex);\n    };\n\n    _this.handleNext = function (event) {\n      if (event) {\n        event.stopPropagation();\n      }\n\n      var _this$state2 = _this.state,\n          index = _this$state2.index,\n          blocks = _this$state2.blocks;\n      var nextIndex = index - 1;\n      if (!_this.hasNextMedia(index, blocks)) return;\n      return _this.loadMedia(nextIndex);\n    };\n\n    _this.loadMedia = function (index) {\n      var blocks = _this.state.blocks;\n      if (index < 0) return false;\n      if (index >= blocks.length) return false;\n\n      _this.setState({\n        index: index,\n        hasPreviousMedia: _this.hasPreviousMedia(index, blocks),\n        hasNextMedia: _this.hasNextMedia(index, blocks)\n      });\n\n      preloadIVMediaViewerContent(index, blocks);\n      return true;\n    };\n\n    _this.handleClose = function () {\n      setInstantViewViewerContent(null);\n      var _this$state3 = _this.state,\n          index = _this$state3.index,\n          blocks = _this$state3.blocks;\n\n      if (index !== -1) {\n        cancelPreloadIVMediaViewerContent(index, blocks);\n      }\n    };\n\n    _this.handleForward = function () {\n      var media = _this.props.media;\n      var inputMessageContent = getInputMediaContent(media, null);\n      if (!inputMessageContent) return;\n      forward(inputMessageContent);\n    };\n\n    _this.handleSave = function () {\n      var media = _this.props.media;\n      saveMedia(media, null);\n    };\n\n    _this.state = {\n      index: -1,\n      hasPreviousMedia: false,\n      hasNextMedia: false,\n      blocks: []\n    };\n    _this.keyboardHandler = new KeyboardHandler(_this.onKeyDown);\n    return _this;\n  }\n\n  _createClass(InstantViewMediaViewer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadContent();\n      KeyboardManager.add(this.keyboardHandler);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      KeyboardManager.remove(this.keyboardHandler);\n    }\n  }, {\n    key: \"loadContent\",\n    value: function loadContent() {\n      var _this$props = this.props,\n          iv = _this$props.iv,\n          media = _this$props.media;\n      var blocks = getValidMediaBlocks(iv);\n      var index = blocks.findIndex(function (x) {\n        return getBlockMedia(x) === media;\n      });\n      this.setState({\n        blocks: blocks,\n        index: index,\n        hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n        hasNextMedia: this.hasNextMedia(index, blocks)\n      });\n      preloadIVMediaViewerContent(index, blocks);\n    }\n  }, {\n    key: \"hasPreviousMedia\",\n    value: function hasPreviousMedia(index, blocks) {\n      if (index === -1) return false;\n      var nextIndex = index + 1;\n      return nextIndex < blocks.length;\n    }\n  }, {\n    key: \"hasNextMedia\",\n    value: function hasNextMedia(index, blocks) {\n      if (index === -1) return false;\n      var nextIndex = index - 1;\n      return nextIndex >= 0;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          size = _this$props2.size,\n          t = _this$props2.t;\n      var _this$state4 = this.state,\n          index = _this$state4.index,\n          blocks = _this$state4.blocks,\n          hasNextMedia = _this$state4.hasNextMedia,\n          hasPreviousMedia = _this$state4.hasPreviousMedia;\n      if (!blocks) return null;\n      if (index === -1) return null;\n      var block = blocks[index];\n      var media = getBlockMedia(block);\n      var caption = getBlockCaption(block);\n      var url = getBlockUrl(block);\n\n      var _getViewerFile = getViewerFile(media, size),\n          _getViewerFile2 = _slicedToArray(_getViewerFile, 3),\n          width = _getViewerFile2[0],\n          height = _getViewerFile2[1],\n          file = _getViewerFile2[2];\n\n      var title = '';\n\n      if (media['@type'] === 'photo') {\n        title = t('AttachPhoto');\n      }\n\n      if (media['@type'] === 'video') {\n        title = t('AttachVideo');\n      } else if (media['@type'] === 'animation') {\n        title = t('AttachGif');\n      }\n\n      var maxCount = blocks.length;\n      return React.createElement(\"div\", {\n        className: classNames('instant-view-media-viewer', 'media-viewer-default'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"media-viewer-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(MediaViewerFooterText, {\n        title: title,\n        subtitle: maxCount && index >= 0 ? \"\".concat(index + 1, \" of \").concat(maxCount) : null,\n        style: {\n          marginLeft: 128\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(MediaViewerDownloadButton, {\n        title: t('Save'),\n        fileId: file.id,\n        onClick: this.handleSave,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(MediaViewerFooterButton, {\n        title: t('Forward'),\n        onClick: this.handleForward,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(ReplyIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      })), React.createElement(MediaViewerFooterButton, {\n        title: t('Close'),\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"media-viewer-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"media-viewer-left-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(MediaViewerButton, {\n        disabled: !hasNextMedia,\n        grow: true,\n        onClick: this.handleNext,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(NavigateBeforeIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"media-viewer-content-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(InstantViewMediaViewerContent, {\n        media: media,\n        size: size,\n        caption: caption,\n        url: url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"media-viewer-right-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(MediaViewerButton, {\n        disabled: !hasPreviousMedia,\n        grow: true,\n        onClick: this.handlePrevious,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(NavigateBeforeIcon, {\n        style: {\n          transform: 'rotate(180deg)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return InstantViewMediaViewer;\n}(React.Component);\n\nInstantViewMediaViewer.propTypes = {\n  media: PropTypes.object.isRequired,\n  size: PropTypes.number.isRequired,\n  caption: PropTypes.object.isRequired\n};\nvar enhance = compose(withTranslation(), withIV);\nexport default enhance(InstantViewMediaViewer);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Viewer/InstantViewMediaViewer.js"],"names":["React","PropTypes","classNames","compose","withIV","withTranslation","KeyboardManager","KeyboardHandler","CloseIcon","NavigateBeforeIcon","ReplyIcon","InstantViewMediaViewerContent","MediaViewerButton","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","getBlockCaption","getBlockMedia","getBlockUrl","getValidMediaBlocks","cancelPreloadIVMediaViewerContent","getViewerFile","preloadIVMediaViewerContent","saveMedia","getInputMediaContent","forward","setInstantViewViewerContent","InstantViewMediaViewer","props","onKeyDown","event","keyCode","handleClose","handlePrevious","handleNext","stopPropagation","state","index","blocks","nextIndex","hasPreviousMedia","loadMedia","hasNextMedia","length","setState","handleForward","media","inputMessageContent","handleSave","keyboardHandler","loadContent","add","remove","iv","findIndex","x","size","t","block","caption","url","width","height","file","title","maxCount","marginLeft","id","transform","Component","propTypes","object","isRequired","number","enhance"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidMediaBlocks } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidMediaBlocks(iv);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper'>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n"]},"metadata":{},"sourceType":"module"}