{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/InstantView/RichText/Icon.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\n\nvar Icon =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Icon, _React$Component);\n\n  function Icon() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Icon);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Icon)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onClientUpdateDocumentThumbnailBlob = function (update) {\n      var document = _this.props.document;\n      if (!document) return;\n      var thumbnail = document.thumbnail;\n      if (!thumbnail) return;\n      var file = thumbnail.photo;\n      if (!file) return;\n      var fileId = update.fileId;\n\n      if (file.id !== fileId) {\n        return;\n      }\n\n      _this.forceUpdate();\n    };\n\n    _this.onClientUpdateDocumentBlob = function (update) {\n      var document = _this.props.document;\n      if (!document) return;\n      var file = document.document;\n      if (!file) return;\n      var fileId = update.fileId;\n\n      if (file.id !== fileId) {\n        return;\n      }\n\n      _this.forceUpdate();\n    };\n\n    return _this;\n  }\n\n  _createClass(Icon, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n      FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n      FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n  }, {\n    key: \"emptyPlaceholderSrc\",\n    value: function emptyPlaceholderSrc(width, height) {\n      return \"data:image/svg+xml,%3Csvg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 \".concat(width, \" \").concat(height, \"\\\"%3E%3C/svg%3E\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          document = _this$props.document,\n          height = _this$props.height,\n          width = _this$props.width;\n      if (!document) return null;\n      var thumbnail = document.thumbnail,\n          file = document.document;\n      var thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n      var src = getSrc(file);\n      return React.createElement(\"img\", {\n        src: src || thumbnailSrc || this.emptyPlaceholderSrc(1, 1),\n        width: width > 0 ? width : null,\n        height: height > 0 ? height : null,\n        draggable: false,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Icon;\n}(React.Component);\n\nIcon.propTypes = {\n  document: PropTypes.object.isRequired,\n  height: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired\n};\nexport default Icon;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/InstantView/RichText/Icon.js"],"names":["React","PropTypes","getSrc","FileStore","Icon","onClientUpdateDocumentThumbnailBlob","update","document","props","thumbnail","file","photo","fileId","id","forceUpdate","onClientUpdateDocumentBlob","on","off","width","height","thumbnailSrc","src","emptyPlaceholderSrc","Component","propTypes","object","isRequired","number"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\n\nclass Icon extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const file = document.document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    emptyPlaceholderSrc(width, height) {\n        return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\"%3E%3C/svg%3E`;\n    }\n\n    render() {\n        const { document, height, width } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, document: file } = document;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(file);\n\n        return (\n            <img\n                src={src || thumbnailSrc || this.emptyPlaceholderSrc(1, 1)}\n                width={width > 0 ? width : null}\n                height={height > 0 ? height : null}\n                draggable={false}\n                alt=''\n            />\n        );\n    }\n}\n\nIcon.propTypes = {\n    document: PropTypes.object.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default Icon;\n"]},"metadata":{},"sourceType":"module"}