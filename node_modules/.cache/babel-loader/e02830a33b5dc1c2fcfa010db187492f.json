{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnMiddle/StickerPreview.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nvar StickerPreview =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StickerPreview, _React$Component);\n\n  function StickerPreview() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StickerPreview);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StickerPreview)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      emoji: null,\n      prevPropsSticker: null\n    };\n\n    _this.loadStickerEmojis = function (sticker) {\n      var file = sticker.sticker;\n      var id = file.id;\n      TdLibController.send({\n        '@type': 'getStickerEmojis',\n        sticker: {\n          '@type': 'inputFileId',\n          id: id\n        }\n      }).then(function (result) {\n        if (_this.props.sticker === sticker) {\n          _this.setState({\n            emoji: result.emojis.join(' ')\n          });\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(StickerPreview, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      var sticker = this.props.sticker;\n\n      if (sticker && sticker !== prevProps.sticker) {\n        this.loadStickerEmojis(sticker);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var sticker = this.props.sticker;\n\n      if (sticker) {\n        this.loadStickerEmojis(sticker);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var sticker = this.props.sticker;\n      var emoji = this.state.emoji;\n      if (!sticker) return null;\n      return React.createElement(\"div\", {\n        className: \"sticker-preview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sticker-preview-emoji\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, emoji), React.createElement(Sticker, {\n        sticker: sticker,\n        displaySize: STICKER_PREVIEW_DISPLAY_SIZE,\n        source: StickerSourceEnum.PREVIEW,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var sticker = props.sticker;\n      var prevPropsSticker = state.prevPropsSticker;\n\n      if (sticker && prevPropsSticker) {\n        return {\n          prevPropsSticker: sticker,\n          emoji: null\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return StickerPreview;\n}(React.Component);\n\nStickerPreview.propTypes = {\n  sticker: PropTypes.object\n};\nexport default StickerPreview;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnMiddle/StickerPreview.js"],"names":["React","PropTypes","Sticker","StickerSourceEnum","STICKER_PREVIEW_DISPLAY_SIZE","TdLibController","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","file","id","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","PREVIEW","Component","propTypes","object"],"mappings":";;;;;;;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,IAAkBC,iBAAlB,QAA2C,0BAA3C;AACA,SAASC,4BAAT,QAA6C,iBAA7C;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAO,sBAAP;;IAEMC,c;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,KAAK,EAAE,IADH;AAEJC,MAAAA,gBAAgB,EAAE;AAFd,K;;UAmCRC,iB,GAAoB,UAAAC,OAAO,EAAI;AAAA,UACVC,IADU,GACDD,OADC,CACnBA,OADmB;AAAA,UAEnBE,EAFmB,GAEZD,IAFY,CAEnBC,EAFmB;AAI3BR,MAAAA,eAAe,CAACS,IAAhB,CAAqB;AACjB,iBAAS,kBADQ;AAEjBH,QAAAA,OAAO,EAAE;AAAE,mBAAS,aAAX;AAA0BE,UAAAA,EAAE,EAAFA;AAA1B;AAFQ,OAArB,EAGGE,IAHH,CAGQ,UAAAC,MAAM,EAAI;AACd,YAAI,MAAKC,KAAL,CAAWN,OAAX,KAAuBA,OAA3B,EAAoC;AAChC,gBAAKO,QAAL,CAAc;AACVV,YAAAA,KAAK,EAAEQ,MAAM,CAACG,MAAP,CAAcC,IAAd,CAAmB,GAAnB;AADG,WAAd;AAGH;AACJ,OATD;AAUH,K;;;;;;;uCA9BkBC,S,EAAWC,S,EAAWC,Q,EAAU;AAAA,UACvCZ,OADuC,GAC3B,KAAKM,KADsB,CACvCN,OADuC;;AAG/C,UAAIA,OAAO,IAAIA,OAAO,KAAKU,SAAS,CAACV,OAArC,EAA8C;AAC1C,aAAKD,iBAAL,CAAuBC,OAAvB;AACH;AACJ;;;wCAEmB;AAAA,UACRA,OADQ,GACI,KAAKM,KADT,CACRN,OADQ;;AAGhB,UAAIA,OAAJ,EAAa;AACT,aAAKD,iBAAL,CAAuBC,OAAvB;AACH;AACJ;;;6BAkBQ;AAAA,UACGA,OADH,GACe,KAAKM,KADpB,CACGN,OADH;AAAA,UAEGH,KAFH,GAEa,KAAKD,KAFlB,CAEGC,KAFH;AAIL,UAAI,CAACG,OAAL,EAAc,OAAO,IAAP;AAEd,aACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwCH,KAAxC,CADJ,EAEI,oBAAC,OAAD;AACI,QAAA,OAAO,EAAEG,OADb;AAEI,QAAA,WAAW,EAAEP,4BAFjB;AAGI,QAAA,MAAM,EAAED,iBAAiB,CAACqB,OAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAUH;;;6CA9D+BP,K,EAAOV,K,EAAO;AAAA,UAClCI,OADkC,GACtBM,KADsB,CAClCN,OADkC;AAAA,UAElCF,gBAFkC,GAEbF,KAFa,CAElCE,gBAFkC;;AAI1C,UAAIE,OAAO,IAAIF,gBAAf,EAAiC;AAC7B,eAAO;AACHA,UAAAA,gBAAgB,EAAEE,OADf;AAEHH,UAAAA,KAAK,EAAE;AAFJ,SAAP;AAIH;;AAED,aAAO,IAAP;AACH;;;;EAlBwBR,KAAK,CAACyB,S;;AAuEnCnB,cAAc,CAACoB,SAAf,GAA2B;AACvBf,EAAAA,OAAO,EAAEV,SAAS,CAAC0B;AADI,CAA3B;AAIA,eAAerB,cAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n"]},"metadata":{},"sourceType":"module"}