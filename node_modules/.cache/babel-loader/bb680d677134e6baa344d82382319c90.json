{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Tile/MediaInfo.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nvar MediaInfo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MediaInfo, _React$Component);\n\n  function MediaInfo(props) {\n    _classCallCheck(this, MediaInfo);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MediaInfo).call(this, props));\n  }\n\n  _createClass(MediaInfo, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          chatId = _this$props.chatId,\n          messageId = _this$props.messageId;\n      var message = MessageStore.get(chatId, messageId);\n      if (!message) return null;\n      var date = message.date;\n      var userId = getSenderUserId(message);\n      var dateHint = getDateHint(date);\n      var tileControl = userId ? React.createElement(UserTile, {\n        userId: userId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }) : React.createElement(ChatTile, {\n        chatId: chatId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        className: \"media-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"media-info-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, tileControl, React.createElement(\"div\", {\n        className: \"media-info-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"media-info-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(MessageAuthor, {\n        chatId: chatId,\n        userId: userId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"media-info-row meta\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, dateHint)))));\n    }\n  }]);\n\n  return MediaInfo;\n}(React.Component);\n\nMediaInfo.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  messageId: PropTypes.number.isRequired\n};\nexport default MediaInfo;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Tile/MediaInfo.js"],"names":["React","PropTypes","getDateHint","getSenderUserId","UserTile","ChatTile","MessageAuthor","MessageStore","MediaInfo","props","chatId","messageId","message","get","date","userId","dateHint","tileControl","Component","propTypes","number","isRequired"],"mappings":";;;;;;;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,qBAA7C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAO,iBAAP;;IAEMC,S;;;;;AACF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA,kFACTA,KADS;AAElB;;;;6BAEQ;AAAA,wBACyB,KAAKA,KAD9B;AAAA,UACGC,MADH,eACGA,MADH;AAAA,UACWC,SADX,eACWA,SADX;AAGL,UAAMC,OAAO,GAAGL,YAAY,CAACM,GAAb,CAAiBH,MAAjB,EAAyBC,SAAzB,CAAhB;AACA,UAAI,CAACC,OAAL,EAAc,OAAO,IAAP;AAJT,UAMGE,IANH,GAMYF,OANZ,CAMGE,IANH;AAQL,UAAMC,MAAM,GAAGZ,eAAe,CAACS,OAAD,CAA9B;AACA,UAAMI,QAAQ,GAAGd,WAAW,CAACY,IAAD,CAA5B;AAEA,UAAMG,WAAW,GAAGF,MAAM,GAAG,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAEA,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GAAkC,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAEL,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA5D;AAEA,aACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKO,WADL,EAEI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,aAAD;AAAe,QAAA,MAAM,EAAEP,MAAvB;AAA+B,QAAA,MAAM,EAAEK,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOC,QAAP,CADJ,CAJJ,CAFJ,CADJ,CADJ;AAeH;;;;EAjCmBhB,KAAK,CAACkB,S;;AAoC9BV,SAAS,CAACW,SAAV,GAAsB;AAClBT,EAAAA,MAAM,EAAET,SAAS,CAACmB,MAAV,CAAiBC,UADP;AAElBV,EAAAA,SAAS,EAAEV,SAAS,CAACmB,MAAV,CAAiBC;AAFV,CAAtB;AAKA,eAAeb,SAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n"]},"metadata":{},"sourceType":"module"}