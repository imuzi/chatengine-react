{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Tile/VoiceNoteTile.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport DocumentTile from './DocumentTile';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './VoiceNoteTile.css';\n\nvar VoiceNoteTile =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(VoiceNoteTile, _React$Component);\n\n  function VoiceNoteTile(props) {\n    var _this;\n\n    _classCallCheck(this, VoiceNoteTile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VoiceNoteTile).call(this, props));\n\n    _this.onClientUpdateMediaEnd = function (update) {\n      var _this$props = _this.props,\n          chatId = _this$props.chatId,\n          messageId = _this$props.messageId;\n\n      if (chatId === update.chatId && messageId === update.messageId) {\n        _this.setState({\n          active: false,\n          playing: false,\n          currentTime: 0\n        });\n      }\n    };\n\n    _this.onClientUpdateMediaPlay = function (update) {\n      var _this$props2 = _this.props,\n          chatId = _this$props2.chatId,\n          messageId = _this$props2.messageId;\n\n      if (chatId === update.chatId && messageId === update.messageId) {\n        _this.setState({\n          playing: true\n        });\n      } else {\n        _this.setState({\n          playing: false\n        });\n      }\n    };\n\n    _this.onClientUpdateMediaPause = function (update) {\n      var _this$props3 = _this.props,\n          chatId = _this$props3.chatId,\n          messageId = _this$props3.messageId;\n\n      if (chatId === update.chatId && messageId === update.messageId) {\n        _this.setState({\n          playing: false\n        });\n      }\n    };\n\n    _this.onClientUpdateMediaActive = function (update) {\n      var _this$props4 = _this.props,\n          chatId = _this$props4.chatId,\n          messageId = _this$props4.messageId;\n\n      if (chatId === update.chatId && messageId === update.messageId) {\n        if (!_this.state.active) {\n          _this.setState({\n            active: true,\n            currentTime: 0,\n            playing: true\n          });\n        }\n      } else if (_this.state.active) {\n        _this.setState({\n          active: false,\n          currentTime: 0,\n          playing: false\n        });\n      }\n    };\n\n    var _chatId = props.chatId,\n        _messageId = props.messageId;\n    var time = PlayerStore.time,\n        message = PlayerStore.message,\n        playing = PlayerStore.playing;\n    var active = message && message.chat_id === _chatId && message.id === _messageId;\n    _this.state = {\n      active: active,\n      playing: active ? playing : false,\n      currentTime: active && time ? time.currentTime : 0,\n      duration: active && time ? time.duration : 0\n    };\n    return _this;\n  }\n\n  _createClass(VoiceNoteTile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n      PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n      PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n      PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n      PlayerStore.off('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n      PlayerStore.off('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n      PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          file = _this$props5.file,\n          openMedia = _this$props5.openMedia;\n      var playing = this.state.playing;\n      return React.createElement(DocumentTile, {\n        thumbnail: null,\n        file: file,\n        openMedia: openMedia,\n        icon: React.createElement(DownloadIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }),\n        completeIcon: playing ? React.createElement(PauseIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }) : React.createElement(PlayArrowIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return VoiceNoteTile;\n}(React.Component);\n\nVoiceNoteTile.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  messageId: PropTypes.number.isRequired,\n  file: PropTypes.object.isRequired,\n  openMedia: PropTypes.func\n};\nexport default VoiceNoteTile;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Tile/VoiceNoteTile.js"],"names":["React","PropTypes","DownloadIcon","PlayArrowIcon","PauseIcon","DocumentTile","PlayerStore","VoiceNoteTile","props","onClientUpdateMediaEnd","update","chatId","messageId","setState","active","playing","currentTime","onClientUpdateMediaPlay","onClientUpdateMediaPause","onClientUpdateMediaActive","state","time","message","chat_id","id","duration","on","off","file","openMedia","Component","propTypes","number","isRequired","object","func"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport DocumentTile from './DocumentTile';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './VoiceNoteTile.css';\n\nclass VoiceNoteTile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.off('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { file, openMedia } = this.props;\n        const { playing } = this.state;\n\n        return (\n            <DocumentTile\n                thumbnail={null}\n                file={file}\n                openMedia={openMedia}\n                icon={<DownloadIcon />}\n                completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n            />\n        );\n    }\n}\n\nVoiceNoteTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default VoiceNoteTile;\n"]},"metadata":{},"sourceType":"module"}