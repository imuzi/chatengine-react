{"ast":null,"code":"import _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Message/Media/FireworksControl.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n/**\n * Draws a rounded rectangle using the current state of the canvas.\n * If you omit the last three params, it will draw a rectangle\n * outline with a 5 pixel border radius\n * @param {CanvasRenderingContext2D} ctx\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Number} [radius = 5] The corner radius; It can also be an object\n *                 to specify different radii for corners\n * @param {Number} [radius.tl = 0] Top left\n * @param {Number} [radius.tr = 0] Top right\n * @param {Number} [radius.br = 0] Bottom right\n * @param {Number} [radius.bl = 0] Bottom left\n * @param {Boolean} [fill = false] Whether to fill the rectangle.\n * @param {Boolean} [stroke = true] Whether to stroke the rectangle.\n */\n\nfunction roundRect(ctx, x, y, width, height, radius, fill, stroke) {\n  if (typeof stroke === 'undefined') {\n    stroke = true;\n  }\n\n  if (typeof radius === 'undefined') {\n    radius = 5;\n  }\n\n  if (typeof radius === 'number') {\n    radius = {\n      tl: radius,\n      tr: radius,\n      br: radius,\n      bl: radius\n    };\n  } else {\n    var defaultRadius = {\n      tl: 0,\n      tr: 0,\n      br: 0,\n      bl: 0\n    };\n\n    for (var side in defaultRadius) {\n      radius[side] = radius[side] || defaultRadius[side];\n    }\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius.tl, y);\n  ctx.lineTo(x + width - radius.tr, y);\n  ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\n  ctx.lineTo(x + width, y + height - radius.br);\n  ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\n  ctx.lineTo(x + radius.bl, y + height);\n  ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\n  ctx.lineTo(x, y + radius.tl);\n  ctx.quadraticCurveTo(x, y, x + radius.tl, y);\n  ctx.closePath();\n\n  if (fill) {\n    ctx.fill();\n  }\n\n  if (stroke) {\n    ctx.stroke();\n  }\n}\n\nvar Particle =\n/*#__PURE__*/\nfunction () {\n  function Particle(fireworks) {\n    _classCallCheck(this, Particle);\n\n    this.fireworks = fireworks;\n    this.type = 0;\n    this.colorType = 0;\n    this.side = 0;\n    this.typeSize = 4;\n    this.xFinished = false;\n    this.finishedStart = false;\n    this.x = 0;\n    this.y = 0;\n    this.rotation = 0;\n    this.moveX = 0;\n    this.moveY = 0;\n  }\n\n  _createClass(Particle, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      ctx.fillStyle = this.colorType;\n\n      if (this.type === 0) {\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.typeSize, 0, Math.PI * 2, false);\n        ctx.fill();\n      } else {\n        ctx.save();\n        ctx.translate(this.x, this.y);\n        ctx.rotate(this.rotation * Math.PI / 180);\n        roundRect(ctx, -this.typeSize, -2, this.typeSize * 2, 4, 2, true, false);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(dt) {\n      var moveCoef = dt / 16.0;\n      this.x += this.moveX * moveCoef;\n      this.y += this.moveY * moveCoef;\n\n      if (this.xFinished !== 0) {\n        var dp = 0.5;\n\n        if (this.xFinished === 1) {\n          this.moveX += dp * moveCoef * 0.05;\n\n          if (this.moveX >= dp) {\n            this.xFinished = 2;\n          }\n        } else {\n          this.moveX -= dp * moveCoef * 0.05;\n\n          if (this.moveX <= -dp) {\n            this.xFinished = 1;\n          }\n        }\n      } else {\n        if (this.side === 0) {\n          if (this.moveX > 0) {\n            this.moveX -= moveCoef * 0.05;\n\n            if (this.moveX <= 0) {\n              this.moveX = 0;\n              this.xFinished = this.finishedStart;\n            }\n          }\n        } else {\n          if (this.moveX < 0) {\n            this.moveX += moveCoef * 0.05;\n\n            if (this.moveX >= 0) {\n              this.moveX = 0;\n              this.xFinished = this.finishedStart;\n            }\n          }\n        }\n      }\n\n      var yEdge = -0.5;\n      var wasNegative = this.moveY < yEdge;\n\n      if (this.moveY > yEdge) {\n        this.moveY += 1.0 / 3.0 * moveCoef * this.fireworks.speedCoef;\n      } else {\n        this.moveY += 1.0 / 3.0 * moveCoef;\n      }\n\n      if (wasNegative && this.moveY > yEdge) {\n        this.fireworks.fallingDownCount++;\n      }\n\n      if (this.type === 1) {\n        this.rotation += moveCoef * 10;\n\n        if (this.rotation > 360) {\n          this.rotation -= 360;\n        }\n      }\n\n      return this.y >= this.fireworks.getMeasuredHeight();\n    }\n  }]);\n\n  return Particle;\n}();\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nvar Fireworks =\n/*#__PURE__*/\nfunction () {\n  function Fireworks(context) {\n    _classCallCheck(this, Fireworks);\n\n    this.context = context;\n    this.particlesCount = 60;\n    this.fallParticlesCount = 30;\n    this.particles = [];\n    this.speedCoef = 1.0;\n    this.fallingDownCount = 0;\n  }\n\n  _createClass(Fireworks, [{\n    key: \"getMeasuredHeight\",\n    value: function getMeasuredHeight() {\n      return this.context.canvas.clientHeight;\n    }\n  }, {\n    key: \"getMeasuredWidth\",\n    value: function getMeasuredWidth() {\n      return this.context.canvas.clientWidth;\n    }\n  }, {\n    key: \"createParticle\",\n    value: function createParticle(fall) {\n      var particle = new Particle(this);\n      particle.colorType = Fireworks.colors[getRandomInt(0, Fireworks.colors.length)];\n      particle.type = getRandomInt(0, 2);\n      particle.side = getRandomInt(0, 2);\n      particle.finishedStart = 1 + getRandomInt(0, 2);\n\n      if (particle.type === 0) {\n        particle.typeSize = 4 + Math.random() * 2;\n      } else {\n        particle.typeSize = 4 + Math.random() * 4;\n      }\n\n      if (fall) {\n        particle.y = -Math.random() * this.getMeasuredHeight() * 1.2;\n        particle.x = 5 + getRandomInt(0, this.getMeasuredWidth() - 10);\n        particle.xFinished = particle.finishedStart;\n      } else {\n        var xOffset = 4 + getRandomInt(0, 10);\n        var yOffset = this.getMeasuredHeight() / 4;\n\n        if (particle.side === 0) {\n          particle.x = -xOffset;\n        } else {\n          particle.x = this.getMeasuredWidth() + xOffset;\n        }\n\n        particle.rotation = Math.random() * 360;\n        particle.moveX = (particle.side === 0 ? 1 : -1) * (1.2 + Math.random() * 4);\n        particle.moveY = -(4 + Math.random() * 4);\n        particle.y = yOffset / 2 + getRandomInt(0, yOffset * 2);\n      } // console.log(`particle side=${particle.side} x=${particle.x} y=${particle.y} moveX=${particle.moveX} moveY=${particle.moveY}`);\n\n\n      return particle;\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      if (this.started) {\n        return;\n      }\n\n      this.particles = [];\n      this.started = true;\n      this.startedFall = false;\n      this.fallingDownCount = 0;\n      this.speedCoef = 1.0;\n      this.lastUpdateTime = 0;\n\n      for (var a = 0; a < this.particlesCount; a++) {\n        this.particles.push(this.createParticle(false));\n      }\n\n      this.draw();\n    }\n  }, {\n    key: \"startFall\",\n    value: function startFall() {\n      if (this.startedFall) {\n        return;\n      }\n\n      this.startedFall = true;\n\n      for (var a = 0; a < this.fallParticlesCount; a++) {\n        this.particles.push(this.createParticle(true));\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var _this = this;\n\n      var newTime = Date.now();\n      var dt = newTime - this.lastUpdateTime;\n      this.lastUpdateTime = newTime;\n\n      if (dt > 18) {\n        dt = 16;\n      } // console.log('draw dt', dt);\n\n\n      this.context.clearRect(0, 0, this.getMeasuredWidth(), this.getMeasuredHeight());\n\n      for (var a = 0, N = this.particles.length; a < N; a++) {\n        var p = this.particles[a];\n        p.draw(this.context);\n\n        if (p.update(dt)) {\n          this.particles.splice(a, 1);\n          a--;\n          N--;\n        }\n      }\n\n      if (this.fallingDownCount >= this.particlesCount / 2 && this.speedCoef > 0.2) {\n        this.startFall();\n        this.speedCoef -= dt / 16.0 * 0.15;\n\n        if (this.speedCoef < 0.2) {\n          this.speedCoef = 0.2;\n        }\n      }\n\n      if (this.particles.length) {\n        window.requestAnimationFrame(function () {\n          return _this.draw();\n        });\n      } else {\n        this.started = false;\n        this.context.clearRect(0, 0, this.getMeasuredWidth(), this.getMeasuredHeight());\n      }\n    }\n  }]);\n\n  return Fireworks;\n}();\n\nFireworks.colors = ['#E8BC2C', '#D0049E', '#02CBFE', '#5723FD', '#FE8C27', '#6CB859'];\n\nvar FireworksComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FireworksComponent, _React$Component);\n\n  function FireworksComponent(props) {\n    var _this2;\n\n    _classCallCheck(this, FireworksComponent);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(FireworksComponent).call(this, props));\n\n    _this2.onResize = function () {\n      var canvas = _this2.canvasRef.current;\n      if (!canvas) return;\n      canvas.setAttribute('width', _this2.parentNode.clientWidth + 18);\n      canvas.setAttribute('height', _this2.parentNode.clientHeight + 12);\n    };\n\n    _this2.canvasRef = React.createRef();\n    return _this2;\n  }\n\n  _createClass(FireworksComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.attachToParent();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.detachFromParent();\n    }\n  }, {\n    key: \"attachToParent\",\n    value: function attachToParent() {\n      var canvas = this.canvasRef.current;\n      if (!canvas) return;\n      var parentNode = canvas.parentNode;\n      if (!parentNode) return;\n      this.parentNode = parentNode;\n      canvas.setAttribute('width', this.parentNode.clientWidth + 18);\n      canvas.setAttribute('height', this.parentNode.clientHeight + 12);\n      window.addEventListener('resize', this.onResize);\n    }\n  }, {\n    key: \"detachFromParent\",\n    value: function detachFromParent() {\n      var canvas = this.canvasRef.current;\n      if (!canvas) return;\n      var parentNode = canvas.parentNode;\n      if (!parentNode) return;\n      this.parentNode = null;\n      window.removeEventListener('resize', this.onResize);\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var ctx = this.canvasRef.current.getContext('2d');\n      var fireworks = new Fireworks(ctx);\n      fireworks.start();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"canvas\", {\n        ref: this.canvasRef,\n        style: {\n          zIndex: 2,\n          position: 'absolute',\n          left: 0,\n          top: 0,\n          width: '100%',\n          height: '100%',\n          pointerEvents: 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return FireworksComponent;\n}(React.Component);\n\nFireworksComponent.propTypes = {};\nexport default FireworksComponent;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Message/Media/FireworksControl.js"],"names":["React","PropTypes","roundRect","ctx","x","y","width","height","radius","fill","stroke","tl","tr","br","bl","defaultRadius","side","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","Particle","fireworks","type","colorType","typeSize","xFinished","finishedStart","rotation","moveX","moveY","fillStyle","arc","Math","PI","save","translate","rotate","restore","dt","moveCoef","dp","yEdge","wasNegative","speedCoef","fallingDownCount","getMeasuredHeight","getRandomInt","min","max","ceil","floor","random","Fireworks","context","particlesCount","fallParticlesCount","particles","canvas","clientHeight","clientWidth","fall","particle","colors","length","getMeasuredWidth","xOffset","yOffset","started","startedFall","lastUpdateTime","a","push","createParticle","draw","newTime","Date","now","clearRect","N","p","update","splice","startFall","window","requestAnimationFrame","FireworksComponent","props","onResize","canvasRef","current","setAttribute","parentNode","createRef","attachToParent","detachFromParent","addEventListener","removeEventListener","getContext","start","zIndex","position","left","top","pointerEvents","Component","propTypes"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Draws a rounded rectangle using the current state of the canvas.\n * If you omit the last three params, it will draw a rectangle\n * outline with a 5 pixel border radius\n * @param {CanvasRenderingContext2D} ctx\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Number} [radius = 5] The corner radius; It can also be an object\n *                 to specify different radii for corners\n * @param {Number} [radius.tl = 0] Top left\n * @param {Number} [radius.tr = 0] Top right\n * @param {Number} [radius.br = 0] Bottom right\n * @param {Number} [radius.bl = 0] Bottom left\n * @param {Boolean} [fill = false] Whether to fill the rectangle.\n * @param {Boolean} [stroke = true] Whether to stroke the rectangle.\n */\nfunction roundRect(ctx, x, y, width, height, radius, fill, stroke) {\n    if (typeof stroke === 'undefined') {\n        stroke = true;\n    }\n    if (typeof radius === 'undefined') {\n        radius = 5;\n    }\n    if (typeof radius === 'number') {\n        radius = { tl: radius, tr: radius, br: radius, bl: radius };\n    } else {\n        var defaultRadius = { tl: 0, tr: 0, br: 0, bl: 0 };\n        for (var side in defaultRadius) {\n            radius[side] = radius[side] || defaultRadius[side];\n        }\n    }\n    ctx.beginPath();\n    ctx.moveTo(x + radius.tl, y);\n    ctx.lineTo(x + width - radius.tr, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\n    ctx.lineTo(x + width, y + height - radius.br);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\n    ctx.lineTo(x + radius.bl, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\n    ctx.lineTo(x, y + radius.tl);\n    ctx.quadraticCurveTo(x, y, x + radius.tl, y);\n    ctx.closePath();\n    if (fill) {\n        ctx.fill();\n    }\n    if (stroke) {\n        ctx.stroke();\n    }\n}\n\nclass Particle {\n    constructor(fireworks) {\n        this.fireworks = fireworks;\n        this.type = 0;\n        this.colorType = 0;\n        this.side = 0;\n        this.typeSize = 4;\n        this.xFinished = false;\n        this.finishedStart = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.rotation = 0;\n        this.moveX = 0;\n        this.moveY = 0;\n    }\n\n    draw(ctx) {\n        ctx.fillStyle = this.colorType;\n\n        if (this.type === 0) {\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, this.typeSize, 0, Math.PI * 2, false);\n            ctx.fill();\n        } else {\n            ctx.save();\n            ctx.translate(this.x, this.y);\n            ctx.rotate((this.rotation * Math.PI) / 180);\n            roundRect(ctx, -this.typeSize, -2, this.typeSize * 2, 4, 2, true, false);\n            ctx.restore();\n        }\n    }\n\n    update(dt) {\n        const moveCoef = dt / 16.0;\n        this.x += this.moveX * moveCoef;\n        this.y += this.moveY * moveCoef;\n        if (this.xFinished !== 0) {\n            const dp = 0.5;\n            if (this.xFinished === 1) {\n                this.moveX += dp * moveCoef * 0.05;\n                if (this.moveX >= dp) {\n                    this.xFinished = 2;\n                }\n            } else {\n                this.moveX -= dp * moveCoef * 0.05;\n                if (this.moveX <= -dp) {\n                    this.xFinished = 1;\n                }\n            }\n        } else {\n            if (this.side === 0) {\n                if (this.moveX > 0) {\n                    this.moveX -= moveCoef * 0.05;\n                    if (this.moveX <= 0) {\n                        this.moveX = 0;\n                        this.xFinished = this.finishedStart;\n                    }\n                }\n            } else {\n                if (this.moveX < 0) {\n                    this.moveX += moveCoef * 0.05;\n                    if (this.moveX >= 0) {\n                        this.moveX = 0;\n                        this.xFinished = this.finishedStart;\n                    }\n                }\n            }\n        }\n        let yEdge = -0.5;\n        const wasNegative = this.moveY < yEdge;\n        if (this.moveY > yEdge) {\n            this.moveY += (1.0 / 3.0) * moveCoef * this.fireworks.speedCoef;\n        } else {\n            this.moveY += (1.0 / 3.0) * moveCoef;\n        }\n        if (wasNegative && this.moveY > yEdge) {\n            this.fireworks.fallingDownCount++;\n        }\n        if (this.type === 1) {\n            this.rotation += moveCoef * 10;\n            if (this.rotation > 360) {\n                this.rotation -= 360;\n            }\n        }\n\n        return this.y >= this.fireworks.getMeasuredHeight();\n    }\n}\n\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n\nclass Fireworks {\n    static colors = ['#E8BC2C', '#D0049E', '#02CBFE', '#5723FD', '#FE8C27', '#6CB859'];\n\n    constructor(context) {\n        this.context = context;\n        this.particlesCount = 60;\n        this.fallParticlesCount = 30;\n        this.particles = [];\n        this.speedCoef = 1.0;\n        this.fallingDownCount = 0;\n    }\n\n    getMeasuredHeight() {\n        return this.context.canvas.clientHeight;\n    }\n\n    getMeasuredWidth() {\n        return this.context.canvas.clientWidth;\n    }\n\n    createParticle(fall) {\n        const particle = new Particle(this);\n        particle.colorType = Fireworks.colors[getRandomInt(0, Fireworks.colors.length)];\n        particle.type = getRandomInt(0, 2);\n        particle.side = getRandomInt(0, 2);\n        particle.finishedStart = 1 + getRandomInt(0, 2);\n        if (particle.type === 0) {\n            particle.typeSize = 4 + Math.random() * 2;\n        } else {\n            particle.typeSize = 4 + Math.random() * 4;\n        }\n        if (fall) {\n            particle.y = -Math.random() * this.getMeasuredHeight() * 1.2;\n            particle.x = 5 + getRandomInt(0, this.getMeasuredWidth() - 10);\n            particle.xFinished = particle.finishedStart;\n        } else {\n            const xOffset = 4 + getRandomInt(0, 10);\n            const yOffset = this.getMeasuredHeight() / 4;\n            if (particle.side === 0) {\n                particle.x = -xOffset;\n            } else {\n                particle.x = this.getMeasuredWidth() + xOffset;\n            }\n            particle.rotation = Math.random() * 360;\n            particle.moveX = (particle.side === 0 ? 1 : -1) * (1.2 + Math.random() * 4);\n            particle.moveY = -(4 + Math.random() * 4);\n            particle.y = yOffset / 2 + getRandomInt(0, yOffset * 2);\n        }\n        // console.log(`particle side=${particle.side} x=${particle.x} y=${particle.y} moveX=${particle.moveX} moveY=${particle.moveY}`);\n        return particle;\n    }\n\n    start() {\n        if (this.started) {\n            return;\n        }\n\n        this.particles = [];\n        this.started = true;\n        this.startedFall = false;\n        this.fallingDownCount = 0;\n        this.speedCoef = 1.0;\n        this.lastUpdateTime = 0;\n        for (let a = 0; a < this.particlesCount; a++) {\n            this.particles.push(this.createParticle(false));\n        }\n\n        this.draw();\n    }\n\n    startFall() {\n        if (this.startedFall) {\n            return;\n        }\n        this.startedFall = true;\n        for (let a = 0; a < this.fallParticlesCount; a++) {\n            this.particles.push(this.createParticle(true));\n        }\n    }\n\n    draw() {\n        const newTime = Date.now();\n        let dt = newTime - this.lastUpdateTime;\n        this.lastUpdateTime = newTime;\n        if (dt > 18) {\n            dt = 16;\n        }\n        // console.log('draw dt', dt);\n        this.context.clearRect(0, 0, this.getMeasuredWidth(), this.getMeasuredHeight());\n        for (let a = 0, N = this.particles.length; a < N; a++) {\n            const p = this.particles[a];\n            p.draw(this.context);\n            if (p.update(dt)) {\n                this.particles.splice(a, 1);\n                a--;\n                N--;\n            }\n        }\n        if (this.fallingDownCount >= this.particlesCount / 2 && this.speedCoef > 0.2) {\n            this.startFall();\n            this.speedCoef -= (dt / 16.0) * 0.15;\n            if (this.speedCoef < 0.2) {\n                this.speedCoef = 0.2;\n            }\n        }\n        if (this.particles.length) {\n            window.requestAnimationFrame(() => this.draw());\n        } else {\n            this.started = false;\n            this.context.clearRect(0, 0, this.getMeasuredWidth(), this.getMeasuredHeight());\n        }\n    }\n}\n\nclass FireworksComponent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.canvasRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.attachToParent();\n    }\n\n    componentWillUnmount() {\n        this.detachFromParent();\n    }\n\n    attachToParent() {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        const parentNode = canvas.parentNode;\n        if (!parentNode) return;\n\n        this.parentNode = parentNode;\n        canvas.setAttribute('width', this.parentNode.clientWidth + 18);\n        canvas.setAttribute('height', this.parentNode.clientHeight + 12);\n        window.addEventListener('resize', this.onResize);\n    }\n\n    detachFromParent() {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        const parentNode = canvas.parentNode;\n        if (!parentNode) return;\n\n        this.parentNode = null;\n        window.removeEventListener('resize', this.onResize);\n    }\n\n    onResize = () => {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        canvas.setAttribute('width', this.parentNode.clientWidth + 18);\n        canvas.setAttribute('height', this.parentNode.clientHeight + 12);\n    };\n\n    start() {\n        const ctx = this.canvasRef.current.getContext('2d');\n\n        const fireworks = new Fireworks(ctx);\n        fireworks.start();\n    }\n\n    render() {\n        return (\n            <canvas\n                ref={this.canvasRef}\n                style={{\n                    zIndex: 2,\n                    position: 'absolute',\n                    left: 0,\n                    top: 0,\n                    width: '100%',\n                    height: '100%',\n                    pointerEvents: 'none'\n                }}\n            />\n        );\n    }\n}\n\nFireworksComponent.propTypes = {};\n\nexport default FireworksComponent;\n"]},"metadata":{},"sourceType":"module"}