{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/InstantView/Blocks/RelatedArticle.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SafeLink from '../../Additional/SafeLink';\nimport dateFormat from '../../../Utils/Date';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nvar RelatedArticle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RelatedArticle, _React$Component);\n\n  function RelatedArticle() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RelatedArticle);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RelatedArticle)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleClick = function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n      var url = _this.props.url;\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateInstantViewUrl',\n        url: url\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(RelatedArticle, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          author = _this$props.author,\n          description = _this$props.description,\n          publishDate = _this$props.publishDate,\n          title = _this$props.title,\n          url = _this$props.url;\n      var d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n      var hasAuthorDateSeparator = author && d;\n      var hasAuthorDate = d || author;\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(SafeLink, {\n        url: url,\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, title), hasAuthorDate && React.createElement(\"address\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, author, hasAuthorDateSeparator && ' • ', d && React.createElement(\"time\", {\n        dateTime: d.toISOString(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, dateFormat(d, 'dd mmm, yyyy'))));\n    }\n  }]);\n\n  return RelatedArticle;\n}(React.Component);\n\nRelatedArticle.propTypes = {\n  url: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  photo: PropTypes.object,\n  author: PropTypes.string.isRequired,\n  publishDate: PropTypes.number.isRequired\n};\nexport default RelatedArticle;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/InstantView/Blocks/RelatedArticle.js"],"names":["React","PropTypes","SafeLink","dateFormat","TdLibController","RelatedArticle","handleClick","event","preventDefault","stopPropagation","url","props","clientUpdate","author","description","publishDate","title","d","Date","hasAuthorDateSeparator","hasAuthorDate","toISOString","Component","propTypes","string","isRequired","photo","object","number"],"mappings":";;;;;;;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,eAAP,MAA4B,sCAA5B;;IAEMC,c;;;;;;;;;;;;;;;;;;UACFC,W,GAAc,UAAAC,KAAK,EAAI;AACnBA,MAAAA,KAAK,CAACC,cAAN;AACAD,MAAAA,KAAK,CAACE,eAAN;AAFmB,UAIXC,GAJW,GAIH,MAAKC,KAJF,CAIXD,GAJW;AAMnBN,MAAAA,eAAe,CAACQ,YAAhB,CAA6B;AACzB,iBAAS,4BADgB;AAEzBF,QAAAA,GAAG,EAAHA;AAFyB,OAA7B;AAIH,K;;;;;;;6BAEQ;AAAA,wBACoD,KAAKC,KADzD;AAAA,UACGE,MADH,eACGA,MADH;AAAA,UACWC,WADX,eACWA,WADX;AAAA,UACwBC,WADxB,eACwBA,WADxB;AAAA,UACqCC,KADrC,eACqCA,KADrC;AAAA,UAC4CN,GAD5C,eAC4CA,GAD5C;AAGL,UAAMO,CAAC,GAAGF,WAAW,GAAG,CAAd,GAAkB,IAAIG,IAAJ,CAASH,WAAW,GAAG,IAAvB,CAAlB,GAAiD,IAA3D;AACA,UAAMI,sBAAsB,GAAGN,MAAM,IAAII,CAAzC;AACA,UAAMG,aAAa,GAAGH,CAAC,IAAIJ,MAA3B;AAEA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEH,GAAf;AAAoB,QAAA,OAAO,EAAE,KAAKJ,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKU,KADL,CADJ,EAIKI,aAAa,IACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKP,MADL,EAEKM,sBAAsB,IAAI,KAF/B,EAGKF,CAAC,IAAI;AAAM,QAAA,QAAQ,EAAEA,CAAC,CAACI,WAAF,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkClB,UAAU,CAACc,CAAD,EAAI,cAAJ,CAA5C,CAHV,CALR,CADJ;AAiBH;;;;EArCwBjB,KAAK,CAACsB,S;;AAwCnCjB,cAAc,CAACkB,SAAf,GAA2B;AACvBb,EAAAA,GAAG,EAAET,SAAS,CAACuB,MAAV,CAAiBC,UADC;AAEvBT,EAAAA,KAAK,EAAEf,SAAS,CAACuB,MAAV,CAAiBC,UAFD;AAGvBX,EAAAA,WAAW,EAAEb,SAAS,CAACuB,MAAV,CAAiBC,UAHP;AAIvBC,EAAAA,KAAK,EAAEzB,SAAS,CAAC0B,MAJM;AAKvBd,EAAAA,MAAM,EAAEZ,SAAS,CAACuB,MAAV,CAAiBC,UALF;AAMvBV,EAAAA,WAAW,EAAEd,SAAS,CAAC2B,MAAV,CAAiBH;AANP,CAA3B;AASA,eAAepB,cAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SafeLink from '../../Additional/SafeLink';\nimport dateFormat from '../../../Utils/Date';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass RelatedArticle extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { author, description, publishDate, title, url } = this.props;\n\n        const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n        const hasAuthorDateSeparator = author && d;\n        const hasAuthorDate = d || author;\n\n        return (\n            <li>\n                <SafeLink url={url} onClick={this.handleClick}>\n                    {title}\n                </SafeLink>\n                {hasAuthorDate && (\n                    <address>\n                        {author}\n                        {hasAuthorDateSeparator && ' • '}\n                        {d && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n                    </address>\n                )}\n                {/*{ description && (*/}\n                {/*    <div>{description}</div>*/}\n                {/*)}*/}\n            </li>\n        );\n    }\n}\n\nRelatedArticle.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    author: PropTypes.string.isRequired,\n    publishDate: PropTypes.number.isRequired\n};\n\nexport default RelatedArticle;\n"]},"metadata":{},"sourceType":"module"}