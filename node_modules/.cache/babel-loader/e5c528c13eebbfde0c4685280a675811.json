{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Message/Media/Audio.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport PlayArrowIcon from '../../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../../Assets/Icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport { getAudioShortTitle, getAudioSubtitle, getAudioTitle } from '../../../Utils/Media';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './Audio.css';\n\nvar Audio =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Audio, _React$Component);\n\n  function Audio(props) {\n    var _this;\n\n    _classCallCheck(this, Audio);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Audio).call(this, props));\n\n    _this.onClientUpdateMediaEnd = function (update) {\n      var _this$props = _this.props,\n          chatId = _this$props.chatId,\n          messageId = _this$props.messageId;\n\n      if (chatId === update.chatId && messageId === update.messageId) {\n        _this.setState({\n          active: false,\n          playing: false,\n          currentTime: 0\n        });\n      }\n    };\n\n    _this.onClientUpdateMediaPlay = function (update) {\n      var _this$props2 = _this.props,\n          chatId = _this$props2.chatId,\n          messageId = _this$props2.messageId,\n          playing = _this$props2.playing;\n\n      if (chatId === update.chatId && messageId === update.messageId) {\n        _this.setState({\n          playing: true\n        });\n      } else {\n        _this.setState({\n          playing: false\n        });\n      }\n    };\n\n    _this.onClientUpdateMediaPause = function (update) {\n      var _this$props3 = _this.props,\n          chatId = _this$props3.chatId,\n          messageId = _this$props3.messageId;\n\n      if (chatId === update.chatId && messageId === update.messageId) {\n        _this.setState({\n          playing: false\n        });\n      }\n    };\n\n    _this.onClientUpdateMediaActive = function (update) {\n      var _this$props4 = _this.props,\n          chatId = _this$props4.chatId,\n          messageId = _this$props4.messageId;\n\n      if (chatId === update.chatId && messageId === update.messageId) {\n        if (!_this.state.active) {\n          _this.setState({\n            active: true,\n            currentTime: 0,\n            playing: true\n          });\n        }\n      } else if (_this.state.active) {\n        _this.setState({\n          active: false,\n          currentTime: 0,\n          playing: false\n        });\n      }\n    };\n\n    var _chatId = props.chatId,\n        _messageId = props.messageId;\n    var time = PlayerStore.time,\n        message = PlayerStore.message,\n        playing = PlayerStore.playing;\n    var active = message && message.chat_id === _chatId && message.id === _messageId;\n    _this.state = {\n      active: active,\n      playing: active ? playing : false,\n      currentTime: active && time ? time.currentTime : 0,\n      duration: active && time ? time.duration : 0\n    };\n    return _this;\n  }\n\n  _createClass(Audio, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState, nextContext) {\n      var _this$state = this.state,\n          active = _this$state.active,\n          playing = _this$state.playing,\n          currentTime = _this$state.currentTime,\n          duration = _this$state.duration;\n\n      if (nextState.active !== active) {\n        return true;\n      }\n\n      if (nextState.playing !== playing) {\n        return true;\n      }\n\n      if (nextState.currentTime !== currentTime) {\n        return true;\n      }\n\n      if (nextState.duration !== duration) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n      PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n      PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n      PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n      PlayerStore.off('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n      PlayerStore.off('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n      PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          chatId = _this$props5.chatId,\n          messageId = _this$props5.messageId,\n          audio = _this$props5.audio,\n          openMedia = _this$props5.openMedia,\n          title = _this$props5.title,\n          meta = _this$props5.meta,\n          caption = _this$props5.caption;\n      var _this$state2 = this.state,\n          playing = _this$state2.playing,\n          active = _this$state2.active;\n      if (!audio) return null;\n      var album_cover_thumbnail = audio.album_cover_thumbnail,\n          duration = audio.duration,\n          file = audio.audio;\n      var audioTitle = getAudioSubtitle(audio);\n      var audioSubtitle = getAudioShortTitle(audio);\n      return React.createElement(\"div\", {\n        className: classNames('audio', 'document', {\n          'media-title': title\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(DocumentTile, {\n        thumbnail: album_cover_thumbnail,\n        file: file,\n        openMedia: openMedia,\n        icon: React.createElement(DownloadIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }),\n        completeIcon: playing ? React.createElement(PauseIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }) : React.createElement(PlayArrowIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"audio-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"document-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"document-name\",\n        onClick: openMedia,\n        title: audioTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, audioTitle)), React.createElement(\"div\", {\n        className: \"audio-action\",\n        style: {\n          opacity: active ? 0 : 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, audioSubtitle), React.createElement(VoiceNoteSlider, {\n        className: \"audio-slider\",\n        chatId: chatId,\n        messageId: messageId,\n        duration: duration,\n        style: {\n          opacity: active ? 1 : 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(AudioAction, {\n        chatId: chatId,\n        messageId: messageId,\n        duration: duration,\n        file: file,\n        meta: caption ? null : meta,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Audio;\n}(React.Component);\n\nAudio.propTypes = {\n  chatId: PropTypes.number,\n  messageId: PropTypes.number,\n  audio: PropTypes.object,\n  openMedia: PropTypes.func\n};\nexport default Audio;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Message/Media/Audio.js"],"names":["React","PropTypes","classNames","DownloadIcon","PlayArrowIcon","PauseIcon","DocumentTile","AudioAction","VoiceNoteSlider","getAudioShortTitle","getAudioSubtitle","getAudioTitle","PlayerStore","Audio","props","onClientUpdateMediaEnd","update","chatId","messageId","setState","active","playing","currentTime","onClientUpdateMediaPlay","onClientUpdateMediaPause","onClientUpdateMediaActive","state","time","message","chat_id","id","duration","nextProps","nextState","nextContext","on","off","audio","openMedia","title","meta","caption","album_cover_thumbnail","file","audioTitle","audioSubtitle","opacity","Component","propTypes","number","object","func"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport PlayArrowIcon from '../../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../../Assets/Icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport { getAudioShortTitle, getAudioSubtitle, getAudioTitle } from '../../../Utils/Media';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './Audio.css';\n\nclass Audio extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.off('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, audio, openMedia, title, meta, caption } = this.props;\n        const { playing, active } = this.state;\n        if (!audio) return null;\n\n        const { album_cover_thumbnail, duration, audio: file } = audio;\n\n        const audioTitle = getAudioSubtitle(audio);\n        const audioSubtitle = getAudioShortTitle(audio);\n\n        return (\n            <div className={classNames('audio', 'document', { 'media-title': title })}>\n                <DocumentTile\n                    thumbnail={album_cover_thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<DownloadIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='audio-content'>\n                    <div className='document-title'>\n                        <a className='document-name' onClick={openMedia} title={audioTitle}>\n                            {audioTitle}\n                        </a>\n                    </div>\n                    <div className='audio-action' style={{ opacity: active ? 0 : 1 }}>{audioSubtitle}</div>\n                    <VoiceNoteSlider className='audio-slider' chatId={chatId} messageId={messageId} duration={duration} style={{ opacity: active ? 1 : 0 }}/>\n                    <AudioAction\n                        chatId={chatId}\n                        messageId={messageId}\n                        duration={duration}\n                        file={file}\n                        meta={caption ? null : meta}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nAudio.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    audio: PropTypes.object,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n"]},"metadata":{},"sourceType":"module"}