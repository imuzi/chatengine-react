{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Auth/AuthErrorDialog.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TdLibController from '../../Controllers/TdLibController';\n\nvar AuthErrorDialog =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AuthErrorDialog, _React$Component);\n\n  function AuthErrorDialog(props) {\n    var _this;\n\n    _classCallCheck(this, AuthErrorDialog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AuthErrorDialog).call(this, props));\n    _this.state = {\n      open: false,\n      error: null\n    };\n    _this.handleAuthError = _this.handleAuthError.bind(_assertThisInitialized(_this));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_this));\n    _this.handleKeyDown = _this.handleKeyDown.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AuthErrorDialog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      TdLibController.on('tdlib_auth_error', this.handleAuthError);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      TdLibController.off('tdlib_auth_error', this.handleAuthError);\n    }\n  }, {\n    key: \"handleAuthError\",\n    value: function handleAuthError(error) {\n      this.setState({\n        open: true,\n        error: error\n      });\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        open: false\n      });\n    }\n  }, {\n    key: \"handleKeyDown\",\n    value: function handleKeyDown(e) {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        this.handleClose();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errorString = null;\n\n      if (this.state.error && this.state.error['@type'] === 'error' && this.state.error.message) {\n        errorString = this.state.error.message;\n      } else {\n        errorString = JSON.stringify(this.state.error);\n      }\n\n      return React.createElement(Dialog, {\n        transitionDuration: 0,\n        open: this.state.open,\n        onKeyDown: this.handleKeyDown,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Error\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, errorString)), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Ok\")));\n    }\n  }]);\n\n  return AuthErrorDialog;\n}(React.Component);\n\nexport default AuthErrorDialog;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Auth/AuthErrorDialog.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TdLibController","AuthErrorDialog","props","state","open","error","handleAuthError","bind","handleClose","handleKeyDown","on","off","setState","e","key","preventDefault","errorString","message","JSON","stringify","Component"],"mappings":";;;;;;;;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;;IAEMC,e;;;;;AACF,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,yFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,KADG;AAETC,MAAAA,KAAK,EAAE;AAFE,KAAb;AAKA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,+BAAvB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,+BAAnB;AACA,UAAKE,aAAL,GAAqB,MAAKA,aAAL,CAAmBF,IAAnB,+BAArB;AAVe;AAWlB;;;;wCAEmB;AAChBP,MAAAA,eAAe,CAACU,EAAhB,CAAmB,kBAAnB,EAAuC,KAAKJ,eAA5C;AACH;;;2CAEsB;AACnBN,MAAAA,eAAe,CAACW,GAAhB,CAAoB,kBAApB,EAAwC,KAAKL,eAA7C;AACH;;;oCAEeD,K,EAAO;AACnB,WAAKO,QAAL,CAAc;AACVR,QAAAA,IAAI,EAAE,IADI;AAEVC,QAAAA,KAAK,EAAEA;AAFG,OAAd;AAIH;;;kCAEa;AACV,WAAKO,QAAL,CAAc;AACVR,QAAAA,IAAI,EAAE;AADI,OAAd;AAGH;;;kCAEaS,C,EAAG;AACb,UAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACnBD,QAAAA,CAAC,CAACE,cAAF;AACA,aAAKP,WAAL;AACH;AACJ;;;6BAEQ;AACL,UAAIQ,WAAW,GAAG,IAAlB;;AACA,UAAI,KAAKb,KAAL,CAAWE,KAAX,IAAoB,KAAKF,KAAL,CAAWE,KAAX,CAAiB,OAAjB,MAA8B,OAAlD,IAA6D,KAAKF,KAAL,CAAWE,KAAX,CAAiBY,OAAlF,EAA2F;AACvFD,QAAAA,WAAW,GAAG,KAAKb,KAAL,CAAWE,KAAX,CAAiBY,OAA/B;AACH,OAFD,MAEO;AACHD,QAAAA,WAAW,GAAGE,IAAI,CAACC,SAAL,CAAe,KAAKhB,KAAL,CAAWE,KAA1B,CAAd;AACH;;AAED,aACI,oBAAC,MAAD;AACI,QAAA,kBAAkB,EAAE,CADxB;AAEI,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWC,IAFrB;AAGI,QAAA,SAAS,EAAE,KAAKK,aAHpB;AAII,QAAA,OAAO,EAAE,KAAKD,WAJlB;AAKI,2BAAgB,mBALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI,oBAAC,WAAD;AAAa,QAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANJ,EAOI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoBQ,WAApB,CADJ,CAPJ,EAUI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKR,WAAtB;AAAmC,QAAA,KAAK,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAVJ,CADJ;AAkBH;;;;EApEyBf,KAAK,CAAC2B,S;;AAuEpC,eAAenB,eAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass AuthErrorDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            error: null\n        };\n\n        this.handleAuthError = this.handleAuthError.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n    }\n\n    componentDidMount() {\n        TdLibController.on('tdlib_auth_error', this.handleAuthError);\n    }\n\n    componentWillUnmount() {\n        TdLibController.off('tdlib_auth_error', this.handleAuthError);\n    }\n\n    handleAuthError(error) {\n        this.setState({\n            open: true,\n            error: error\n        });\n    }\n\n    handleClose() {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleKeyDown(e) {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            this.handleClose();\n        }\n    }\n\n    render() {\n        let errorString = null;\n        if (this.state.error && this.state.error['@type'] === 'error' && this.state.error.message) {\n            errorString = this.state.error.message;\n        } else {\n            errorString = JSON.stringify(this.state.error);\n        }\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onKeyDown={this.handleKeyDown}\n                onClose={this.handleClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>Error</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{errorString}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default AuthErrorDialog;\n"]},"metadata":{},"sourceType":"module"}