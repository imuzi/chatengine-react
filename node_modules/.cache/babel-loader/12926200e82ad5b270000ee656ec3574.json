{"ast":null,"code":"import _defineProperty from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Additional/VirtualizedList.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar style = {\n  listWrapper: function listWrapper(height) {\n    return {\n      height: height,\n      position: 'relative'\n    };\n  },\n  item: function item(index, height) {\n    return {\n      height: height,\n      left: 0,\n      right: 0,\n      top: height * index,\n      position: 'absolute'\n    };\n  }\n};\nexport var VirtualizedList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(VirtualizedList, _React$Component);\n\n  function VirtualizedList(props) {\n    var _this;\n\n    _classCallCheck(this, VirtualizedList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VirtualizedList).call(this, props));\n\n    _this.setViewportHeight = function () {\n      var source = _this.props.source;\n      var scrollTop = _this.state.scrollTop;\n      var current = _this.listRef.current;\n      if (!current) return;\n      var viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n\n      var renderIds = _this.getRenderIds(source, viewportHeight, scrollTop); // console.log('[vl] setViewportHeight');\n\n\n      _this.setState(_objectSpread({\n        viewportHeight: viewportHeight\n      }, renderIds));\n    };\n\n    _this.setScrollPosition = function (event) {\n      var _this$props = _this.props,\n          source = _this$props.source,\n          rowHeight = _this$props.rowHeight,\n          onScroll = _this$props.onScroll;\n      var _this$state = _this.state,\n          viewportHeight = _this$state.viewportHeight,\n          scrollTop = _this$state.scrollTop;\n\n      if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n        var renderIds = _this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n        _this.setState(_objectSpread({\n          scrollTop: event.target.scrollTop\n        }, renderIds));\n      }\n\n      if (onScroll) {\n        onScroll(event);\n      }\n    };\n\n    _this.isVisibleItem = function (index, viewportHeight, scrollTop) {\n      var _this$props2 = _this.props,\n          overScanCount = _this$props2.overScanCount,\n          rowHeight = _this$props2.rowHeight;\n      var itemTop = index * rowHeight;\n      var itemBottom = (index + 1) * rowHeight;\n      return itemTop > scrollTop - overScanCount * rowHeight && itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight;\n    };\n\n    _this.listRef = React.createRef();\n    _this.state = {\n      scrollTop: 0,\n      renderIds: new Map(),\n      renderIdsList: [],\n      viewportHeight: 0\n    };\n    return _this;\n  }\n\n  _createClass(VirtualizedList, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      if (prevProps.source !== this.props.source) {\n        this.setViewportHeight();\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState, nextContext) {\n      return true; // const { renderIds } = this.state;\n      // const { renderIds: nextRenderIds } = nextState;\n      //\n      // if (renderIds.size === nextRenderIds.size) {\n      //     renderIds.forEach((value, key) => {\n      //         if (!nextRenderIds.has(key)) {\n      //             return true;\n      //         }\n      //     });\n      //\n      //     return false;\n      // }\n      //\n      // return true;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('resize', this.setViewportHeight, true);\n      var current = this.listRef.current;\n      if (!current) return;\n      current.addEventListener('scroll', this.setScrollPosition, true);\n      this.setViewportHeight();\n    }\n  }, {\n    key: \"getRenderIds\",\n    value: function getRenderIds(source, viewportHeight, scrollTop) {\n      var _this2 = this;\n\n      var renderIds = new Map();\n      var renderIdsList = [];\n      source.forEach(function (item, index) {\n        if (_this2.isVisibleItem(index, viewportHeight, scrollTop)) {\n          renderIds.set(index, index);\n          renderIdsList.push(index);\n        }\n      });\n      return {\n        renderIds: renderIds,\n        renderIdsList: renderIdsList\n      };\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.setViewportHeight);\n      var current = this.listRef.current;\n      if (!current) return;\n      current.removeEventListener('scroll', this.setScrollPosition);\n    }\n  }, {\n    key: \"getListRenderIds\",\n    value: function getListRenderIds() {\n      var renderIds = this.state.renderIds;\n      return renderIds;\n    }\n  }, {\n    key: \"getListRef\",\n    value: function getListRef() {\n      return this.listRef;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          className = _this$props3.className,\n          source = _this$props3.source,\n          renderItem = _this$props3.renderItem,\n          rowHeight = _this$props3.rowHeight;\n      var renderIds = this.state.renderIds;\n      var items = (source || []).map(function (item, index) {\n        return renderIds.has(index) && renderItem({\n          index: index,\n          style: style.item(index, rowHeight)\n        });\n      }); // console.log('[vl] render', source, renderIds);\n\n      return React.createElement(\"div\", {\n        ref: this.listRef,\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: style.listWrapper((source || []).length * rowHeight),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, items));\n    }\n  }]);\n\n  return VirtualizedList;\n}(React.Component);\nVirtualizedList.defaultProps = {\n  source: [],\n  rowHeight: 72,\n  overScanCount: 5\n};\nVirtualizedList.propTypes = {\n  renderItem: PropTypes.func,\n  onScroll: PropTypes.func,\n  rowHeight: PropTypes.number,\n  className: PropTypes.string,\n  source: PropTypes.array.isRequired,\n  overScanCount: PropTypes.number.isRequired\n};\nexport default VirtualizedList;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Additional/VirtualizedList.js"],"names":["React","PropTypes","style","listWrapper","height","position","item","index","left","right","top","VirtualizedList","props","setViewportHeight","source","scrollTop","state","current","listRef","viewportHeight","parseFloat","window","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setState","setScrollPosition","event","rowHeight","onScroll","Math","abs","target","isVisibleItem","overScanCount","itemTop","itemBottom","createRef","Map","renderIdsList","prevProps","prevState","snapshot","nextProps","nextState","nextContext","addEventListener","forEach","set","push","removeEventListener","className","renderItem","items","map","has","length","Component","defaultProps","propTypes","func","number","string","array","isRequired"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={className}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>{items}</div>\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n"]},"metadata":{},"sourceType":"module"}