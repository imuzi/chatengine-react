{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Tile/ReplyTile.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nvar ReplyTile =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReplyTile, _React$Component);\n\n  function ReplyTile() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ReplyTile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ReplyTile)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onClientUpdatePhotoBlob = function (update) {\n      var _this$props = _this.props,\n          chatId = _this$props.chatId,\n          messageId = _this$props.messageId,\n          photoSize = _this$props.photoSize;\n      if (!photoSize) return;\n      var photo = photoSize.photo;\n      if (!photo) return;\n\n      if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n        _this.forceUpdate();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ReplyTile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n      FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n      FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n      FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n      FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n      FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n      FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n      FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n      FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n      FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n      FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n      FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n      FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          chatId = _this$props2.chatId,\n          messageId = _this$props2.messageId,\n          photoSize = _this$props2.photoSize,\n          minithumbnail = _this$props2.minithumbnail;\n      if (!photoSize) return null;\n      var photo = photoSize.photo;\n      if (!photo) return null;\n      var miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n      var src = getSrc(photo);\n      var isBlurred = !src && miniSrc || isBlurredThumbnail(photoSize);\n      var isVideoNote = hasVideoNote(chatId, messageId);\n      var hasSrc = Boolean(src || miniSrc);\n      return React.createElement(\"div\", {\n        className: \"reply-tile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, hasSrc && React.createElement(\"img\", {\n        className: classNames('reply-tile-photo', {\n          'reply-tile-photo-round': isVideoNote\n        }, {\n          'reply-tile-photo-loading': !src\n        }, {\n          'media-blurred': src && isBlurred\n        }, {\n          'media-mini-blurred': !src && miniSrc && isBlurred\n        }),\n        draggable: false,\n        src: src || miniSrc,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ReplyTile;\n}(React.Component);\n\nReplyTile.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  messageId: PropTypes.number.isRequired,\n  photoSize: PropTypes.object,\n  minithumbnail: PropTypes.object\n};\nexport default ReplyTile;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Tile/ReplyTile.js"],"names":["React","PropTypes","classNames","getSrc","isBlurredThumbnail","hasVideoNote","FileStore","ReplyTile","onClientUpdatePhotoBlob","update","props","chatId","messageId","photoSize","photo","fileId","id","forceUpdate","on","off","minithumbnail","miniSrc","data","src","isBlurred","isVideoNote","hasSrc","Boolean","Component","propTypes","number","isRequired","object"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n"]},"metadata":{},"sourceType":"module"}