{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toArray from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray\";\nimport _asyncToGenerator from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnMiddle/InputBox.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { PHOTO_SIZE } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nvar EmojiPickerButton = React.lazy(function () {\n  return import('./../ColumnMiddle/EmojiPickerButton');\n});\n\nvar InputBox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InputBox, _Component);\n\n  function InputBox(props) {\n    var _this;\n\n    _classCallCheck(this, InputBox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InputBox).call(this, props));\n\n    _this.selectionChangeListener = function () {\n      // console.log('[ed] selectionchange', document.activeElement);\n      if (document.activeElement === _this.newMessageRef.current) {\n        _this.saveSelection();\n      }\n    };\n\n    _this.onClientUpdateSendFiles = function (update) {\n      var files = update.files;\n      if (!files) return;\n\n      _this.handleSendFiles(Array.from(files));\n    };\n\n    _this.onUpdateDeleteMessages = function (update) {\n      var _this$state = _this.state,\n          chatId = _this$state.chatId,\n          editMessageId = _this$state.editMessageId;\n      var chat_id = update.chat_id,\n          message_ids = update.message_ids,\n          is_permanent = update.is_permanent;\n      if (!editMessageId) return;\n      if (!is_permanent) return;\n      if (chatId !== chat_id) return;\n      if (message_ids.indexOf(editMessageId) === -1) return;\n\n      _this.handleCancel();\n    };\n\n    _this.onClientUpdateEditMessage = function (update) {\n      var chatId = update.chatId,\n          messageId = update.messageId;\n      if (_this.state.chatId !== chatId) return;\n\n      if (!messageId) {\n        _this.restoreDraftAndSelection();\n      } else {\n        _this.saveDraftAndSelection();\n      }\n\n      var openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n\n      _this.setState({\n        editMessageId: messageId,\n        openEditMedia: openEditMedia\n      }, function () {\n        if (!_this.state.openEditMedia) {\n          _this.setEditMessage();\n\n          _this.handleInput();\n\n          setTimeout(function () {\n            _this.focusInput();\n          }, 0);\n        }\n      });\n    };\n\n    _this.onClientUpdateFocusWindow = function (update) {\n      var focused = update.focused;\n      if (focused) return;\n\n      _this.saveDraft();\n    };\n\n    _this.onUpdateChatDraftMessage = function (update) {\n      var chat_id = update.chat_id;\n      var chatId = _this.state.chatId;\n      if (chatId !== chat_id) return;\n\n      _this.loadDraft();\n    };\n\n    _this.onClientUpdateStickerSend = function (update) {\n      var item = update.sticker;\n      if (!item) return;\n      var sticker = item.sticker,\n          thumbnail = item.thumbnail,\n          width = item.width,\n          height = item.height;\n      if (!sticker) return;\n      var element = _this.newMessageRef.current;\n      if (!element) return;\n      element.innerText = null;\n\n      _this.restoreSelection();\n\n      var content = {\n        '@type': 'inputMessageSticker',\n        sticker: {\n          '@type': 'inputFileId',\n          id: sticker.id\n        },\n        width: width,\n        height: height\n      };\n\n      if (thumbnail) {\n        var thumbnailWidth = thumbnail.width,\n            thumbnailHeight = thumbnail.height,\n            photo = thumbnail.photo;\n        content.thumbnail = {\n          thumbnail: {\n            '@type': 'inputFileId',\n            id: photo.id\n          },\n          width: thumbnailWidth,\n          height: thumbnailHeight\n        };\n      }\n\n      _this.sendMessage(content, false, function (result) {});\n\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateLocalStickersHint',\n        hint: null\n      });\n    };\n\n    _this.onClientUpdateReply = function (update) {\n      var currentChatId = _this.state.chatId;\n      var chatId = update.chatId,\n          messageId = update.messageId;\n\n      if (currentChatId !== chatId) {\n        return;\n      }\n\n      _this.setState({\n        replyToMessageId: messageId\n      });\n\n      if (messageId) {\n        _this.setInputFocus();\n      }\n    };\n\n    _this.onClientUpdateChatId = function (update) {\n      var chatId = _this.state.chatId;\n      if (chatId === update.nextChatId) return;\n\n      _this.saveDraft();\n\n      _this.beforeEditText = null;\n\n      _this.setState({\n        chatId: update.nextChatId,\n        replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n        editMessageId: 0,\n        openEditUrl: false\n      }, function () {\n        _this.loadDraft();\n      });\n    };\n\n    _this.setDraft = function () {\n      var chatId = _this.state.chatId;\n      var element = _this.newMessageRef.current;\n      var formattedText = getChatDraft(chatId);\n\n      if (formattedText) {\n        _this.setFormattedText(formattedText);\n\n        _this.setState({\n          replyToMessageId: getChatDraftReplyToMessageId(chatId)\n        });\n      } else {\n        element.innerText = null;\n      }\n    };\n\n    _this.setInputFocus = function () {\n      setTimeout(function () {\n        var element = _this.newMessageRef.current;\n        focusInput(element);\n      }, 100);\n    };\n\n    _this.setChatDraftMessage = function (chatDraftMessage) {\n      if (!chatDraftMessage) return;\n      var chatId = chatDraftMessage.chatId,\n          draftMessage = chatDraftMessage.draftMessage;\n      if (!chatId) return;\n      TdLibController.send({\n        '@type': 'setChatDraftMessage',\n        chat_id: chatId,\n        draft_message: draftMessage\n      });\n    };\n\n    _this.getDraftMessage = function (chatId, replyToMessageId, innerHTML) {\n      var chat = ChatStore.get(chatId);\n      if (!chat) return;\n      var draft_message = chat.draft_message;\n\n      var _getEntities = getEntities(innerHTML),\n          text = _getEntities.text,\n          entities = _getEntities.entities;\n\n      var draftMessage = text && text.length > 0 || entities.length > 0 ? {\n        '@type': 'draftMessage',\n        reply_to_message_id: replyToMessageId,\n        input_message_text: {\n          '@type': 'inputMessageText',\n          text: {\n            '@type': 'formattedText',\n            text: text,\n            entities: entities\n          },\n          disable_web_page_preview: false,\n          clear_draft: false\n        }\n      } : null;\n\n      if (draftEquals(draft_message, draftMessage)) {\n        return null;\n      }\n\n      return {\n        chatId: chatId,\n        draftMessage: draftMessage\n      };\n    };\n\n    _this.handleSubmit = function () {\n      var _this$state2 = _this.state,\n          chatId = _this$state2.chatId,\n          editMessageId = _this$state2.editMessageId;\n      var element = _this.newMessageRef.current;\n      if (!element) return;\n      var innerHTML = element.innerHTML;\n      element.innerText = null;\n\n      _this.handleInput();\n\n      editMessage(chatId, 0);\n      if (!innerHTML) return;\n      if (!innerHTML.trim()) return;\n\n      var _getEntities2 = getEntities(innerHTML),\n          text = _getEntities2.text,\n          entities = _getEntities2.entities;\n\n      var formattedText = {\n        '@type': 'formattedText',\n        text: text,\n        entities: entities\n      };\n      var inputContent = {\n        '@type': 'inputMessageText',\n        text: formattedText,\n        disable_web_page_preview: false,\n        clear_draft: true\n      };\n\n      if (editMessageId) {\n        var editedMessage = MessageStore.get(chatId, editMessageId);\n        if (!editedMessage) return;\n        var content = editedMessage.content;\n        if (!content) return;\n        var _text = content.text,\n            caption = content.caption;\n\n        if (_text) {\n          _this.editMessageText(inputContent, function (result) {});\n        } else if (caption) {\n          _this.editMessageCaption(formattedText);\n        }\n      } else {\n        _this.sendMessage(inputContent, false, function (result) {});\n      }\n    };\n\n    _this.handleAttachPoll = function () {\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateNewPoll'\n      });\n    };\n\n    _this.handleAttachPhoto = function () {\n      if (!_this.attachPhotoRef) return;\n\n      _this.attachPhotoRef.current.click();\n    };\n\n    _this.handleAttachPhotoComplete =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var files, _Array$from, _Array$from2, newFile, rest, newItem;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              files = _this.attachPhotoRef.current.files;\n\n              if (!(files.length === 0)) {\n                _context2.next = 3;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 3:\n              if (!(files.length === 1)) {\n                _context2.next = 13;\n                break;\n              }\n\n              _Array$from = Array.from(files), _Array$from2 = _toArray(_Array$from), newFile = _Array$from2[0], rest = _Array$from2.slice(1);\n\n              if (newFile) {\n                _context2.next = 7;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 7:\n              _context2.next = 9;\n              return _this.getNewItem(newFile, true);\n\n            case 9:\n              newItem = _context2.sent;\n\n              _this.setState({\n                openEditMedia: true,\n                newItem: newItem\n              });\n\n              _context2.next = 14;\n              break;\n\n            case 13:\n              Array.from(files).forEach(\n              /*#__PURE__*/\n              function () {\n                var _ref2 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee(file) {\n                  var _ref3, _ref4, width, height, content;\n\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return readImageSize(file);\n\n                        case 2:\n                          _ref3 = _context.sent;\n                          _ref4 = _slicedToArray(_ref3, 2);\n                          width = _ref4[0];\n                          height = _ref4[1];\n                          content = {\n                            '@type': 'inputMessagePhoto',\n                            photo: {\n                              '@type': 'inputFileBlob',\n                              name: file.name,\n                              size: file.size,\n                              data: file\n                            },\n                            width: width,\n                            height: height\n                          };\n\n                          _this.handleSendPhoto(content, file);\n\n                        case 8:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n\n            case 14:\n              _this.attachPhotoRef.current.value = '';\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    _this.handleAttachDocument = function () {\n      if (!_this.attachDocumentRef) return;\n\n      _this.attachDocumentRef.current.click();\n    };\n\n    _this.handleAttachDocumentComplete =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var files, _Array$from3, _Array$from4, newFile, rest, newItem;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              files = _this.attachDocumentRef.current.files;\n\n              if (!(files.length === 0)) {\n                _context3.next = 3;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 3:\n              if (!(files.length === 1)) {\n                _context3.next = 13;\n                break;\n              }\n\n              _Array$from3 = Array.from(files), _Array$from4 = _toArray(_Array$from3), newFile = _Array$from4[0], rest = _Array$from4.slice(1);\n\n              if (newFile) {\n                _context3.next = 7;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 7:\n              _context3.next = 9;\n              return _this.getNewItem(newFile, false);\n\n            case 9:\n              newItem = _context3.sent;\n\n              _this.setState({\n                openEditMedia: true,\n                newItem: newItem\n              });\n\n              _context3.next = 14;\n              break;\n\n            case 13:\n              Array.from(files).forEach(function (file) {\n                var content = {\n                  '@type': 'inputMessageDocument',\n                  document: {\n                    '@type': 'inputFileBlob',\n                    name: file.name,\n                    size: file.size,\n                    data: file\n                  }\n                };\n\n                _this.handleSendDocument(content, file);\n              });\n\n            case 14:\n              _this.attachDocumentRef.current.value = '';\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    _this.handleClear = function () {\n      document.execCommand('removeFormat', false, null);\n      document.execCommand('unlink', false, null);\n    };\n\n    _this.handleBold = function () {\n      document.execCommand('removeFormat', false, null);\n      document.execCommand('unlink', false, null);\n      document.execCommand('bold', false, null);\n    };\n\n    _this.handleItalic = function () {\n      document.execCommand('removeFormat', false, null);\n      document.execCommand('unlink', false, null);\n      document.execCommand('italic', false, null);\n    };\n\n    _this.handleMono = function () {\n      document.execCommand('removeFormat', false, null);\n      document.execCommand('unlink', false, null);\n      var text = '';\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          selection = _assertThisInitialize.selection;\n\n      if (selection && !selection.isCollapsed) {\n        text = selection.toString();\n      }\n\n      if (!text) return;\n      text = \"<code>\".concat(text, \"</code>\");\n      document.execCommand('removeFormat', false, null);\n      document.execCommand('insertHTML', false, text);\n    };\n\n    _this.handleUnderline = function () {\n      document.execCommand('removeFormat', false, null);\n      document.execCommand('unlink', false, null);\n      document.execCommand('underline', false, null);\n    };\n\n    _this.handleStrikeThrough = function () {\n      document.execCommand('removeFormat', false, null);\n      document.execCommand('unlink', false, null);\n      document.execCommand('strikeThrough', false, null);\n    };\n\n    _this.handleUrl = function () {\n      _this.openEditUrlDialog();\n    };\n\n    _this.handleCancel = function () {\n      var _this$state3 = _this.state,\n          chatId = _this$state3.chatId,\n          editMessageId = _this$state3.editMessageId,\n          replyToMessageId = _this$state3.replyToMessageId;\n\n      if (editMessageId) {\n        editMessage(chatId, 0);\n      } else if (replyToMessageId) {\n        replyMessage(chatId, 0);\n      }\n    };\n\n    _this.handleKeyDown = function (event) {\n      var altKey = event.altKey,\n          ctrlKey = event.ctrlKey,\n          keyCode = event.keyCode,\n          metaKey = event.metaKey,\n          repeat = event.repeat,\n          shiftKey = event.shiftKey; // console.log('[k] handleKeyDown', altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey);\n\n      switch (keyCode) {\n        // enter\n        case 13:\n          {\n            if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n              if (!repeat) _this.handleSubmit();\n              event.preventDefault();\n              event.stopPropagation();\n            }\n\n            break;\n          }\n        // esc\n\n        case 27:\n          {\n            if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n              if (!repeat) _this.handleCancel();\n              event.preventDefault();\n              event.stopPropagation();\n            }\n\n            break;\n          }\n        // arrow up\n\n        case 38:\n          {\n            if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n              var element = _this.newMessageRef.current;\n\n              if (element && !element.innerText) {\n                var editMessageId = _this.state.editMessageId;\n                if (editMessageId) return;\n                TdLibController.clientUpdate({\n                  '@type': 'clientUpdateTryEditMessage'\n                });\n                event.preventDefault();\n                event.stopPropagation();\n              }\n            }\n\n            break;\n          }\n        // cmd + b\n\n        case 66:\n          {\n            if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n              if (!repeat) _this.handleBold();\n              event.preventDefault();\n              event.stopPropagation();\n            }\n\n            break;\n          }\n        // cmd + i\n\n        case 73:\n          {\n            if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n              if (!repeat) _this.handleItalic();\n              event.preventDefault();\n              event.stopPropagation();\n            }\n\n            break;\n          }\n\n        case 75:\n          {\n            // cmd + k\n            if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n              if (!repeat) _this.handleUrl();\n              event.preventDefault();\n              event.stopPropagation();\n            } // alt + cmd + k\n            else if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                if (!repeat) _this.handleMono();\n                event.preventDefault();\n                event.stopPropagation();\n              }\n\n            break;\n          }\n        // alt + cmd + n\n\n        case 192:\n          {\n            if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n              if (!repeat) _this.handleClear();\n              event.preventDefault();\n              event.stopPropagation();\n            }\n\n            break;\n          }\n      }\n    };\n\n    _this.handleSendPhoto = function (content, file) {\n      if (!content) return;\n\n      _this.sendMessage(content, true, function (result) {\n        var cachedMessage = MessageStore.get(result.chat_id, result.id);\n\n        if (cachedMessage != null) {\n          _this.handleSendingMessage(cachedMessage, file);\n        }\n\n        FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n      });\n    };\n\n    _this.handleSendPoll = function (poll) {\n      _this.sendMessage(poll, true, function () {});\n    };\n\n    _this.handleSendDocument = function (content, file) {\n      if (!content) return;\n\n      _this.sendMessage(content, true, function (result) {\n        return FileStore.uploadFile(result.content.document.document.id, result);\n      });\n    };\n\n    _this.handleSendAudio = function (content, file) {\n      if (!content) return;\n\n      _this.sendMessage(content, true, function (result) {\n        return FileStore.uploadFile(result.content.audio.audio.id, result);\n      });\n    };\n\n    _this.handlePaste =\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(event) {\n        var _ref7, items, files, plainText;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _ref7 = event.clipboardData || event.originalEvent.clipboardData, items = _ref7.items;\n\n                if (items) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 3:\n                files = [];\n                Array.from(items).forEach(function (item) {\n                  if (item.kind.indexOf('file') === 0) {\n                    var file = item.getAsFile();\n\n                    if (file) {\n                      files.push(file);\n                    }\n                  }\n                });\n\n                if (!(files.length > 0)) {\n                  _context4.next = 9;\n                  break;\n                }\n\n                event.preventDefault();\n\n                _this.handleSendFiles(files);\n\n                return _context4.abrupt(\"return\");\n\n              case 9:\n                plainText = event.clipboardData.getData('text/plain');\n\n                if (!plainText) {\n                  _context4.next = 14;\n                  break;\n                }\n\n                event.preventDefault();\n                document.execCommand('insertText', false, plainText);\n                return _context4.abrupt(\"return\");\n\n              case 14:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x2) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    _this.handlePasteConfirm = function () {\n      var files = _this.state.files;\n      if (!files) return;\n      if (!files.length) return;\n      files.forEach(function (file) {\n        var content = {\n          '@type': 'inputMessageDocument',\n          document: {\n            '@type': 'inputFileBlob',\n            name: file.name,\n            data: file\n          }\n        };\n\n        _this.handleSendDocument(content, file);\n      });\n\n      _this.handlePasteCancel();\n    };\n\n    _this.handlePasteCancel = function () {\n      _this.setState({\n        files: null\n      });\n    };\n\n    _this.handleUpdateDraftConfirm = function () {\n      var newDraft = _this.state.newDraft;\n      if (!newDraft) return;\n\n      _this.loadDraft();\n\n      _this.handleUpdateDraftCancel();\n    };\n\n    _this.handleUpdateDraftCancel = function () {\n      _this.setState({\n        newDraft: null\n      });\n    };\n\n    _this.handleSendingMessage = function (message, blob) {\n      if (!message) return;\n      var sending_state = message.sending_state,\n          content = message.content,\n          chat_id = message.chat_id,\n          id = message.id;\n      if (!sending_state) return;\n      if (sending_state['@type'] !== 'messageSendingStatePending') return;\n      if (content['@type'] !== 'messagePhoto') return;\n      var photo = content.photo;\n      if (!photo) return;\n      var size = getSize(photo.sizes, PHOTO_SIZE);\n      if (!size) return;\n      var file = size.photo;\n      if (!file) return;\n      if (file.blob) return;\n      file.blob = blob;\n      FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    _this.sendMessage =\n    /*#__PURE__*/\n    function () {\n      var _ref8 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(content, clearDraft, callback) {\n        var _this$state4, chatId, replyToMessageId, result;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _this$state4 = _this.state, chatId = _this$state4.chatId, replyToMessageId = _this$state4.replyToMessageId;\n\n                if (chatId) {\n                  _context5.next = 3;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\");\n\n              case 3:\n                if (content) {\n                  _context5.next = 5;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\");\n\n              case 5:\n                _context5.prev = 5;\n                _context5.next = 8;\n                return AppStore.invokeScheduledAction(\"clientUpdateClearHistory chatId=\".concat(chatId));\n\n              case 8:\n                _context5.next = 10;\n                return TdLibController.send({\n                  '@type': 'sendMessage',\n                  chat_id: chatId,\n                  reply_to_message_id: replyToMessageId,\n                  input_message_content: content\n                });\n\n              case 10:\n                result = _context5.sent;\n\n                _this.setState({\n                  replyToMessageId: 0\n                }, function () {\n                  if (clearDraft) {\n                    _this.saveDraft();\n                  }\n                }); //MessageStore.set(result);\n\n\n                TdLibController.send({\n                  '@type': 'viewMessages',\n                  chat_id: chatId,\n                  message_ids: [result.id]\n                });\n                callback(result);\n                _context5.next = 19;\n                break;\n\n              case 16:\n                _context5.prev = 16;\n                _context5.t0 = _context5[\"catch\"](5);\n                alert('sendMessage error ' + JSON.stringify(_context5.t0));\n\n              case 19:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[5, 16]]);\n      }));\n\n      return function (_x3, _x4, _x5) {\n        return _ref8.apply(this, arguments);\n      };\n    }();\n\n    _this.handleEmojiSelect = function (emoji) {\n      if (!emoji) return;\n\n      _this.restoreSelection();\n\n      document.execCommand('insertText', false, emoji.native);\n\n      _this.handleInput();\n    };\n\n    _this.handleInput =\n    /*#__PURE__*/\n    function () {\n      var _ref9 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(event) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _this.setTyping();\n\n                _this.setHints();\n\n              case 2:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x6) {\n        return _ref9.apply(this, arguments);\n      };\n    }();\n\n    _this.openEditUrlDialog = function () {\n      var defaultText = '';\n      var defaultUrl = '';\n\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          selection = _assertThisInitialize2.selection,\n          range = _assertThisInitialize2.range;\n\n      if (range) {\n        var startContainer = range.startContainer,\n            endContainer = range.endContainer;\n\n        if (startContainer === endContainer) {\n          var parentElement = startContainer.parentElement;\n\n          if (parentElement && parentElement.nodeName === 'A') {\n            defaultText = parentElement.innerText;\n            defaultUrl = parentElement.href;\n          }\n        }\n      }\n\n      if (!defaultText && selection && !selection.isCollapsed) {\n        defaultText = selection.toString();\n      }\n\n      _this.setState({\n        openEditUrl: true,\n        defaultUrl: defaultUrl,\n        defaultText: defaultText\n      });\n    };\n\n    _this.closeEditUrlDialog = function () {\n      _this.setState({\n        openEditUrl: false\n      }, function () {\n        _this.restoreSelection();\n      });\n    };\n\n    _this.focusInput = function () {\n      var element = _this.newMessageRef.current;\n      if (!element) return;\n\n      if (!element.childNodes.length) {\n        element.focus();\n        return;\n      }\n\n      var lastTextNode = findLastTextNode(element);\n\n      if (!lastTextNode) {\n        return;\n      }\n\n      var range = document.createRange();\n      range.setStart(lastTextNode, lastTextNode.length);\n      range.collapse(true);\n      var selection = window.getSelection();\n      selection.removeAllRanges();\n      selection.addRange(range);\n      element.focus();\n    };\n\n    _this.handleCancelEditUrl = function () {\n      _this.closeEditUrlDialog();\n    };\n\n    _this.handleDoneEditUrl = function (text, url) {\n      _this.closeEditUrlDialog();\n\n      setTimeout(function () {\n        // edit current link node\n        var _assertThisInitialize3 = _assertThisInitialized(_this),\n            range = _assertThisInitialize3.range;\n\n        if (range) {\n          var startContainer = range.startContainer,\n              endContainer = range.endContainer;\n\n          if (startContainer && startContainer === endContainer) {\n            var parentNode = startContainer.parentNode;\n\n            if (parentNode && parentNode.nodeName === 'A') {\n              parentNode.href = url;\n              parentNode.title = url;\n              parentNode.innerText = text; // move cursor to end of editing node\n\n              var lastChild = parentNode.lastChild;\n\n              if (lastChild) {\n                var _range = document.createRange();\n\n                _range.setStart(lastChild, lastChild.textContent.length);\n\n                _range.setEnd(lastChild, lastChild.textContent.length);\n\n                var selection = document.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(_range);\n              }\n\n              return;\n            }\n          }\n        } // replace selected text with new link node\n\n\n        var link = \"<a href=\".concat(url, \" title=\").concat(url, \" rel='noopener noreferrer' target='_blank'>\").concat(text, \"</a>\");\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, link);\n      }, 0);\n    };\n\n    _this.handleCancelEditMedia = function () {\n      _this.closeEditMediaDialog();\n    };\n\n    _this.handleEditMedia = function (caption, content) {\n      if (content) {\n        _this.editMessageMedia(content);\n\n        return;\n      }\n\n      _this.editMessageCaption(caption);\n    };\n\n    _this.handleSendMedia = function (content, file) {\n      _this.closeEditMediaDialog(false);\n\n      switch (content['@type']) {\n        case 'inputMessageAudio':\n          {\n            _this.handleSendAudio(content, file);\n\n            break;\n          }\n\n        case 'inputMessagePhoto':\n          {\n            _this.handleSendPhoto(content, file);\n\n            break;\n          }\n\n        case 'inputMessageDocument':\n          {\n            _this.handleSendDocument(content, file);\n\n            break;\n          }\n      }\n    };\n\n    _this.handleHeaderClick = function () {\n      setTimeout(function () {\n        return _this.restoreSelection();\n      }, 0);\n    };\n\n    _this.attachDocumentRef = React.createRef();\n    _this.attachPhotoRef = React.createRef();\n    _this.newMessageRef = React.createRef();\n\n    var _chatId = AppStore.getChatId();\n\n    _this.state = {\n      chatId: _chatId,\n      replyToMessageId: getChatDraftReplyToMessageId(_chatId),\n      editMessageId: 0,\n      sendFile: null\n    };\n    document.execCommand('defaultParagraphSeparator', false, 'br');\n    return _this;\n  }\n\n  _createClass(InputBox, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      var t = this.props.t;\n      var _this$state5 = this.state,\n          chatId = _this$state5.chatId,\n          newDraft = _this$state5.newDraft,\n          files = _this$state5.files,\n          replyToMessageId = _this$state5.replyToMessageId,\n          editMessageId = _this$state5.editMessageId,\n          openEditMedia = _this$state5.openEditMedia,\n          openEditUrl = _this$state5.openEditUrl,\n          sendFile = _this$state5.sendFile;\n\n      if (nextProps.t !== t) {\n        return true;\n      }\n\n      if (nextState.chatId !== chatId) {\n        return true;\n      }\n\n      if (nextState.newDraft !== newDraft) {\n        return true;\n      }\n\n      if (nextState.files !== files) {\n        return true;\n      }\n\n      if (nextState.replyToMessageId !== replyToMessageId) {\n        return true;\n      }\n\n      if (nextState.editMessageId !== editMessageId) {\n        return true;\n      }\n\n      if (nextState.sendFile !== sendFile) {\n        return true;\n      }\n\n      if (nextState.openEditUrl !== openEditUrl) {\n        return true;\n      }\n\n      if (nextState.openEditMedia !== openEditMedia) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"loadDraft\",\n    value: function loadDraft() {\n      this.setDraft();\n      this.setInputFocus();\n      this.handleInput();\n    }\n  }, {\n    key: \"saveDraft\",\n    value: function saveDraft() {\n      var _this$state6 = this.state,\n          chatId = _this$state6.chatId,\n          editMessageId = _this$state6.editMessageId,\n          replyToMessageId = _this$state6.replyToMessageId;\n      var element = this.newMessageRef.current;\n      if (!element) return;\n      var innerHTML = null;\n\n      if (editMessageId) {\n        innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n      } else {\n        innerHTML = element.innerHTML;\n      }\n\n      var draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n      this.setChatDraftMessage(draftMessage);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('selectionchange', this.selectionChangeListener, true);\n      AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n      AppStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n      AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n      ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n      FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n      MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n      MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n      StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n      this.loadDraft();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.saveDraft();\n      AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n      AppStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n      AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n      ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n      FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n      MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n      MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n      StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n      document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n    }\n  }, {\n    key: \"restoreDraftAndSelection\",\n    value: function restoreDraftAndSelection() {\n      var element = this.newMessageRef.current;\n      if (!element) return;\n      var beforeEditText = this.beforeEditText;\n\n      if (beforeEditText) {\n        element.innerHTML = beforeEditText.innerHTML;\n\n        if (!beforeEditText.range) {\n          this.focusInput();\n          return;\n        }\n\n        var selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(beforeEditText.range);\n        element.focus();\n      } else {\n        element.innerHTML = null;\n        this.focusInput();\n      }\n\n      this.handleInput();\n    }\n  }, {\n    key: \"saveDraftAndSelection\",\n    value: function saveDraftAndSelection() {\n      var element = this.newMessageRef.current;\n      if (!element) return;\n      this.beforeEditText = {\n        innerHTML: element.innerHTML,\n        range: this.range\n      };\n    }\n  }, {\n    key: \"setEditMessage\",\n    value: function setEditMessage() {\n      var _this$state7 = this.state,\n          chatId = _this$state7.chatId,\n          editMessageId = _this$state7.editMessageId;\n      var message = MessageStore.get(chatId, editMessageId);\n      if (!message) return;\n      var content = message.content;\n      if (!content) return;\n      var text = content.text,\n          caption = content.caption;\n      if (!text && !caption) return;\n      var element = this.newMessageRef.current;\n\n      if (text) {\n        this.setFormattedText(text);\n      } else if (caption) {\n        this.setFormattedText(caption);\n      } else {\n        element.innerText = null;\n      }\n    }\n  }, {\n    key: \"setFormattedText\",\n    value: function setFormattedText(formattedText) {\n      var t = this.props.t;\n      var element = this.newMessageRef.current;\n\n      if (!formattedText) {\n        element.innerText = null;\n        return;\n      }\n\n      var text = formattedText.text,\n          entities = formattedText.entities;\n\n      try {\n        var nodes = getNodes(text, entities, t);\n        element.innerHTML = null;\n        nodes.forEach(function (x) {\n          element.appendChild(x);\n        });\n      } catch (e) {\n        element.innerText = text;\n      }\n    }\n  }, {\n    key: \"getNewItem\",\n    value: function () {\n      var _getNewItem = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(file, sendAsFile) {\n        var caption, media;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (file) {\n                  _context7.next = 2;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", null);\n\n              case 2:\n                caption = this.newMessageRef.current.innerHTML;\n\n                if (caption) {\n                  this.newMessageRef.current.innerHTML = null;\n                  this.handleInput();\n                }\n\n                if (!sendAsFile) {\n                  _context7.next = 10;\n                  break;\n                }\n\n                _context7.next = 7;\n                return getMediaPhotoFromFile(file);\n\n              case 7:\n                _context7.t0 = _context7.sent;\n                _context7.next = 13;\n                break;\n\n              case 10:\n                _context7.next = 12;\n                return getMediaDocumentFromFile(file);\n\n              case 12:\n                _context7.t0 = _context7.sent;\n\n              case 13:\n                media = _context7.t0;\n                return _context7.abrupt(\"return\", {\n                  file: file,\n                  media: media,\n                  caption: caption\n                });\n\n              case 15:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function getNewItem(_x7, _x8) {\n        return _getNewItem.apply(this, arguments);\n      }\n\n      return getNewItem;\n    }()\n  }, {\n    key: \"setTyping\",\n    value: function setTyping() {\n      var _this$state8 = this.state,\n          chatId = _this$state8.chatId,\n          editMessageId = _this$state8.editMessageId;\n      var chat = ChatStore.get(chatId);\n      if (!chat) return;\n      var element = this.newMessageRef.current;\n      if (!element) return;\n      var innerHTML = element.innerHTML;\n\n      if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n        element.innerHTML = null;\n      }\n\n      var innerText = element.innerText;\n      if (!innerText) return;\n      if (isMeChat(chatId)) return;\n      if (editMessageId) return;\n      var typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n      typingManager.setTyping({\n        '@type': 'chatActionTyping'\n      });\n    }\n  }, {\n    key: \"setHints\",\n    value: function setHints() {\n      var editMessageId = this.state.editMessageId;\n      var innerText = this.newMessageRef.current.innerText;\n\n      if (!innerText || innerText.length > 11 || editMessageId) {\n        var hint = StickerStore.hint;\n\n        if (hint) {\n          TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n          });\n        }\n\n        return;\n      }\n\n      var t0 = performance.now();\n      var regex = emojiRegex();\n      var match = regex.exec(innerText);\n      var t1 = performance.now(); // console.log('Matched ' + (t1 - t0) + 'ms', match);\n\n      if (!match || innerText !== match[0]) {\n        var _hint = StickerStore.hint;\n\n        if (_hint) {\n          TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n          });\n        }\n\n        return;\n      }\n\n      var timestamp = Date.now();\n      TdLibController.send({\n        '@type': 'getStickers',\n        emoji: match[0],\n        limit: 100\n      }).then(function (stickers) {\n        TdLibController.clientUpdate({\n          '@type': 'clientUpdateLocalStickersHint',\n          hint: {\n            timestamp: timestamp,\n            emoji: match[0],\n            stickers: stickers\n          }\n        });\n      });\n      TdLibController.send({\n        '@type': 'searchStickers',\n        emoji: match[0],\n        limit: 100\n      }).then(function (stickers) {\n        TdLibController.clientUpdate({\n          '@type': 'clientUpdateRemoteStickersHint',\n          hint: {\n            timestamp: timestamp,\n            emoji: match[0],\n            stickers: stickers\n          }\n        });\n      });\n    }\n  }, {\n    key: \"handleSendFiles\",\n    value: function () {\n      var _handleSendFiles = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8(files) {\n        var newItem;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (files) {\n                  _context8.next = 2;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\");\n\n              case 2:\n                if (files.length) {\n                  _context8.next = 4;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\");\n\n              case 4:\n                if (!(files.length === 1)) {\n                  _context8.next = 13;\n                  break;\n                }\n\n                _context8.next = 7;\n                return this.getNewItem(files[0], files[0].type.startsWith('image'));\n\n              case 7:\n                newItem = _context8.sent;\n\n                if (newItem) {\n                  _context8.next = 10;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\");\n\n              case 10:\n                this.setState({\n                  openEditMedia: true,\n                  newItem: newItem\n                });\n                _context8.next = 14;\n                break;\n\n              case 13:\n                this.setState({\n                  files: files\n                });\n\n              case 14:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function handleSendFiles(_x9) {\n        return _handleSendFiles.apply(this, arguments);\n      }\n\n      return handleSendFiles;\n    }()\n  }, {\n    key: \"editMessageMedia\",\n    value: function editMessageMedia(content) {\n      var _this$state9 = this.state,\n          chatId = _this$state9.chatId,\n          editMessageId = _this$state9.editMessageId; // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n      if (!chatId) return;\n      if (!editMessageId) return;\n      if (!content) return;\n      TdLibController.send({\n        '@type': 'editMessageMedia',\n        chat_id: chatId,\n        message_id: editMessageId,\n        input_message_content: content\n      });\n    }\n  }, {\n    key: \"editMessageCaption\",\n    value: function editMessageCaption(caption) {\n      var _this$state10 = this.state,\n          chatId = _this$state10.chatId,\n          editMessageId = _this$state10.editMessageId;\n      if (!chatId) return;\n      if (!editMessageId) return;\n      if (!caption) return;\n      TdLibController.send({\n        '@type': 'editMessageCaption',\n        chat_id: chatId,\n        message_id: editMessageId,\n        caption: caption\n      });\n    }\n  }, {\n    key: \"editMessageText\",\n    value: function () {\n      var _editMessageText = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9(content, callback) {\n        var _this$state11, chatId, editMessageId, result;\n\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _this$state11 = this.state, chatId = _this$state11.chatId, editMessageId = _this$state11.editMessageId;\n\n                if (chatId) {\n                  _context9.next = 3;\n                  break;\n                }\n\n                return _context9.abrupt(\"return\");\n\n              case 3:\n                if (editMessageId) {\n                  _context9.next = 5;\n                  break;\n                }\n\n                return _context9.abrupt(\"return\");\n\n              case 5:\n                if (content) {\n                  _context9.next = 7;\n                  break;\n                }\n\n                return _context9.abrupt(\"return\");\n\n              case 7:\n                _context9.prev = 7;\n                _context9.next = 10;\n                return TdLibController.send({\n                  '@type': 'editMessageText',\n                  chat_id: chatId,\n                  message_id: editMessageId,\n                  input_message_content: content\n                });\n\n              case 10:\n                result = _context9.sent;\n                callback(result);\n\n              case 12:\n                _context9.prev = 12;\n                return _context9.finish(12);\n\n              case 14:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this, [[7,, 12, 14]]);\n      }));\n\n      function editMessageText(_x10, _x11) {\n        return _editMessageText.apply(this, arguments);\n      }\n\n      return editMessageText;\n    }()\n  }, {\n    key: \"saveSelection\",\n    value: function saveSelection() {\n      this.selection = document.getSelection();\n      if (!this.selection) return;\n      if (!this.selection.rangeCount) return;\n      this.range = this.selection.getRangeAt(0);\n    }\n  }, {\n    key: \"restoreSelection\",\n    value: function restoreSelection() {\n      var range = this.range;\n\n      if (!range) {\n        this.focusInput();\n        return;\n      }\n\n      var selection = document.getSelection();\n      selection.removeAllRanges();\n      selection.addRange(range);\n      this.newMessageRef.current.focus();\n    }\n  }, {\n    key: \"closeEditMediaDialog\",\n    value: function closeEditMediaDialog() {\n      var _this2 = this;\n\n      var cancel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var newItem = this.state.newItem;\n      this.setState({\n        openEditMedia: false,\n        newItem: null\n      }, function () {\n        if (cancel && newItem && newItem.caption) {\n          _this2.newMessageRef.current.innerHTML = newItem.caption;\n\n          _this2.focusInput();\n\n          _this2.handleInput();\n        } else {\n          _this2.restoreSelection();\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var t = this.props.t;\n      var _this$state12 = this.state,\n          chatId = _this$state12.chatId,\n          editMessageId = _this$state12.editMessageId,\n          newItem = _this$state12.newItem,\n          replyToMessageId = _this$state12.replyToMessageId,\n          files = _this$state12.files,\n          newDraft = _this$state12.newDraft,\n          defaultText = _this$state12.defaultText,\n          defaultUrl = _this$state12.defaultUrl,\n          openEditUrl = _this$state12.openEditUrl,\n          openEditMedia = _this$state12.openEditMedia;\n      var isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n      return React.createElement(\"div\", {\n        className: \"inputbox-background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1270\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inputbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1271\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inputbox-bubble\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1272\n        },\n        __self: this\n      }, React.createElement(InputBoxHeader, {\n        chatId: chatId,\n        messageId: replyToMessageId,\n        editMessageId: openEditMedia ? 0 : editMessageId,\n        onClick: this.handleHeaderClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1273\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"inputbox-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1279\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inputbox-left-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1280\n        },\n        __self: this\n      }, React.createElement(React.Suspense, {\n        fallback: React.createElement(IconButton, {\n          className: \"inputbox-icon-button\",\n          \"aria-label\": \"Emoticon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1283\n          },\n          __self: this\n        }, React.createElement(InsertEmoticonIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1284\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1281\n        },\n        __self: this\n      }, React.createElement(EmojiPickerButton, {\n        onSelect: this.handleEmojiSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1287\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"inputbox-middle-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1290\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"inputbox-message\",\n        ref: this.newMessageRef,\n        placeholder: isMediaEditing ? t('Caption') : t('Message'),\n        contentEditable: true,\n        suppressContentEditableWarning: true,\n        onKeyDown: this.handleKeyDown,\n        onPaste: this.handlePaste,\n        onInput: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1291\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"inputbox-right-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1302\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: this.attachDocumentRef,\n        className: \"inputbox-attach-button\",\n        type: \"file\",\n        multiple: \"multiple\",\n        onChange: this.handleAttachDocumentComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1303\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        ref: this.attachPhotoRef,\n        className: \"inputbox-attach-button\",\n        type: \"file\",\n        multiple: \"multiple\",\n        accept: \"image/*\",\n        onChange: this.handleAttachPhotoComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1310\n        },\n        __self: this\n      }), !Boolean(editMessageId) && React.createElement(AttachButton, {\n        chatId: chatId,\n        onAttachPhoto: this.handleAttachPhoto,\n        onAttachDocument: this.handleAttachDocument,\n        onAttachPoll: this.handleAttachPoll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1319\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"inputbox-send-button-background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1333\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        className: \"inputbox-send-button\",\n        \"aria-label\": \"Send\",\n        size: \"small\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1334\n        },\n        __self: this\n      }, editMessageId ? React.createElement(DoneIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1339\n        },\n        __self: this\n      }) : React.createElement(SendIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1339\n        },\n        __self: this\n      })))), !isPrivateChat(chatId) && React.createElement(CreatePollDialog, {\n        onSend: this.handleSendPoll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1343\n        },\n        __self: this\n      }), React.createElement(PasteFilesDialog, {\n        files: files,\n        onConfirm: this.handlePasteConfirm,\n        onCancel: this.handlePasteCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1344\n        },\n        __self: this\n      }), React.createElement(EditUrlDialog, {\n        open: openEditUrl,\n        defaultText: defaultText,\n        defaultUrl: defaultUrl,\n        onDone: this.handleDoneEditUrl,\n        onCancel: this.handleCancelEditUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1346\n        },\n        __self: this\n      }), React.createElement(EditMediaDialog, {\n        open: openEditMedia,\n        chatId: chatId,\n        messageId: editMessageId,\n        newItem: newItem,\n        onEdit: this.handleEditMedia,\n        onSend: this.handleSendMedia,\n        onCancel: this.handleCancelEditMedia,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1353\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return InputBox;\n}(Component);\n\nexport default withTranslation()(InputBox);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnMiddle/InputBox.js"],"names":["React","Component","classNames","withTranslation","emojiRegex","DoneIcon","IconButton","InsertEmoticonIcon","SendIcon","AttachButton","CreatePollDialog","EditUrlDialog","InputBoxHeader","PasteFilesDialog","EditMediaDialog","OutputTypingManager","draftEquals","getChatDraft","getChatDraftReplyToMessageId","isMeChat","isPrivateChat","findLastTextNode","focusInput","getMediaDocumentFromFile","getMediaPhotoFromFile","isEditedMedia","getEntities","getNodes","isTextMessage","getSize","readImageSize","PHOTO_SIZE","AppStore","ChatStore","FileStore","MessageStore","StickerStore","TdLibController","editMessage","replyMessage","EmojiPickerButton","lazy","InputBox","props","selectionChangeListener","document","activeElement","newMessageRef","current","saveSelection","onClientUpdateSendFiles","update","files","handleSendFiles","Array","from","onUpdateDeleteMessages","state","chatId","editMessageId","chat_id","message_ids","is_permanent","indexOf","handleCancel","onClientUpdateEditMessage","messageId","restoreDraftAndSelection","saveDraftAndSelection","openEditMedia","setState","setEditMessage","handleInput","setTimeout","onClientUpdateFocusWindow","focused","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateStickerSend","item","sticker","thumbnail","width","height","element","innerText","restoreSelection","content","id","thumbnailWidth","thumbnailHeight","photo","sendMessage","result","clientUpdate","hint","onClientUpdateReply","currentChatId","replyToMessageId","setInputFocus","onClientUpdateChatId","nextChatId","beforeEditText","openEditUrl","setDraft","formattedText","setFormattedText","setChatDraftMessage","chatDraftMessage","draftMessage","send","draft_message","getDraftMessage","innerHTML","chat","get","text","entities","length","reply_to_message_id","input_message_text","disable_web_page_preview","clear_draft","handleSubmit","trim","inputContent","editedMessage","caption","editMessageText","editMessageCaption","handleAttachPoll","handleAttachPhoto","attachPhotoRef","click","handleAttachPhotoComplete","newFile","rest","getNewItem","newItem","forEach","file","name","size","data","handleSendPhoto","value","handleAttachDocument","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","handleClear","execCommand","handleBold","handleItalic","handleMono","selection","isCollapsed","toString","handleUnderline","handleStrikeThrough","handleUrl","openEditUrlDialog","handleKeyDown","event","altKey","ctrlKey","keyCode","metaKey","repeat","shiftKey","preventDefault","stopPropagation","cachedMessage","handleSendingMessage","uploadFile","sizes","handleSendPoll","poll","handleSendAudio","audio","handlePaste","clipboardData","originalEvent","items","kind","getAsFile","push","plainText","getData","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","message","blob","sending_state","updatePhotoBlob","clearDraft","callback","invokeScheduledAction","input_message_content","alert","JSON","stringify","handleEmojiSelect","emoji","native","setTyping","setHints","defaultText","defaultUrl","range","startContainer","endContainer","parentElement","nodeName","href","closeEditUrlDialog","childNodes","focus","lastTextNode","createRange","setStart","collapse","window","getSelection","removeAllRanges","addRange","handleCancelEditUrl","handleDoneEditUrl","url","parentNode","title","lastChild","textContent","setEnd","link","handleCancelEditMedia","closeEditMediaDialog","handleEditMedia","editMessageMedia","handleSendMedia","handleHeaderClick","createRef","getChatId","sendFile","nextProps","nextState","t","addEventListener","on","off","removeEventListener","nodes","x","appendChild","e","sendAsFile","media","typingManager","t0","performance","now","regex","match","exec","t1","timestamp","Date","limit","then","stickers","type","startsWith","message_id","rangeCount","getRangeAt","cancel","isMediaEditing","Boolean"],"mappings":";;;;;;;;;;;;AAAA;;;;;;AAOA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,kBAAP,MAA+B,0BAA/B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,mBAAP,MAAgC,iCAAhC;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,4BAApC,EAAkEC,QAAlE,EAA4EC,aAA5E,QAAiG,kBAAjG;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,iBAA7C;AACA,SAASC,wBAAT,EAAmCC,qBAAnC,EAA0DC,aAA1D,QAA+E,mBAA/E;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,aAAhC,QAAqD,qBAArD;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,oBAAvC;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAO,gBAAP;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,sBAA1C;AAEA,IAAMC,iBAAiB,GAAGxC,KAAK,CAACyC,IAAN,CAAW;AAAA,SAAM,OAAO,qCAAP,CAAN;AAAA,CAAX,CAA1B;;IAEMC,Q;;;;;AACF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;;AADe,UAqFnBC,uBArFmB,GAqFO,YAAM;AAC5B;AACA,UAAIC,QAAQ,CAACC,aAAT,KAA2B,MAAKC,aAAL,CAAmBC,OAAlD,EAA2D;AACvD,cAAKC,aAAL;AACH;AACJ,KA1FkB;;AAAA,UA0HnBC,uBA1HmB,GA0HO,UAAAC,MAAM,EAAI;AAAA,UACxBC,KADwB,GACdD,MADc,CACxBC,KADwB;AAEhC,UAAI,CAACA,KAAL,EAAY;;AAEZ,YAAKC,eAAL,CAAqBC,KAAK,CAACC,IAAN,CAAWH,KAAX,CAArB;AACH,KA/HkB;;AAAA,UAiInBI,sBAjImB,GAiIM,UAAAL,MAAM,EAAI;AAAA,wBACG,MAAKM,KADR;AAAA,UACvBC,MADuB,eACvBA,MADuB;AAAA,UACfC,aADe,eACfA,aADe;AAAA,UAEvBC,OAFuB,GAEgBT,MAFhB,CAEvBS,OAFuB;AAAA,UAEdC,WAFc,GAEgBV,MAFhB,CAEdU,WAFc;AAAA,UAEDC,YAFC,GAEgBX,MAFhB,CAEDW,YAFC;AAI/B,UAAI,CAACH,aAAL,EAAoB;AACpB,UAAI,CAACG,YAAL,EAAmB;AACnB,UAAIJ,MAAM,KAAKE,OAAf,EAAwB;AACxB,UAAIC,WAAW,CAACE,OAAZ,CAAoBJ,aAApB,MAAuC,CAAC,CAA5C,EAA+C;;AAE/C,YAAKK,YAAL;AACH,KA3IkB;;AAAA,UA6InBC,yBA7ImB,GA6IS,UAAAd,MAAM,EAAI;AAAA,UAC1BO,MAD0B,GACJP,MADI,CAC1BO,MAD0B;AAAA,UAClBQ,SADkB,GACJf,MADI,CAClBe,SADkB;AAElC,UAAI,MAAKT,KAAL,CAAWC,MAAX,KAAsBA,MAA1B,EAAkC;;AAElC,UAAI,CAACQ,SAAL,EAAgB;AACZ,cAAKC,wBAAL;AACH,OAFD,MAEO;AACH,cAAKC,qBAAL;AACH;;AAED,UAAMC,aAAa,GAAGH,SAAS,KAAK,CAAd,IAAmBzC,aAAa,CAACiC,MAAD,EAASQ,SAAT,CAAtD;;AACA,YAAKI,QAAL,CACI;AACIX,QAAAA,aAAa,EAAEO,SADnB;AAEIG,QAAAA,aAAa,EAAbA;AAFJ,OADJ,EAKI,YAAM;AACF,YAAI,CAAC,MAAKZ,KAAL,CAAWY,aAAhB,EAA+B;AAC3B,gBAAKE,cAAL;;AACA,gBAAKC,WAAL;;AACAC,UAAAA,UAAU,CAAC,YAAM;AACb,kBAAKnD,UAAL;AACH,WAFS,EAEP,CAFO,CAAV;AAGH;AACJ,OAbL;AAeH,KAvKkB;;AAAA,UA8MnBoD,yBA9MmB,GA8MS,UAAAvB,MAAM,EAAI;AAAA,UAC1BwB,OAD0B,GACdxB,MADc,CAC1BwB,OAD0B;AAElC,UAAIA,OAAJ,EAAa;;AAEb,YAAKC,SAAL;AACH,KAnNkB;;AAAA,UAqNnBC,wBArNmB,GAqNQ,UAAA1B,MAAM,EAAI;AAAA,UACzBS,OADyB,GACbT,MADa,CACzBS,OADyB;AAAA,UAEzBF,MAFyB,GAEd,MAAKD,KAFS,CAEzBC,MAFyB;AAIjC,UAAIA,MAAM,KAAKE,OAAf,EAAwB;;AAExB,YAAKkB,SAAL;AACH,KA5NkB;;AAAA,UA8NnBC,yBA9NmB,GA8NS,UAAA5B,MAAM,EAAI;AAAA,UACjB6B,IADiB,GACR7B,MADQ,CAC1B8B,OAD0B;AAElC,UAAI,CAACD,IAAL,EAAW;AAFuB,UAI1BC,OAJ0B,GAIYD,IAJZ,CAI1BC,OAJ0B;AAAA,UAIjBC,SAJiB,GAIYF,IAJZ,CAIjBE,SAJiB;AAAA,UAINC,KAJM,GAIYH,IAJZ,CAING,KAJM;AAAA,UAICC,MAJD,GAIYJ,IAJZ,CAICI,MAJD;AAKlC,UAAI,CAACH,OAAL,EAAc;AAEd,UAAMI,OAAO,GAAG,MAAKtC,aAAL,CAAmBC,OAAnC;AACA,UAAI,CAACqC,OAAL,EAAc;AAEdA,MAAAA,OAAO,CAACC,SAAR,GAAoB,IAApB;;AAEA,YAAKC,gBAAL;;AAEA,UAAMC,OAAO,GAAG;AACZ,iBAAS,qBADG;AAEZP,QAAAA,OAAO,EAAE;AACL,mBAAS,aADJ;AAELQ,UAAAA,EAAE,EAAER,OAAO,CAACQ;AAFP,SAFG;AAMZN,QAAAA,KAAK,EAALA,KANY;AAOZC,QAAAA,MAAM,EAANA;AAPY,OAAhB;;AAUA,UAAIF,SAAJ,EAAe;AAAA,YACIQ,cADJ,GACuDR,SADvD,CACHC,KADG;AAAA,YAC4BQ,eAD5B,GACuDT,SADvD,CACoBE,MADpB;AAAA,YAC6CQ,KAD7C,GACuDV,SADvD,CAC6CU,KAD7C;AAGXJ,QAAAA,OAAO,CAACN,SAAR,GAAoB;AAChBA,UAAAA,SAAS,EAAE;AACP,qBAAS,aADF;AAEPO,YAAAA,EAAE,EAAEG,KAAK,CAACH;AAFH,WADK;AAKhBN,UAAAA,KAAK,EAAEO,cALS;AAMhBN,UAAAA,MAAM,EAAEO;AANQ,SAApB;AAQH;;AAED,YAAKE,WAAL,CAAiBL,OAAjB,EAA0B,KAA1B,EAAiC,UAAAM,MAAM,EAAI,CAAE,CAA7C;;AAEAzD,MAAAA,eAAe,CAAC0D,YAAhB,CAA6B;AACzB,iBAAS,+BADgB;AAEzBC,QAAAA,IAAI,EAAE;AAFmB,OAA7B;AAIH,KAzQkB;;AAAA,UA2QnBC,mBA3QmB,GA2QG,UAAA9C,MAAM,EAAI;AAAA,UACZ+C,aADY,GACM,MAAKzC,KADX,CACpBC,MADoB;AAAA,UAEpBA,MAFoB,GAEEP,MAFF,CAEpBO,MAFoB;AAAA,UAEZQ,SAFY,GAEEf,MAFF,CAEZe,SAFY;;AAI5B,UAAIgC,aAAa,KAAKxC,MAAtB,EAA8B;AAC1B;AACH;;AAED,YAAKY,QAAL,CAAc;AAAE6B,QAAAA,gBAAgB,EAAEjC;AAApB,OAAd;;AAEA,UAAIA,SAAJ,EAAe;AACX,cAAKkC,aAAL;AACH;AACJ,KAxRkB;;AAAA,UA0RnBC,oBA1RmB,GA0RI,UAAAlD,MAAM,EAAI;AAAA,UACrBO,MADqB,GACV,MAAKD,KADK,CACrBC,MADqB;AAE7B,UAAIA,MAAM,KAAKP,MAAM,CAACmD,UAAtB,EAAkC;;AAElC,YAAK1B,SAAL;;AACA,YAAK2B,cAAL,GAAsB,IAAtB;;AACA,YAAKjC,QAAL,CACI;AACIZ,QAAAA,MAAM,EAAEP,MAAM,CAACmD,UADnB;AAEIH,QAAAA,gBAAgB,EAAEjF,4BAA4B,CAACiC,MAAM,CAACmD,UAAR,CAFlD;AAGI3C,QAAAA,aAAa,EAAE,CAHnB;AAII6C,QAAAA,WAAW,EAAE;AAJjB,OADJ,EAOI,YAAM;AACF,cAAK1B,SAAL;AACH,OATL;AAWH,KA3SkB;;AAAA,UA6SnB2B,QA7SmB,GA6SR,YAAM;AAAA,UACL/C,MADK,GACM,MAAKD,KADX,CACLC,MADK;AAGb,UAAM2B,OAAO,GAAG,MAAKtC,aAAL,CAAmBC,OAAnC;AAEA,UAAM0D,aAAa,GAAGzF,YAAY,CAACyC,MAAD,CAAlC;;AACA,UAAIgD,aAAJ,EAAmB;AACf,cAAKC,gBAAL,CAAsBD,aAAtB;;AACA,cAAKpC,QAAL,CAAc;AACV6B,UAAAA,gBAAgB,EAAEjF,4BAA4B,CAACwC,MAAD;AADpC,SAAd;AAGH,OALD,MAKO;AACH2B,QAAAA,OAAO,CAACC,SAAR,GAAoB,IAApB;AACH;AACJ,KA3TkB;;AAAA,UAyWnBc,aAzWmB,GAyWH,YAAM;AAClB3B,MAAAA,UAAU,CAAC,YAAM;AACb,YAAMY,OAAO,GAAG,MAAKtC,aAAL,CAAmBC,OAAnC;AAEA1B,QAAAA,UAAU,CAAC+D,OAAD,CAAV;AACH,OAJS,EAIP,GAJO,CAAV;AAKH,KA/WkB;;AAAA,UAiXnBuB,mBAjXmB,GAiXG,UAAAC,gBAAgB,EAAI;AACtC,UAAI,CAACA,gBAAL,EAAuB;AADe,UAG9BnD,MAH8B,GAGLmD,gBAHK,CAG9BnD,MAH8B;AAAA,UAGtBoD,YAHsB,GAGLD,gBAHK,CAGtBC,YAHsB;AAItC,UAAI,CAACpD,MAAL,EAAa;AAEbrB,MAAAA,eAAe,CAAC0E,IAAhB,CAAqB;AACjB,iBAAS,qBADQ;AAEjBnD,QAAAA,OAAO,EAAEF,MAFQ;AAGjBsD,QAAAA,aAAa,EAAEF;AAHE,OAArB;AAKH,KA5XkB;;AAAA,UA8XnBG,eA9XmB,GA8XD,UAACvD,MAAD,EAASyC,gBAAT,EAA2Be,SAA3B,EAAyC;AACvD,UAAMC,IAAI,GAAGlF,SAAS,CAACmF,GAAV,CAAc1D,MAAd,CAAb;AACA,UAAI,CAACyD,IAAL,EAAW;AAF4C,UAI/CH,aAJ+C,GAI7BG,IAJ6B,CAI/CH,aAJ+C;;AAAA,yBAK5BtF,WAAW,CAACwF,SAAD,CALiB;AAAA,UAK/CG,IAL+C,gBAK/CA,IAL+C;AAAA,UAKzCC,QALyC,gBAKzCA,QALyC;;AAMvD,UAAMR,YAAY,GACbO,IAAI,IAAIA,IAAI,CAACE,MAAL,GAAc,CAAvB,IAA6BD,QAAQ,CAACC,MAAT,GAAkB,CAA/C,GACM;AACI,iBAAS,cADb;AAEIC,QAAAA,mBAAmB,EAAErB,gBAFzB;AAGIsB,QAAAA,kBAAkB,EAAE;AAChB,mBAAS,kBADO;AAEhBJ,UAAAA,IAAI,EAAE;AACF,qBAAS,eADP;AAEFA,YAAAA,IAAI,EAAJA,IAFE;AAGFC,YAAAA,QAAQ,EAARA;AAHE,WAFU;AAOhBI,UAAAA,wBAAwB,EAAE,KAPV;AAQhBC,UAAAA,WAAW,EAAE;AARG;AAHxB,OADN,GAeM,IAhBV;;AAkBA,UAAI3G,WAAW,CAACgG,aAAD,EAAgBF,YAAhB,CAAf,EAA8C;AAC1C,eAAO,IAAP;AACH;;AAED,aAAO;AAAEpD,QAAAA,MAAM,EAANA,MAAF;AAAUoD,QAAAA,YAAY,EAAZA;AAAV,OAAP;AACH,KA3ZkB;;AAAA,UA6ZnBc,YA7ZmB,GA6ZJ,YAAM;AAAA,yBACiB,MAAKnE,KADtB;AAAA,UACTC,MADS,gBACTA,MADS;AAAA,UACDC,aADC,gBACDA,aADC;AAEjB,UAAM0B,OAAO,GAAG,MAAKtC,aAAL,CAAmBC,OAAnC;AACA,UAAI,CAACqC,OAAL,EAAc;AAHG,UAKX6B,SALW,GAKG7B,OALH,CAKX6B,SALW;AAOjB7B,MAAAA,OAAO,CAACC,SAAR,GAAoB,IAApB;;AACA,YAAKd,WAAL;;AAEAlC,MAAAA,WAAW,CAACoB,MAAD,EAAS,CAAT,CAAX;AAEA,UAAI,CAACwD,SAAL,EAAgB;AAChB,UAAI,CAACA,SAAS,CAACW,IAAV,EAAL,EAAuB;;AAbN,0BAeUnG,WAAW,CAACwF,SAAD,CAfrB;AAAA,UAeTG,IAfS,iBAeTA,IAfS;AAAA,UAeHC,QAfG,iBAeHA,QAfG;;AAiBjB,UAAMZ,aAAa,GAAG;AAClB,iBAAS,eADS;AAElBW,QAAAA,IAAI,EAAJA,IAFkB;AAGlBC,QAAAA,QAAQ,EAARA;AAHkB,OAAtB;AAKA,UAAMQ,YAAY,GAAG;AACjB,iBAAS,kBADQ;AAEjBT,QAAAA,IAAI,EAAEX,aAFW;AAGjBgB,QAAAA,wBAAwB,EAAE,KAHT;AAIjBC,QAAAA,WAAW,EAAE;AAJI,OAArB;;AAOA,UAAIhE,aAAJ,EAAmB;AACf,YAAMoE,aAAa,GAAG5F,YAAY,CAACiF,GAAb,CAAiB1D,MAAjB,EAAyBC,aAAzB,CAAtB;AACA,YAAI,CAACoE,aAAL,EAAoB;AAFL,YAIPvC,OAJO,GAIKuC,aAJL,CAIPvC,OAJO;AAKf,YAAI,CAACA,OAAL,EAAc;AALC,YAOP6B,KAPO,GAOW7B,OAPX,CAOP6B,IAPO;AAAA,YAODW,OAPC,GAOWxC,OAPX,CAODwC,OAPC;;AAQf,YAAIX,KAAJ,EAAU;AACN,gBAAKY,eAAL,CAAqBH,YAArB,EAAmC,UAAAhC,MAAM,EAAI,CAAE,CAA/C;AACH,SAFD,MAEO,IAAIkC,OAAJ,EAAa;AAChB,gBAAKE,kBAAL,CAAwBxB,aAAxB;AACH;AACJ,OAbD,MAaO;AACH,cAAKb,WAAL,CAAiBiC,YAAjB,EAA+B,KAA/B,EAAsC,UAAAhC,MAAM,EAAI,CAAE,CAAlD;AACH;AACJ,KA1ckB;;AAAA,UA4cnBqC,gBA5cmB,GA4cA,YAAM;AACrB9F,MAAAA,eAAe,CAAC0D,YAAhB,CAA6B;AACzB,iBAAS;AADgB,OAA7B;AAGH,KAhdkB;;AAAA,UAkdnBqC,iBAldmB,GAkdC,YAAM;AACtB,UAAI,CAAC,MAAKC,cAAV,EAA0B;;AAE1B,YAAKA,cAAL,CAAoBrF,OAApB,CAA4BsF,KAA5B;AACH,KAtdkB;;AAAA,UA4enBC,yBA5emB;AAAA;AAAA;AAAA;AAAA,6BA4eS;AAAA;;AAAA;AAAA;AAAA;AAAA;AAChBnF,cAAAA,KADgB,GACN,MAAKiF,cAAL,CAAoBrF,OADd,CAChBI,KADgB;;AAAA,oBAEpBA,KAAK,CAACmE,MAAN,KAAiB,CAFG;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,oBAIpBnE,KAAK,CAACmE,MAAN,KAAiB,CAJG;AAAA;AAAA;AAAA;;AAAA,4BAKSjE,KAAK,CAACC,IAAN,CAAWH,KAAX,CALT,wCAKZoF,OALY,oBAKAC,IALA;;AAAA,kBAMfD,OANe;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,qBAQE,MAAKE,UAAL,CAAgBF,OAAhB,EAAyB,IAAzB,CARF;;AAAA;AAQdG,cAAAA,OARc;;AAUpB,oBAAKrE,QAAL,CAAc;AACVD,gBAAAA,aAAa,EAAE,IADL;AAEVsE,gBAAAA,OAAO,EAAPA;AAFU,eAAd;;AAVoB;AAAA;;AAAA;AAepBrF,cAAAA,KAAK,CAACC,IAAN,CAAWH,KAAX,EAAkBwF,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,yCAA0B,iBAAMC,IAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACQ/G,aAAa,CAAC+G,IAAD,CADrB;;AAAA;AAAA;AAAA;AACf1D,0BAAAA,KADe;AACRC,0BAAAA,MADQ;AAGhBI,0BAAAA,OAHgB,GAGN;AACZ,qCAAS,mBADG;AAEZI,4BAAAA,KAAK,EAAE;AAAE,uCAAS,eAAX;AAA4BkD,8BAAAA,IAAI,EAAED,IAAI,CAACC,IAAvC;AAA6CC,8BAAAA,IAAI,EAAEF,IAAI,CAACE,IAAxD;AAA8DC,8BAAAA,IAAI,EAAEH;AAApE,6BAFK;AAGZ1D,4BAAAA,KAAK,EAALA,KAHY;AAIZC,4BAAAA,MAAM,EAANA;AAJY,2BAHM;;AAUtB,gCAAK6D,eAAL,CAAqBzD,OAArB,EAA8BqD,IAA9B;;AAVsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA1B;;AAAA;AAAA;AAAA;AAAA;;AAfoB;AA6BxB,oBAAKR,cAAL,CAAoBrF,OAApB,CAA4BkG,KAA5B,GAAoC,EAApC;;AA7BwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA5eT;;AAAA,UA4gBnBC,oBA5gBmB,GA4gBI,YAAM;AACzB,UAAI,CAAC,MAAKC,iBAAV,EAA6B;;AAE7B,YAAKA,iBAAL,CAAuBpG,OAAvB,CAA+BsF,KAA/B;AACH,KAhhBkB;;AAAA,UAkhBnBe,4BAlhBmB;AAAA;AAAA;AAAA;AAAA,6BAkhBY;AAAA;;AAAA;AAAA;AAAA;AAAA;AACnBjG,cAAAA,KADmB,GACT,MAAKgG,iBAAL,CAAuBpG,OADd,CACnBI,KADmB;;AAAA,oBAEvBA,KAAK,CAACmE,MAAN,KAAiB,CAFM;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,oBAIvBnE,KAAK,CAACmE,MAAN,KAAiB,CAJM;AAAA;AAAA;AAAA;;AAAA,6BAKMjE,KAAK,CAACC,IAAN,CAAWH,KAAX,CALN,yCAKfoF,OALe,oBAKHC,IALG;;AAAA,kBAMlBD,OANkB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,qBAQD,MAAKE,UAAL,CAAgBF,OAAhB,EAAyB,KAAzB,CARC;;AAAA;AAQjBG,cAAAA,OARiB;;AAUvB,oBAAKrE,QAAL,CAAc;AACVD,gBAAAA,aAAa,EAAE,IADL;AAEVsE,gBAAAA,OAAO,EAAPA;AAFU,eAAd;;AAVuB;AAAA;;AAAA;AAevBrF,cAAAA,KAAK,CAACC,IAAN,CAAWH,KAAX,EAAkBwF,OAAlB,CAA0B,UAAAC,IAAI,EAAI;AAC9B,oBAAMrD,OAAO,GAAG;AACZ,2BAAS,sBADG;AAEZ3C,kBAAAA,QAAQ,EAAE;AAAE,6BAAS,eAAX;AAA4BiG,oBAAAA,IAAI,EAAED,IAAI,CAACC,IAAvC;AAA6CC,oBAAAA,IAAI,EAAEF,IAAI,CAACE,IAAxD;AAA8DC,oBAAAA,IAAI,EAAEH;AAApE;AAFE,iBAAhB;;AAKA,sBAAKS,kBAAL,CAAwB9D,OAAxB,EAAiCqD,IAAjC;AACH,eAPD;;AAfuB;AAyB3B,oBAAKO,iBAAL,CAAuBpG,OAAvB,CAA+BkG,KAA/B,GAAuC,EAAvC;;AAzB2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAlhBZ;;AAAA,UAooBnBK,WApoBmB,GAooBL,YAAM;AAChB1G,MAAAA,QAAQ,CAAC2G,WAAT,CAAqB,cAArB,EAAqC,KAArC,EAA4C,IAA5C;AACA3G,MAAAA,QAAQ,CAAC2G,WAAT,CAAqB,QAArB,EAA+B,KAA/B,EAAsC,IAAtC;AACH,KAvoBkB;;AAAA,UAyoBnBC,UAzoBmB,GAyoBN,YAAM;AACf5G,MAAAA,QAAQ,CAAC2G,WAAT,CAAqB,cAArB,EAAqC,KAArC,EAA4C,IAA5C;AACA3G,MAAAA,QAAQ,CAAC2G,WAAT,CAAqB,QAArB,EAA+B,KAA/B,EAAsC,IAAtC;AAEA3G,MAAAA,QAAQ,CAAC2G,WAAT,CAAqB,MAArB,EAA6B,KAA7B,EAAoC,IAApC;AACH,KA9oBkB;;AAAA,UAgpBnBE,YAhpBmB,GAgpBJ,YAAM;AACjB7G,MAAAA,QAAQ,CAAC2G,WAAT,CAAqB,cAArB,EAAqC,KAArC,EAA4C,IAA5C;AACA3G,MAAAA,QAAQ,CAAC2G,WAAT,CAAqB,QAArB,EAA+B,KAA/B,EAAsC,IAAtC;AAEA3G,MAAAA,QAAQ,CAAC2G,WAAT,CAAqB,QAArB,EAA+B,KAA/B,EAAsC,IAAtC;AACH,KArpBkB;;AAAA,UAupBnBG,UAvpBmB,GAupBN,YAAM;AACf9G,MAAAA,QAAQ,CAAC2G,WAAT,CAAqB,cAArB,EAAqC,KAArC,EAA4C,IAA5C;AACA3G,MAAAA,QAAQ,CAAC2G,WAAT,CAAqB,QAArB,EAA+B,KAA/B,EAAsC,IAAtC;AAEA,UAAInC,IAAI,GAAG,EAAX;;AAJe;AAAA,UAKPuC,SALO,yBAKPA,SALO;;AAMf,UAAIA,SAAS,IAAI,CAACA,SAAS,CAACC,WAA5B,EAAyC;AACrCxC,QAAAA,IAAI,GAAGuC,SAAS,CAACE,QAAV,EAAP;AACH;;AAED,UAAI,CAACzC,IAAL,EAAW;AACXA,MAAAA,IAAI,mBAAYA,IAAZ,YAAJ;AACAxE,MAAAA,QAAQ,CAAC2G,WAAT,CAAqB,cAArB,EAAqC,KAArC,EAA4C,IAA5C;AACA3G,MAAAA,QAAQ,CAAC2G,WAAT,CAAqB,YAArB,EAAmC,KAAnC,EAA0CnC,IAA1C;AACH,KArqBkB;;AAAA,UAuqBnB0C,eAvqBmB,GAuqBD,YAAM;AACpBlH,MAAAA,QAAQ,CAAC2G,WAAT,CAAqB,cAArB,EAAqC,KAArC,EAA4C,IAA5C;AACA3G,MAAAA,QAAQ,CAAC2G,WAAT,CAAqB,QAArB,EAA+B,KAA/B,EAAsC,IAAtC;AAEA3G,MAAAA,QAAQ,CAAC2G,WAAT,CAAqB,WAArB,EAAkC,KAAlC,EAAyC,IAAzC;AACH,KA5qBkB;;AAAA,UA8qBnBQ,mBA9qBmB,GA8qBG,YAAM;AACxBnH,MAAAA,QAAQ,CAAC2G,WAAT,CAAqB,cAArB,EAAqC,KAArC,EAA4C,IAA5C;AACA3G,MAAAA,QAAQ,CAAC2G,WAAT,CAAqB,QAArB,EAA+B,KAA/B,EAAsC,IAAtC;AAEA3G,MAAAA,QAAQ,CAAC2G,WAAT,CAAqB,eAArB,EAAsC,KAAtC,EAA6C,IAA7C;AACH,KAnrBkB;;AAAA,UAqrBnBS,SArrBmB,GAqrBP,YAAM;AACd,YAAKC,iBAAL;AACH,KAvrBkB;;AAAA,UAyrBnBlG,YAzrBmB,GAyrBJ,YAAM;AAAA,yBACmC,MAAKP,KADxC;AAAA,UACTC,MADS,gBACTA,MADS;AAAA,UACDC,aADC,gBACDA,aADC;AAAA,UACcwC,gBADd,gBACcA,gBADd;;AAEjB,UAAIxC,aAAJ,EAAmB;AACfrB,QAAAA,WAAW,CAACoB,MAAD,EAAS,CAAT,CAAX;AACH,OAFD,MAEO,IAAIyC,gBAAJ,EAAsB;AACzB5D,QAAAA,YAAY,CAACmB,MAAD,EAAS,CAAT,CAAZ;AACH;AACJ,KAhsBkB;;AAAA,UAksBnByG,aAlsBmB,GAksBH,UAAAC,KAAK,EAAI;AAAA,UACbC,MADa,GAC2CD,KAD3C,CACbC,MADa;AAAA,UACLC,OADK,GAC2CF,KAD3C,CACLE,OADK;AAAA,UACIC,OADJ,GAC2CH,KAD3C,CACIG,OADJ;AAAA,UACaC,OADb,GAC2CJ,KAD3C,CACaI,OADb;AAAA,UACsBC,MADtB,GAC2CL,KAD3C,CACsBK,MADtB;AAAA,UAC8BC,QAD9B,GAC2CN,KAD3C,CAC8BM,QAD9B,EAGrB;;AAEA,cAAQH,OAAR;AACI;AACA,aAAK,EAAL;AAAS;AACL,gBAAI,CAACF,MAAD,IAAW,CAACC,OAAZ,IAAuB,CAACE,OAAxB,IAAmC,CAACE,QAAxC,EAAkD;AAC9C,kBAAI,CAACD,MAAL,EAAa,MAAK7C,YAAL;AAEbwC,cAAAA,KAAK,CAACO,cAAN;AACAP,cAAAA,KAAK,CAACQ,eAAN;AACH;;AACD;AACH;AACD;;AACA,aAAK,EAAL;AAAS;AACL,gBAAI,CAACP,MAAD,IAAW,CAACC,OAAZ,IAAuB,CAACE,OAAxB,IAAmC,CAACE,QAAxC,EAAkD;AAC9C,kBAAI,CAACD,MAAL,EAAa,MAAKzG,YAAL;AAEboG,cAAAA,KAAK,CAACO,cAAN;AACAP,cAAAA,KAAK,CAACQ,eAAN;AACH;;AACD;AACH;AACD;;AACA,aAAK,EAAL;AAAS;AACL,gBAAI,CAACH,MAAD,IAAW,CAACJ,MAAZ,IAAsB,CAACC,OAAvB,IAAkC,CAACE,OAAnC,IAA8C,CAACE,QAAnD,EAA6D;AACzD,kBAAMrF,OAAO,GAAG,MAAKtC,aAAL,CAAmBC,OAAnC;;AACA,kBAAIqC,OAAO,IAAI,CAACA,OAAO,CAACC,SAAxB,EAAmC;AAAA,oBACvB3B,aADuB,GACL,MAAKF,KADA,CACvBE,aADuB;AAE/B,oBAAIA,aAAJ,EAAmB;AAEnBtB,gBAAAA,eAAe,CAAC0D,YAAhB,CAA6B;AACzB,2BAAS;AADgB,iBAA7B;AAIAqE,gBAAAA,KAAK,CAACO,cAAN;AACAP,gBAAAA,KAAK,CAACQ,eAAN;AACH;AACJ;;AACD;AACH;AACD;;AACA,aAAK,EAAL;AAAS;AACL,gBAAI,CAACP,MAAD,KAAYC,OAAO,IAAIE,OAAvB,KAAmC,CAACE,QAAxC,EAAkD;AAC9C,kBAAI,CAACD,MAAL,EAAa,MAAKhB,UAAL;AAEbW,cAAAA,KAAK,CAACO,cAAN;AACAP,cAAAA,KAAK,CAACQ,eAAN;AACH;;AACD;AACH;AACD;;AACA,aAAK,EAAL;AAAS;AACL,gBAAI,CAACP,MAAD,KAAYC,OAAO,IAAIE,OAAvB,KAAmC,CAACE,QAAxC,EAAkD;AAC9C,kBAAI,CAACD,MAAL,EAAa,MAAKf,YAAL;AAEbU,cAAAA,KAAK,CAACO,cAAN;AACAP,cAAAA,KAAK,CAACQ,eAAN;AACH;;AACD;AACH;;AACD,aAAK,EAAL;AAAS;AACL;AACA,gBAAI,CAACP,MAAD,KAAYC,OAAO,IAAIE,OAAvB,KAAmC,CAACE,QAAxC,EAAkD;AAC9C,kBAAI,CAACD,MAAL,EAAa,MAAKR,SAAL;AAEbG,cAAAA,KAAK,CAACO,cAAN;AACAP,cAAAA,KAAK,CAACQ,eAAN;AACH,aALD,CAMA;AANA,iBAOK,IAAIP,MAAM,KAAKC,OAAO,IAAIE,OAAhB,CAAN,IAAkC,CAACE,QAAvC,EAAiD;AAClD,oBAAI,CAACD,MAAL,EAAa,MAAKd,UAAL;AAEbS,gBAAAA,KAAK,CAACO,cAAN;AACAP,gBAAAA,KAAK,CAACQ,eAAN;AACH;;AACD;AACH;AACD;;AACA,aAAK,GAAL;AAAU;AACN,gBAAIP,MAAM,KAAKC,OAAO,IAAIE,OAAhB,CAAN,IAAkC,CAACE,QAAvC,EAAiD;AAC7C,kBAAI,CAACD,MAAL,EAAa,MAAKlB,WAAL;AAEba,cAAAA,KAAK,CAACO,cAAN;AACAP,cAAAA,KAAK,CAACQ,eAAN;AACH;;AACD;AACH;AArFL;AAuFH,KA9xBkB;;AAAA,UAgyBnB3B,eAhyBmB,GAgyBD,UAACzD,OAAD,EAAUqD,IAAV,EAAmB;AACjC,UAAI,CAACrD,OAAL,EAAc;;AAEd,YAAKK,WAAL,CAAiBL,OAAjB,EAA0B,IAA1B,EAAgC,UAAAM,MAAM,EAAI;AACtC,YAAM+E,aAAa,GAAG1I,YAAY,CAACiF,GAAb,CAAiBtB,MAAM,CAAClC,OAAxB,EAAiCkC,MAAM,CAACL,EAAxC,CAAtB;;AACA,YAAIoF,aAAa,IAAI,IAArB,EAA2B;AACvB,gBAAKC,oBAAL,CAA0BD,aAA1B,EAAyChC,IAAzC;AACH;;AAED3G,QAAAA,SAAS,CAAC6I,UAAV,CAAqBjF,MAAM,CAACN,OAAP,CAAeI,KAAf,CAAqBoF,KAArB,CAA2B,CAA3B,EAA8BpF,KAA9B,CAAoCH,EAAzD,EAA6DK,MAA7D;AACH,OAPD;AAQH,KA3yBkB;;AAAA,UA6yBnBmF,cA7yBmB,GA6yBF,UAAAC,IAAI,EAAI;AACrB,YAAKrF,WAAL,CAAiBqF,IAAjB,EAAuB,IAAvB,EAA6B,YAAM,CAAE,CAArC;AACH,KA/yBkB;;AAAA,UAizBnB5B,kBAjzBmB,GAizBE,UAAC9D,OAAD,EAAUqD,IAAV,EAAmB;AACpC,UAAI,CAACrD,OAAL,EAAc;;AAEd,YAAKK,WAAL,CAAiBL,OAAjB,EAA0B,IAA1B,EAAgC,UAAAM,MAAM;AAAA,eAAI5D,SAAS,CAAC6I,UAAV,CAAqBjF,MAAM,CAACN,OAAP,CAAe3C,QAAf,CAAwBA,QAAxB,CAAiC4C,EAAtD,EAA0DK,MAA1D,CAAJ;AAAA,OAAtC;AACH,KArzBkB;;AAAA,UAuzBnBqF,eAvzBmB,GAuzBD,UAAC3F,OAAD,EAAUqD,IAAV,EAAmB;AACjC,UAAI,CAACrD,OAAL,EAAc;;AAEd,YAAKK,WAAL,CAAiBL,OAAjB,EAA0B,IAA1B,EAAgC,UAAAM,MAAM;AAAA,eAAI5D,SAAS,CAAC6I,UAAV,CAAqBjF,MAAM,CAACN,OAAP,CAAe4F,KAAf,CAAqBA,KAArB,CAA2B3F,EAAhD,EAAoDK,MAApD,CAAJ;AAAA,OAAtC;AACH,KA3zBkB;;AAAA,UA80BnBuF,WA90BmB;AAAA;AAAA;AAAA;AAAA;AAAA,+BA80BL,kBAAMjB,KAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACQA,KAAK,CAACkB,aAAN,IAAuBlB,KAAK,CAACmB,aAAN,CAAoBD,aADnD,EACFE,KADE,SACFA,KADE;;AAAA,oBAELA,KAFK;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAIJpI,gBAAAA,KAJI,GAII,EAJJ;AAKVE,gBAAAA,KAAK,CAACC,IAAN,CAAWiI,KAAX,EAAkB5C,OAAlB,CAA0B,UAAA5D,IAAI,EAAI;AAC9B,sBAAIA,IAAI,CAACyG,IAAL,CAAU1H,OAAV,CAAkB,MAAlB,MAA8B,CAAlC,EAAqC;AACjC,wBAAM8E,IAAI,GAAG7D,IAAI,CAAC0G,SAAL,EAAb;;AACA,wBAAI7C,IAAJ,EAAU;AACNzF,sBAAAA,KAAK,CAACuI,IAAN,CAAW9C,IAAX;AACH;AACJ;AACJ,iBAPD;;AALU,sBAcNzF,KAAK,CAACmE,MAAN,GAAe,CAdT;AAAA;AAAA;AAAA;;AAeN6C,gBAAAA,KAAK,CAACO,cAAN;;AAEA,sBAAKtH,eAAL,CAAqBD,KAArB;;AAjBM;;AAAA;AAqBJwI,gBAAAA,SArBI,GAqBQxB,KAAK,CAACkB,aAAN,CAAoBO,OAApB,CAA4B,YAA5B,CArBR;;AAAA,qBAsBND,SAtBM;AAAA;AAAA;AAAA;;AAuBNxB,gBAAAA,KAAK,CAACO,cAAN;AACA9H,gBAAAA,QAAQ,CAAC2G,WAAT,CAAqB,YAArB,EAAmC,KAAnC,EAA0CoC,SAA1C;AAxBM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA90BK;;AAAA;AAAA;AAAA;AAAA;;AAAA,UA22BnBE,kBA32BmB,GA22BE,YAAM;AAAA,UACf1I,KADe,GACL,MAAKK,KADA,CACfL,KADe;AAEvB,UAAI,CAACA,KAAL,EAAY;AACZ,UAAI,CAACA,KAAK,CAACmE,MAAX,EAAmB;AAEnBnE,MAAAA,KAAK,CAACwF,OAAN,CAAc,UAAAC,IAAI,EAAI;AAClB,YAAMrD,OAAO,GAAG;AACZ,mBAAS,sBADG;AAEZ3C,UAAAA,QAAQ,EAAE;AAAE,qBAAS,eAAX;AAA4BiG,YAAAA,IAAI,EAAED,IAAI,CAACC,IAAvC;AAA6CE,YAAAA,IAAI,EAAEH;AAAnD;AAFE,SAAhB;;AAKA,cAAKS,kBAAL,CAAwB9D,OAAxB,EAAiCqD,IAAjC;AACH,OAPD;;AASA,YAAKkD,iBAAL;AACH,KA13BkB;;AAAA,UA43BnBA,iBA53BmB,GA43BC,YAAM;AACtB,YAAKzH,QAAL,CAAc;AAAElB,QAAAA,KAAK,EAAE;AAAT,OAAd;AACH,KA93BkB;;AAAA,UAg4BnB4I,wBAh4BmB,GAg4BQ,YAAM;AAAA,UACrBC,QADqB,GACR,MAAKxI,KADG,CACrBwI,QADqB;AAE7B,UAAI,CAACA,QAAL,EAAe;;AAEf,YAAKnH,SAAL;;AACA,YAAKoH,uBAAL;AACH,KAt4BkB;;AAAA,UAw4BnBA,uBAx4BmB,GAw4BO,YAAM;AAC5B,YAAK5H,QAAL,CAAc;AAAE2H,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACH,KA14BkB;;AAAA,UA44BnBnB,oBA54BmB,GA44BI,UAACqB,OAAD,EAAUC,IAAV,EAAmB;AACtC,UAAI,CAACD,OAAL,EAAc;AADwB,UAG9BE,aAH8B,GAGUF,OAHV,CAG9BE,aAH8B;AAAA,UAGf7G,OAHe,GAGU2G,OAHV,CAGf3G,OAHe;AAAA,UAGN5B,OAHM,GAGUuI,OAHV,CAGNvI,OAHM;AAAA,UAGG6B,EAHH,GAGU0G,OAHV,CAGG1G,EAHH;AAItC,UAAI,CAAC4G,aAAL,EAAoB;AACpB,UAAIA,aAAa,CAAC,OAAD,CAAb,KAA2B,4BAA/B,EAA6D;AAC7D,UAAI7G,OAAO,CAAC,OAAD,CAAP,KAAqB,cAAzB,EAAyC;AANH,UAQ9BI,KAR8B,GAQpBJ,OARoB,CAQ9BI,KAR8B;AAStC,UAAI,CAACA,KAAL,EAAY;AAEZ,UAAMmD,IAAI,GAAGlH,OAAO,CAAC+D,KAAK,CAACoF,KAAP,EAAcjJ,UAAd,CAApB;AACA,UAAI,CAACgH,IAAL,EAAW;AAZ2B,UAcvBF,IAduB,GAcdE,IAdc,CAc9BnD,KAd8B;AAetC,UAAI,CAACiD,IAAL,EAAW;AACX,UAAIA,IAAI,CAACuD,IAAT,EAAe;AAEfvD,MAAAA,IAAI,CAACuD,IAAL,GAAYA,IAAZ;AACAlK,MAAAA,SAAS,CAACoK,eAAV,CAA0B1I,OAA1B,EAAmC6B,EAAnC,EAAuCoD,IAAI,CAACpD,EAA5C;AACH,KAh6BkB;;AAAA,UAq9BnBI,WAr9BmB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAq9BL,kBAAOL,OAAP,EAAgB+G,UAAhB,EAA4BC,QAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,+BAC2B,MAAK/I,KADhC,EACFC,MADE,gBACFA,MADE,EACMyC,gBADN,gBACMA,gBADN;;AAAA,oBAGLzC,MAHK;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,oBAIL8B,OAJK;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA,uBAOAxD,QAAQ,CAACyK,qBAAT,2CAAkE/I,MAAlE,EAPA;;AAAA;AAAA;AAAA,uBASerB,eAAe,CAAC0E,IAAhB,CAAqB;AACtC,2BAAS,aAD6B;AAEtCnD,kBAAAA,OAAO,EAAEF,MAF6B;AAGtC8D,kBAAAA,mBAAmB,EAAErB,gBAHiB;AAItCuG,kBAAAA,qBAAqB,EAAElH;AAJe,iBAArB,CATf;;AAAA;AASAM,gBAAAA,MATA;;AAgBN,sBAAKxB,QAAL,CAAc;AAAE6B,kBAAAA,gBAAgB,EAAE;AAApB,iBAAd,EAAuC,YAAM;AACzC,sBAAIoG,UAAJ,EAAgB;AACZ,0BAAK3H,SAAL;AACH;AACJ,iBAJD,EAhBM,CAqBN;;;AAEAvC,gBAAAA,eAAe,CAAC0E,IAAhB,CAAqB;AACjB,2BAAS,cADQ;AAEjBnD,kBAAAA,OAAO,EAAEF,MAFQ;AAGjBG,kBAAAA,WAAW,EAAE,CAACiC,MAAM,CAACL,EAAR;AAHI,iBAArB;AAMA+G,gBAAAA,QAAQ,CAAC1G,MAAD,CAAR;AA7BM;AAAA;;AAAA;AAAA;AAAA;AA+BN6G,gBAAAA,KAAK,CAAC,uBAAuBC,IAAI,CAACC,SAAL,cAAxB,CAAL;;AA/BM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAr9BK;;AAAA;AAAA;AAAA;AAAA;;AAAA,UAw/BnBC,iBAx/BmB,GAw/BC,UAAAC,KAAK,EAAI;AACzB,UAAI,CAACA,KAAL,EAAY;;AAEZ,YAAKxH,gBAAL;;AACA1C,MAAAA,QAAQ,CAAC2G,WAAT,CAAqB,YAArB,EAAmC,KAAnC,EAA0CuD,KAAK,CAACC,MAAhD;;AACA,YAAKxI,WAAL;AACH,KA9/BkB;;AAAA,UAggCnBA,WAhgCmB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAggCL,kBAAM4F,KAAN;AAAA;AAAA;AAAA;AAAA;AACV,sBAAK6C,SAAL;;AACA,sBAAKC,QAAL;;AAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAhgCK;;AAAA;AAAA;AAAA;AAAA;;AAAA,UAqgCnBhD,iBArgCmB,GAqgCC,YAAM;AACtB,UAAIiD,WAAW,GAAG,EAAlB;AACA,UAAIC,UAAU,GAAG,EAAjB;;AAFsB;AAAA,UAIdxD,SAJc,0BAIdA,SAJc;AAAA,UAIHyD,KAJG,0BAIHA,KAJG;;AAKtB,UAAIA,KAAJ,EAAW;AAAA,YACDC,cADC,GACgCD,KADhC,CACDC,cADC;AAAA,YACeC,YADf,GACgCF,KADhC,CACeE,YADf;;AAEP,YAAID,cAAc,KAAKC,YAAvB,EAAqC;AAAA,cACzBC,aADyB,GACPF,cADO,CACzBE,aADyB;;AAEjC,cAAIA,aAAa,IAAIA,aAAa,CAACC,QAAd,KAA2B,GAAhD,EAAqD;AACjDN,YAAAA,WAAW,GAAGK,aAAa,CAAClI,SAA5B;AACA8H,YAAAA,UAAU,GAAGI,aAAa,CAACE,IAA3B;AACH;AACJ;AACJ;;AAED,UAAI,CAACP,WAAD,IAAgBvD,SAAhB,IAA6B,CAACA,SAAS,CAACC,WAA5C,EAAyD;AACrDsD,QAAAA,WAAW,GAAGvD,SAAS,CAACE,QAAV,EAAd;AACH;;AAED,YAAKxF,QAAL,CAAc;AACVkC,QAAAA,WAAW,EAAE,IADH;AAEV4G,QAAAA,UAAU,EAAVA,UAFU;AAGVD,QAAAA,WAAW,EAAXA;AAHU,OAAd;AAKH,KA9hCkB;;AAAA,UAgiCnBQ,kBAhiCmB,GAgiCE,YAAM;AACvB,YAAKrJ,QAAL,CACI;AACIkC,QAAAA,WAAW,EAAE;AADjB,OADJ,EAII,YAAM;AACF,cAAKjB,gBAAL;AACH,OANL;AAQH,KAziCkB;;AAAA,UAkkCnBjE,UAlkCmB,GAkkCN,YAAM;AACf,UAAM+D,OAAO,GAAG,MAAKtC,aAAL,CAAmBC,OAAnC;AACA,UAAI,CAACqC,OAAL,EAAc;;AACd,UAAI,CAACA,OAAO,CAACuI,UAAR,CAAmBrG,MAAxB,EAAgC;AAC5BlC,QAAAA,OAAO,CAACwI,KAAR;AACA;AACH;;AAED,UAAMC,YAAY,GAAGzM,gBAAgB,CAACgE,OAAD,CAArC;;AACA,UAAI,CAACyI,YAAL,EAAmB;AACf;AACH;;AAED,UAAMT,KAAK,GAAGxK,QAAQ,CAACkL,WAAT,EAAd;AACAV,MAAAA,KAAK,CAACW,QAAN,CAAeF,YAAf,EAA6BA,YAAY,CAACvG,MAA1C;AACA8F,MAAAA,KAAK,CAACY,QAAN,CAAe,IAAf;AAEA,UAAMrE,SAAS,GAAGsE,MAAM,CAACC,YAAP,EAAlB;AACAvE,MAAAA,SAAS,CAACwE,eAAV;AACAxE,MAAAA,SAAS,CAACyE,QAAV,CAAmBhB,KAAnB;AAEAhI,MAAAA,OAAO,CAACwI,KAAR;AACH,KAxlCkB;;AAAA,UA0lCnBS,mBA1lCmB,GA0lCG,YAAM;AACxB,YAAKX,kBAAL;AACH,KA5lCkB;;AAAA,UA8lCnBY,iBA9lCmB,GA8lCC,UAAClH,IAAD,EAAOmH,GAAP,EAAe;AAC/B,YAAKb,kBAAL;;AACAlJ,MAAAA,UAAU,CAAC,YAAM;AACb;AADa;AAAA,YAEL4I,KAFK,0BAELA,KAFK;;AAGb,YAAIA,KAAJ,EAAW;AAAA,cACCC,cADD,GACkCD,KADlC,CACCC,cADD;AAAA,cACiBC,YADjB,GACkCF,KADlC,CACiBE,YADjB;;AAEP,cAAID,cAAc,IAAIA,cAAc,KAAKC,YAAzC,EAAuD;AAAA,gBAC3CkB,UAD2C,GAC5BnB,cAD4B,CAC3CmB,UAD2C;;AAEnD,gBAAIA,UAAU,IAAIA,UAAU,CAAChB,QAAX,KAAwB,GAA1C,EAA+C;AAC3CgB,cAAAA,UAAU,CAACf,IAAX,GAAkBc,GAAlB;AACAC,cAAAA,UAAU,CAACC,KAAX,GAAmBF,GAAnB;AACAC,cAAAA,UAAU,CAACnJ,SAAX,GAAuB+B,IAAvB,CAH2C,CAK3C;;AAL2C,kBAMnCsH,SANmC,GAMrBF,UANqB,CAMnCE,SANmC;;AAO3C,kBAAIA,SAAJ,EAAe;AACX,oBAAMtB,MAAK,GAAGxK,QAAQ,CAACkL,WAAT,EAAd;;AACAV,gBAAAA,MAAK,CAACW,QAAN,CAAeW,SAAf,EAA0BA,SAAS,CAACC,WAAV,CAAsBrH,MAAhD;;AACA8F,gBAAAA,MAAK,CAACwB,MAAN,CAAaF,SAAb,EAAwBA,SAAS,CAACC,WAAV,CAAsBrH,MAA9C;;AAEA,oBAAMqC,SAAS,GAAG/G,QAAQ,CAACsL,YAAT,EAAlB;AACAvE,gBAAAA,SAAS,CAACwE,eAAV;AACAxE,gBAAAA,SAAS,CAACyE,QAAV,CAAmBhB,MAAnB;AACH;;AACD;AACH;AACJ;AACJ,SA1BY,CA4Bb;;;AACA,YAAMyB,IAAI,qBAAcN,GAAd,oBAA2BA,GAA3B,wDAA4EnH,IAA5E,SAAV;AACAxE,QAAAA,QAAQ,CAAC2G,WAAT,CAAqB,cAArB,EAAqC,KAArC,EAA4C,IAA5C;AACA3G,QAAAA,QAAQ,CAAC2G,WAAT,CAAqB,YAArB,EAAmC,KAAnC,EAA0CsF,IAA1C;AACH,OAhCS,EAgCP,CAhCO,CAAV;AAiCH,KAjoCkB;;AAAA,UAmoCnBC,qBAnoCmB,GAmoCK,YAAM;AAC1B,YAAKC,oBAAL;AACH,KAroCkB;;AAAA,UAuoCnBC,eAvoCmB,GAuoCD,UAACjH,OAAD,EAAUxC,OAAV,EAAsB;AACpC,UAAIA,OAAJ,EAAa;AACT,cAAK0J,gBAAL,CAAsB1J,OAAtB;;AACA;AACH;;AAED,YAAK0C,kBAAL,CAAwBF,OAAxB;AACH,KA9oCkB;;AAAA,UAgpCnBmH,eAhpCmB,GAgpCD,UAAC3J,OAAD,EAAUqD,IAAV,EAAmB;AACjC,YAAKmG,oBAAL,CAA0B,KAA1B;;AAEA,cAAQxJ,OAAO,CAAC,OAAD,CAAf;AACI,aAAK,mBAAL;AAA0B;AACtB,kBAAK2F,eAAL,CAAqB3F,OAArB,EAA8BqD,IAA9B;;AACA;AACH;;AACD,aAAK,mBAAL;AAA0B;AACtB,kBAAKI,eAAL,CAAqBzD,OAArB,EAA8BqD,IAA9B;;AACA;AACH;;AACD,aAAK,sBAAL;AAA6B;AACzB,kBAAKS,kBAAL,CAAwB9D,OAAxB,EAAiCqD,IAAjC;;AACA;AACH;AAZL;AAcH,KAjqCkB;;AAAA,UAurCnBuG,iBAvrCmB,GAurCC,YAAM;AACtB3K,MAAAA,UAAU,CAAC;AAAA,eAAM,MAAKc,gBAAL,EAAN;AAAA,OAAD,EAAgC,CAAhC,CAAV;AACH,KAzrCkB;;AAGf,UAAK6D,iBAAL,GAAyBpJ,KAAK,CAACqP,SAAN,EAAzB;AACA,UAAKhH,cAAL,GAAsBrI,KAAK,CAACqP,SAAN,EAAtB;AACA,UAAKtM,aAAL,GAAqB/C,KAAK,CAACqP,SAAN,EAArB;;AAEA,QAAM3L,OAAM,GAAG1B,QAAQ,CAACsN,SAAT,EAAf;;AAEA,UAAK7L,KAAL,GAAa;AACTC,MAAAA,MAAM,EAANA,OADS;AAETyC,MAAAA,gBAAgB,EAAEjF,4BAA4B,CAACwC,OAAD,CAFrC;AAGTC,MAAAA,aAAa,EAAE,CAHN;AAIT4L,MAAAA,QAAQ,EAAE;AAJD,KAAb;AAOA1M,IAAAA,QAAQ,CAAC2G,WAAT,CAAqB,2BAArB,EAAkD,KAAlD,EAAyD,IAAzD;AAhBe;AAiBlB;;;;0CAEqBgG,S,EAAWC,S,EAAW;AAAA,UAChCC,CADgC,GAC1B,KAAK/M,KADqB,CAChC+M,CADgC;AAAA,yBAEmE,KAAKjM,KAFxE;AAAA,UAEhCC,MAFgC,gBAEhCA,MAFgC;AAAA,UAExBuI,QAFwB,gBAExBA,QAFwB;AAAA,UAEd7I,KAFc,gBAEdA,KAFc;AAAA,UAEP+C,gBAFO,gBAEPA,gBAFO;AAAA,UAEWxC,aAFX,gBAEWA,aAFX;AAAA,UAE0BU,aAF1B,gBAE0BA,aAF1B;AAAA,UAEyCmC,WAFzC,gBAEyCA,WAFzC;AAAA,UAEsD+I,QAFtD,gBAEsDA,QAFtD;;AAIxC,UAAIC,SAAS,CAACE,CAAV,KAAgBA,CAApB,EAAuB;AACnB,eAAO,IAAP;AACH;;AAED,UAAID,SAAS,CAAC/L,MAAV,KAAqBA,MAAzB,EAAiC;AAC7B,eAAO,IAAP;AACH;;AAED,UAAI+L,SAAS,CAACxD,QAAV,KAAuBA,QAA3B,EAAqC;AACjC,eAAO,IAAP;AACH;;AAED,UAAIwD,SAAS,CAACrM,KAAV,KAAoBA,KAAxB,EAA+B;AAC3B,eAAO,IAAP;AACH;;AAED,UAAIqM,SAAS,CAACtJ,gBAAV,KAA+BA,gBAAnC,EAAqD;AACjD,eAAO,IAAP;AACH;;AAED,UAAIsJ,SAAS,CAAC9L,aAAV,KAA4BA,aAAhC,EAA+C;AAC3C,eAAO,IAAP;AACH;;AAED,UAAI8L,SAAS,CAACF,QAAV,KAAuBA,QAA3B,EAAqC;AACjC,eAAO,IAAP;AACH;;AAED,UAAIE,SAAS,CAACjJ,WAAV,KAA0BA,WAA9B,EAA2C;AACvC,eAAO,IAAP;AACH;;AAED,UAAIiJ,SAAS,CAACpL,aAAV,KAA4BA,aAAhC,EAA+C;AAC3C,eAAO,IAAP;AACH;;AAED,aAAO,KAAP;AACH;;;gCAEW;AACR,WAAKoC,QAAL;AACA,WAAKL,aAAL;AACA,WAAK5B,WAAL;AACH;;;gCAEW;AAAA,yBAC4C,KAAKf,KADjD;AAAA,UACAC,MADA,gBACAA,MADA;AAAA,UACQC,aADR,gBACQA,aADR;AAAA,UACuBwC,gBADvB,gBACuBA,gBADvB;AAGR,UAAMd,OAAO,GAAG,KAAKtC,aAAL,CAAmBC,OAAnC;AACA,UAAI,CAACqC,OAAL,EAAc;AAEd,UAAI6B,SAAS,GAAG,IAAhB;;AACA,UAAIvD,aAAJ,EAAmB;AACfuD,QAAAA,SAAS,GAAG,KAAKX,cAAL,GAAsB,KAAKA,cAAL,CAAoBW,SAA1C,GAAsD,IAAlE;AACH,OAFD,MAEO;AACHA,QAAAA,SAAS,GAAG7B,OAAO,CAAC6B,SAApB;AACH;;AAED,UAAMJ,YAAY,GAAG,KAAKG,eAAL,CAAqBvD,MAArB,EAA6ByC,gBAA7B,EAA+Ce,SAA/C,CAArB;AACA,WAAKN,mBAAL,CAAyBE,YAAzB;AACH;;;wCASmB;AAChBjE,MAAAA,QAAQ,CAAC8M,gBAAT,CAA0B,iBAA1B,EAA6C,KAAK/M,uBAAlD,EAA2E,IAA3E;AAEAZ,MAAAA,QAAQ,CAAC4N,EAAT,CAAY,oBAAZ,EAAkC,KAAKvJ,oBAAvC;AACArE,MAAAA,QAAQ,CAAC4N,EAAT,CAAY,yBAAZ,EAAuC,KAAK3L,yBAA5C;AACAjC,MAAAA,QAAQ,CAAC4N,EAAT,CAAY,yBAAZ,EAAuC,KAAKlL,yBAA5C;AACAzC,MAAAA,SAAS,CAAC2N,EAAV,CAAa,wBAAb,EAAuC,KAAK/K,wBAA5C;AACA3C,MAAAA,SAAS,CAAC0N,EAAV,CAAa,uBAAb,EAAsC,KAAK1M,uBAA3C;AACAf,MAAAA,YAAY,CAACyN,EAAb,CAAgB,mBAAhB,EAAqC,KAAK3J,mBAA1C;AACA9D,MAAAA,YAAY,CAACyN,EAAb,CAAgB,sBAAhB,EAAwC,KAAKpM,sBAA7C;AACApB,MAAAA,YAAY,CAACwN,EAAb,CAAgB,yBAAhB,EAA2C,KAAK7K,yBAAhD;AAEA,WAAKD,SAAL;AACH;;;2CAEsB;AACnB,WAAKF,SAAL;AAEA5C,MAAAA,QAAQ,CAAC6N,GAAT,CAAa,oBAAb,EAAmC,KAAKxJ,oBAAxC;AACArE,MAAAA,QAAQ,CAAC6N,GAAT,CAAa,yBAAb,EAAwC,KAAK5L,yBAA7C;AACAjC,MAAAA,QAAQ,CAAC6N,GAAT,CAAa,yBAAb,EAAwC,KAAKnL,yBAA7C;AACAzC,MAAAA,SAAS,CAAC4N,GAAV,CAAc,wBAAd,EAAwC,KAAKhL,wBAA7C;AACA3C,MAAAA,SAAS,CAAC2N,GAAV,CAAc,uBAAd,EAAuC,KAAK3M,uBAA5C;AACAf,MAAAA,YAAY,CAAC0N,GAAb,CAAiB,mBAAjB,EAAsC,KAAK5J,mBAA3C;AACA9D,MAAAA,YAAY,CAAC0N,GAAb,CAAiB,sBAAjB,EAAyC,KAAKrM,sBAA9C;AACApB,MAAAA,YAAY,CAACyN,GAAb,CAAiB,yBAAjB,EAA4C,KAAK9K,yBAAjD;AAEAlC,MAAAA,QAAQ,CAACiN,mBAAT,CAA6B,iBAA7B,EAAgD,KAAKlN,uBAArD,EAA8E,IAA9E;AACH;;;+CAiD0B;AACvB,UAAMyC,OAAO,GAAG,KAAKtC,aAAL,CAAmBC,OAAnC;AACA,UAAI,CAACqC,OAAL,EAAc;AAFS,UAIfkB,cAJe,GAII,IAJJ,CAIfA,cAJe;;AAMvB,UAAIA,cAAJ,EAAoB;AAChBlB,QAAAA,OAAO,CAAC6B,SAAR,GAAoBX,cAAc,CAACW,SAAnC;;AAEA,YAAI,CAACX,cAAc,CAAC8G,KAApB,EAA2B;AACvB,eAAK/L,UAAL;AACA;AACH;;AAED,YAAMsI,SAAS,GAAG/G,QAAQ,CAACsL,YAAT,EAAlB;AACAvE,QAAAA,SAAS,CAACwE,eAAV;AACAxE,QAAAA,SAAS,CAACyE,QAAV,CAAmB9H,cAAc,CAAC8G,KAAlC;AAEAhI,QAAAA,OAAO,CAACwI,KAAR;AACH,OAbD,MAaO;AACHxI,QAAAA,OAAO,CAAC6B,SAAR,GAAoB,IAApB;AACA,aAAK5F,UAAL;AACH;;AAED,WAAKkD,WAAL;AACH;;;4CAEuB;AACpB,UAAMa,OAAO,GAAG,KAAKtC,aAAL,CAAmBC,OAAnC;AACA,UAAI,CAACqC,OAAL,EAAc;AAEd,WAAKkB,cAAL,GAAsB;AAClBW,QAAAA,SAAS,EAAE7B,OAAO,CAAC6B,SADD;AAElBmG,QAAAA,KAAK,EAAE,KAAKA;AAFM,OAAtB;AAIH;;;qCAiHgB;AAAA,yBACqB,KAAK5J,KAD1B;AAAA,UACLC,MADK,gBACLA,MADK;AAAA,UACGC,aADH,gBACGA,aADH;AAGb,UAAMwI,OAAO,GAAGhK,YAAY,CAACiF,GAAb,CAAiB1D,MAAjB,EAAyBC,aAAzB,CAAhB;AACA,UAAI,CAACwI,OAAL,EAAc;AAJD,UAML3G,OANK,GAMO2G,OANP,CAML3G,OANK;AAOb,UAAI,CAACA,OAAL,EAAc;AAPD,UASL6B,IATK,GASa7B,OATb,CASL6B,IATK;AAAA,UASCW,OATD,GASaxC,OATb,CASCwC,OATD;AAUb,UAAI,CAACX,IAAD,IAAS,CAACW,OAAd,EAAuB;AAEvB,UAAM3C,OAAO,GAAG,KAAKtC,aAAL,CAAmBC,OAAnC;;AAEA,UAAIqE,IAAJ,EAAU;AACN,aAAKV,gBAAL,CAAsBU,IAAtB;AACH,OAFD,MAEO,IAAIW,OAAJ,EAAa;AAChB,aAAKrB,gBAAL,CAAsBqB,OAAtB;AACH,OAFM,MAEA;AACH3C,QAAAA,OAAO,CAACC,SAAR,GAAoB,IAApB;AACH;AACJ;;;qCAEgBoB,a,EAAe;AAAA,UACpBgJ,CADoB,GACd,KAAK/M,KADS,CACpB+M,CADoB;AAE5B,UAAMrK,OAAO,GAAG,KAAKtC,aAAL,CAAmBC,OAAnC;;AAEA,UAAI,CAAC0D,aAAL,EAAoB;AAChBrB,QAAAA,OAAO,CAACC,SAAR,GAAoB,IAApB;AACA;AACH;;AAP2B,UASpB+B,IAToB,GASDX,aATC,CASpBW,IAToB;AAAA,UASdC,QATc,GASDZ,aATC,CASdY,QATc;;AAU5B,UAAI;AACA,YAAMyI,KAAK,GAAGpO,QAAQ,CAAC0F,IAAD,EAAOC,QAAP,EAAiBoI,CAAjB,CAAtB;AACArK,QAAAA,OAAO,CAAC6B,SAAR,GAAoB,IAApB;AACA6I,QAAAA,KAAK,CAACnH,OAAN,CAAc,UAAAoH,CAAC,EAAI;AACf3K,UAAAA,OAAO,CAAC4K,WAAR,CAAoBD,CAApB;AACH,SAFD;AAGH,OAND,CAME,OAAOE,CAAP,EAAU;AACR7K,QAAAA,OAAO,CAACC,SAAR,GAAoB+B,IAApB;AACH;AACJ;;;;;;iDAiHgBwB,I,EAAMsH,U;;;;;;oBACdtH,I;;;;;kDAAa,I;;;AAEZb,gBAAAA,O,GAAU,KAAKjF,aAAL,CAAmBC,OAAnB,CAA2BkE,S;;AAC3C,oBAAIc,OAAJ,EAAa;AACT,uBAAKjF,aAAL,CAAmBC,OAAnB,CAA2BkE,SAA3B,GAAuC,IAAvC;AACA,uBAAK1C,WAAL;AACH;;qBAEa2L,U;;;;;;uBACF3O,qBAAqB,CAACqH,IAAD,C;;;;;;;;;uBACrBtH,wBAAwB,CAACsH,IAAD,C;;;;;;AAF9BuH,gBAAAA,K;kDAIC;AACHvH,kBAAAA,IAAI,EAAJA,IADG;AAEHuH,kBAAAA,KAAK,EAALA,KAFG;AAGHpI,kBAAAA,OAAO,EAAPA;AAHG,iB;;;;;;;;;;;;;;;;;;gCAyEC;AAAA,yBAC0B,KAAKvE,KAD/B;AAAA,UACAC,MADA,gBACAA,MADA;AAAA,UACQC,aADR,gBACQA,aADR;AAER,UAAMwD,IAAI,GAAGlF,SAAS,CAACmF,GAAV,CAAc1D,MAAd,CAAb;AACA,UAAI,CAACyD,IAAL,EAAW;AAEX,UAAM9B,OAAO,GAAG,KAAKtC,aAAL,CAAmBC,OAAnC;AACA,UAAI,CAACqC,OAAL,EAAc;AANN,UAQA6B,SARA,GAQc7B,OARd,CAQA6B,SARA;;AASR,UAAIA,SAAS,KAAK,MAAd,IAAwBA,SAAS,KAAK,iBAA1C,EAA6D;AACzD7B,QAAAA,OAAO,CAAC6B,SAAR,GAAoB,IAApB;AACH;;AAXO,UAYA5B,SAZA,GAYcD,OAZd,CAYAC,SAZA;AAcR,UAAI,CAACA,SAAL,EAAgB;AAChB,UAAInE,QAAQ,CAACuC,MAAD,CAAZ,EAAsB;AACtB,UAAIC,aAAJ,EAAmB;AAEnB,UAAM0M,aAAa,GAAGlJ,IAAI,CAACpG,mBAAL,KAA6BoG,IAAI,CAACpG,mBAAL,GAA2B,IAAIA,mBAAJ,CAAwBoG,IAAI,CAAC1B,EAA7B,CAAxD,CAAtB;AACA4K,MAAAA,aAAa,CAACpD,SAAd,CAAwB;AAAE,iBAAS;AAAX,OAAxB;AACH;;;+BAEU;AAAA,UACCtJ,aADD,GACmB,KAAKF,KADxB,CACCE,aADD;AAEP,UAAM2B,SAAS,GAAG,KAAKvC,aAAL,CAAmBC,OAAnB,CAA2BsC,SAA7C;;AACA,UAAI,CAACA,SAAD,IAAcA,SAAS,CAACiC,MAAV,GAAmB,EAAjC,IAAuC5D,aAA3C,EAA0D;AAAA,YAC9CqC,IAD8C,GACrC5D,YADqC,CAC9C4D,IAD8C;;AAEtD,YAAIA,IAAJ,EAAU;AACN3D,UAAAA,eAAe,CAAC0D,YAAhB,CAA6B;AACzB,qBAAS,+BADgB;AAEzBC,YAAAA,IAAI,EAAE;AAFmB,WAA7B;AAIH;;AAED;AACH;;AAED,UAAMsK,EAAE,GAAGC,WAAW,CAACC,GAAZ,EAAX;AACA,UAAMC,KAAK,GAAGrQ,UAAU,EAAxB;AACA,UAAIsQ,KAAK,GAAGD,KAAK,CAACE,IAAN,CAAWrL,SAAX,CAAZ;AACA,UAAMsL,EAAE,GAAGL,WAAW,CAACC,GAAZ,EAAX,CAlBO,CAmBP;;AACA,UAAI,CAACE,KAAD,IAAUpL,SAAS,KAAKoL,KAAK,CAAC,CAAD,CAAjC,EAAsC;AAAA,YAC1B1K,KAD0B,GACjB5D,YADiB,CAC1B4D,IAD0B;;AAElC,YAAIA,KAAJ,EAAU;AACN3D,UAAAA,eAAe,CAAC0D,YAAhB,CAA6B;AACzB,qBAAS,+BADgB;AAEzBC,YAAAA,IAAI,EAAE;AAFmB,WAA7B;AAIH;;AAED;AACH;;AAED,UAAM6K,SAAS,GAAGC,IAAI,CAACN,GAAL,EAAlB;AACAnO,MAAAA,eAAe,CAAC0E,IAAhB,CAAqB;AACjB,iBAAS,aADQ;AAEjBgG,QAAAA,KAAK,EAAE2D,KAAK,CAAC,CAAD,CAFK;AAGjBK,QAAAA,KAAK,EAAE;AAHU,OAArB,EAIGC,IAJH,CAIQ,UAAAC,QAAQ,EAAI;AAChB5O,QAAAA,eAAe,CAAC0D,YAAhB,CAA6B;AACzB,mBAAS,+BADgB;AAEzBC,UAAAA,IAAI,EAAE;AACF6K,YAAAA,SAAS,EAATA,SADE;AAEF9D,YAAAA,KAAK,EAAE2D,KAAK,CAAC,CAAD,CAFV;AAGFO,YAAAA,QAAQ,EAARA;AAHE;AAFmB,SAA7B;AAQH,OAbD;AAeA5O,MAAAA,eAAe,CAAC0E,IAAhB,CAAqB;AACjB,iBAAS,gBADQ;AAEjBgG,QAAAA,KAAK,EAAE2D,KAAK,CAAC,CAAD,CAFK;AAGjBK,QAAAA,KAAK,EAAE;AAHU,OAArB,EAIGC,IAJH,CAIQ,UAAAC,QAAQ,EAAI;AAChB5O,QAAAA,eAAe,CAAC0D,YAAhB,CAA6B;AACzB,mBAAS,gCADgB;AAEzBC,UAAAA,IAAI,EAAE;AACF6K,YAAAA,SAAS,EAATA,SADE;AAEF9D,YAAAA,KAAK,EAAE2D,KAAK,CAAC,CAAD,CAFV;AAGFO,YAAAA,QAAQ,EAARA;AAHE;AAFmB,SAA7B;AAQH,OAbD;AAcH;;;;;;iDA2LqB7N,K;;;;;;oBACbA,K;;;;;;;;oBACAA,KAAK,CAACmE,M;;;;;;;;sBAEPnE,KAAK,CAACmE,MAAN,KAAiB,C;;;;;;uBACK,KAAKmB,UAAL,CAAgBtF,KAAK,CAAC,CAAD,CAArB,EAA0BA,KAAK,CAAC,CAAD,CAAL,CAAS8N,IAAT,CAAcC,UAAd,CAAyB,OAAzB,CAA1B,C;;;AAAhBxI,gBAAAA,O;;oBACDA,O;;;;;;;;AAEL,qBAAKrE,QAAL,CAAc;AACVD,kBAAAA,aAAa,EAAE,IADL;AAEVsE,kBAAAA,OAAO,EAAPA;AAFU,iBAAd;;;;;AAKA,qBAAKrE,QAAL,CAAc;AAAElB,kBAAAA,KAAK,EAALA;AAAF,iBAAd;;;;;;;;;;;;;;;;;;qCAwFSoC,O,EAAS;AAAA,yBACY,KAAK/B,KADjB;AAAA,UACdC,MADc,gBACdA,MADc;AAAA,UACNC,aADM,gBACNA,aADM,EAEtB;;AAEA,UAAI,CAACD,MAAL,EAAa;AACb,UAAI,CAACC,aAAL,EAAoB;AACpB,UAAI,CAAC6B,OAAL,EAAc;AAEdnD,MAAAA,eAAe,CAAC0E,IAAhB,CAAqB;AACjB,iBAAS,kBADQ;AAEjBnD,QAAAA,OAAO,EAAEF,MAFQ;AAGjB0N,QAAAA,UAAU,EAAEzN,aAHK;AAIjB+I,QAAAA,qBAAqB,EAAElH;AAJN,OAArB;AAMH;;;uCAEkBwC,O,EAAS;AAAA,0BACU,KAAKvE,KADf;AAAA,UAChBC,MADgB,iBAChBA,MADgB;AAAA,UACRC,aADQ,iBACRA,aADQ;AAGxB,UAAI,CAACD,MAAL,EAAa;AACb,UAAI,CAACC,aAAL,EAAoB;AACpB,UAAI,CAACqE,OAAL,EAAc;AAEd3F,MAAAA,eAAe,CAAC0E,IAAhB,CAAqB;AACjB,iBAAS,oBADQ;AAEjBnD,QAAAA,OAAO,EAAEF,MAFQ;AAGjB0N,QAAAA,UAAU,EAAEzN,aAHK;AAIjBqE,QAAAA,OAAO,EAAPA;AAJiB,OAArB;AAMH;;;;;;iDAEqBxC,O,EAASgH,Q;;;;;;;gCACO,KAAK/I,K,EAA/BC,M,iBAAAA,M,EAAQC,a,iBAAAA,a;;oBAEXD,M;;;;;;;;oBACAC,a;;;;;;;;oBACA6B,O;;;;;;;;;;uBAGoBnD,eAAe,CAAC0E,IAAhB,CAAqB;AACtC,2BAAS,iBAD6B;AAEtCnD,kBAAAA,OAAO,EAAEF,MAF6B;AAGtC0N,kBAAAA,UAAU,EAAEzN,aAH0B;AAItC+I,kBAAAA,qBAAqB,EAAElH;AAJe,iBAArB,C;;;AAAfM,gBAAAA,M;AAON0G,gBAAAA,QAAQ,CAAC1G,MAAD,CAAR;;;;;;;;;;;;;;;;;;;;;;oCA2FQ;AACZ,WAAK8D,SAAL,GAAiB/G,QAAQ,CAACsL,YAAT,EAAjB;AACA,UAAI,CAAC,KAAKvE,SAAV,EAAqB;AACrB,UAAI,CAAC,KAAKA,SAAL,CAAeyH,UAApB,EAAgC;AAEhC,WAAKhE,KAAL,GAAa,KAAKzD,SAAL,CAAe0H,UAAf,CAA0B,CAA1B,CAAb;AACH;;;uCAEkB;AAAA,UACPjE,KADO,GACG,IADH,CACPA,KADO;;AAGf,UAAI,CAACA,KAAL,EAAY;AACR,aAAK/L,UAAL;AACA;AACH;;AAED,UAAMsI,SAAS,GAAG/G,QAAQ,CAACsL,YAAT,EAAlB;AACAvE,MAAAA,SAAS,CAACwE,eAAV;AACAxE,MAAAA,SAAS,CAACyE,QAAV,CAAmBhB,KAAnB;AAEA,WAAKtK,aAAL,CAAmBC,OAAnB,CAA2B6K,KAA3B;AACH;;;2CAmGmC;AAAA;;AAAA,UAAf0D,MAAe,uEAAN,IAAM;AAAA,UACxB5I,OADwB,GACZ,KAAKlF,KADO,CACxBkF,OADwB;AAGhC,WAAKrE,QAAL,CACI;AACID,QAAAA,aAAa,EAAE,KADnB;AAEIsE,QAAAA,OAAO,EAAE;AAFb,OADJ,EAKI,YAAM;AACF,YAAI4I,MAAM,IAAI5I,OAAV,IAAqBA,OAAO,CAACX,OAAjC,EAA0C;AACtC,UAAA,MAAI,CAACjF,aAAL,CAAmBC,OAAnB,CAA2BkE,SAA3B,GAAuCyB,OAAO,CAACX,OAA/C;;AACA,UAAA,MAAI,CAAC1G,UAAL;;AACA,UAAA,MAAI,CAACkD,WAAL;AACH,SAJD,MAIO;AACH,UAAA,MAAI,CAACe,gBAAL;AACH;AACJ,OAbL;AAeH;;;6BAMQ;AAAA,UACGmK,CADH,GACS,KAAK/M,KADd,CACG+M,CADH;AAAA,0BAaD,KAAKjM,KAbJ;AAAA,UAGDC,MAHC,iBAGDA,MAHC;AAAA,UAIDC,aAJC,iBAIDA,aAJC;AAAA,UAKDgF,OALC,iBAKDA,OALC;AAAA,UAMDxC,gBANC,iBAMDA,gBANC;AAAA,UAOD/C,KAPC,iBAODA,KAPC;AAAA,UAQD6I,QARC,iBAQDA,QARC;AAAA,UASDkB,WATC,iBASDA,WATC;AAAA,UAUDC,UAVC,iBAUDA,UAVC;AAAA,UAWD5G,WAXC,iBAWDA,WAXC;AAAA,UAYDnC,aAZC,iBAYDA,aAZC;AAeL,UAAMmN,cAAc,GAAG7N,aAAa,GAAG,CAAhB,IAAqB,CAAC/B,aAAa,CAAC8B,MAAD,EAASC,aAAT,CAA1D;AAEA,aACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AACI,QAAA,MAAM,EAAED,MADZ;AAEI,QAAA,SAAS,EAAEyC,gBAFf;AAGI,QAAA,aAAa,EAAE9B,aAAa,GAAG,CAAH,GAAOV,aAHvC;AAII,QAAA,OAAO,EAAE,KAAKyL,iBAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAOI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,QAAP;AACI,QAAA,QAAQ,EACJ,oBAAC,UAAD;AAAY,UAAA,SAAS,EAAC,sBAAtB;AAA6C,wBAAW,UAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI,oBAAC,iBAAD;AAAmB,QAAA,QAAQ,EAAE,KAAKtC,iBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CADJ,CADJ,EAWI;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,EAAE,EAAC,kBADP;AAEI,QAAA,GAAG,EAAE,KAAK/J,aAFd;AAGI,QAAA,WAAW,EAAEyO,cAAc,GAAG9B,CAAC,CAAC,SAAD,CAAJ,GAAkBA,CAAC,CAAC,SAAD,CAHlD;AAII,QAAA,eAAe,MAJnB;AAKI,QAAA,8BAA8B,MALlC;AAMI,QAAA,SAAS,EAAE,KAAKvF,aANpB;AAOI,QAAA,OAAO,EAAE,KAAKkB,WAPlB;AAQI,QAAA,OAAO,EAAE,KAAK7G,WARlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAXJ,EAuBI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,GAAG,EAAE,KAAK4E,iBADd;AAEI,QAAA,SAAS,EAAC,wBAFd;AAGI,QAAA,IAAI,EAAC,MAHT;AAII,QAAA,QAAQ,EAAC,UAJb;AAKI,QAAA,QAAQ,EAAE,KAAKC,4BALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAQI;AACI,QAAA,GAAG,EAAE,KAAKhB,cADd;AAEI,QAAA,SAAS,EAAC,wBAFd;AAGI,QAAA,IAAI,EAAC,MAHT;AAII,QAAA,QAAQ,EAAC,UAJb;AAKI,QAAA,MAAM,EAAC,SALX;AAMI,QAAA,QAAQ,EAAE,KAAKE,yBANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,EAgBK,CAACkJ,OAAO,CAAC9N,aAAD,CAAR,IACG,oBAAC,YAAD;AACI,QAAA,MAAM,EAAED,MADZ;AAEI,QAAA,aAAa,EAAE,KAAK0E,iBAFxB;AAGI,QAAA,gBAAgB,EAAE,KAAKe,oBAH3B;AAII,QAAA,YAAY,EAAE,KAAKhB,gBAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBR,CAvBJ,CAPJ,CADJ,EA8DI;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AACI,QAAA,SAAS,EAAC,sBADd;AAEI,sBAAW,MAFf;AAGI,QAAA,IAAI,EAAC,OAHT;AAII,QAAA,OAAO,EAAE,KAAKP,YAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKKjE,aAAa,GAAG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GAAkB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALpC,CADJ,CA9DJ,CADJ,EAyEK,CAACvC,aAAa,CAACsC,MAAD,CAAd,IAA0B,oBAAC,gBAAD;AAAkB,QAAA,MAAM,EAAE,KAAKuH,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzE/B,EA0EI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAE7H,KAAzB;AAAgC,QAAA,SAAS,EAAE,KAAK0I,kBAAhD;AAAoE,QAAA,QAAQ,EAAE,KAAKC,iBAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1EJ,EA4EI,oBAAC,aAAD;AACI,QAAA,IAAI,EAAEvF,WADV;AAEI,QAAA,WAAW,EAAE2G,WAFjB;AAGI,QAAA,UAAU,EAAEC,UAHhB;AAII,QAAA,MAAM,EAAE,KAAKmB,iBAJjB;AAKI,QAAA,QAAQ,EAAE,KAAKD,mBALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5EJ,EAmFI,oBAAC,eAAD;AACI,QAAA,IAAI,EAAEjK,aADV;AAEI,QAAA,MAAM,EAAEX,MAFZ;AAGI,QAAA,SAAS,EAAEC,aAHf;AAII,QAAA,OAAO,EAAEgF,OAJb;AAKI,QAAA,MAAM,EAAE,KAAKsG,eALjB;AAMI,QAAA,MAAM,EAAE,KAAKE,eANjB;AAOI,QAAA,QAAQ,EAAE,KAAKJ,qBAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnFJ,CADJ;AA+FH;;;;EA5yCkB9O,S;;AA+yCvB,eAAeE,eAAe,GAAGuC,QAAH,CAA9B","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { PHOTO_SIZE } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\nimport { editMessage, replyMessage } from '../../Actions/Client';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const { chatId, newDraft, files, replyToMessageId, editMessageId, openEditMedia, openEditUrl, sendFile } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n    }\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = () => {\n        const { chatId, editMessageId } = this.state;\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        editMessage(chatId, 0);\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey } = event;\n\n        // console.log('[k] handleKeyDown', altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey);\n\n        switch (keyCode) {\n            // enter\n            case 13: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleSubmit();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 27: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleCancel();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // arrow up\n            case 38: {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n        if (file.blob) return;\n\n        file.blob = blob;\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content);\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n\n        return (\n            <div className='inputbox-background'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className='inputbox-send-button'\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {editMessageId ? <DoneIcon /> : <SendIcon />}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n"]},"metadata":{},"sourceType":"module"}