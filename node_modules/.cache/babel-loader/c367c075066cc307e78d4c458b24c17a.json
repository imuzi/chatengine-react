{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnLeft/UpdatePanel.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nvar UpdatePanel =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UpdatePanel, _React$Component);\n\n  function UpdatePanel(props) {\n    var _this;\n\n    _classCallCheck(this, UpdatePanel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UpdatePanel).call(this, props));\n\n    _this.onClientUpdatePageWidth = function (update) {\n      var isSmallWidth = update.isSmallWidth;\n\n      _this.setState({\n        isSmallWidth: isSmallWidth\n      });\n    };\n\n    _this.onClientUpdateNewContentAvailable = function () {\n      _this.setState({\n        newContentAvailable: true\n      });\n    };\n\n    _this.handleUpdate = function () {\n      if (_this.handled) return;\n      _this.handled = true;\n      setTimeout(function () {\n        window.location.reload();\n      }, 250);\n    };\n\n    var _isSmallWidth = AppStore.isSmallWidth;\n    _this.state = {\n      newContentAvailable: false,\n      isSmallWidth: _isSmallWidth\n    };\n    return _this;\n  }\n\n  _createClass(UpdatePanel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n      AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n      AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          newContentAvailable = _this$state.newContentAvailable,\n          isSmallWidth = _this$state.isSmallWidth;\n      var t = this.props.t;\n\n      if (!newContentAvailable) {\n        return null;\n      }\n\n      return React.createElement(Button, {\n        className: \"update-button\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, isSmallWidth ? React.createElement(DownloadIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }) : t('Update'));\n    }\n  }]);\n\n  return UpdatePanel;\n}(React.Component);\n\nexport default withTranslation()(UpdatePanel);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnLeft/UpdatePanel.js"],"names":["React","withTranslation","Button","DownloadIcon","AppStore","UpdatePanel","props","onClientUpdatePageWidth","update","isSmallWidth","setState","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","setTimeout","window","location","reload","state","on","off","t","Component"],"mappings":";;;;;;;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAO,mBAAP;;IAEMC,W;;;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;;AADe,UAqBnBC,uBArBmB,GAqBO,UAAAC,MAAM,EAAI;AAAA,UACxBC,YADwB,GACPD,MADO,CACxBC,YADwB;;AAGhC,YAAKC,QAAL,CAAc;AAAED,QAAAA,YAAY,EAAZA;AAAF,OAAd;AACH,KAzBkB;;AAAA,UA2BnBE,iCA3BmB,GA2BiB,YAAM;AACtC,YAAKD,QAAL,CAAc;AAAEE,QAAAA,mBAAmB,EAAE;AAAvB,OAAd;AACH,KA7BkB;;AAAA,UA+BnBC,YA/BmB,GA+BJ,YAAM;AACjB,UAAI,MAAKC,OAAT,EAAkB;AAElB,YAAKA,OAAL,GAAe,IAAf;AACAC,MAAAA,UAAU,CAAC,YAAM;AACbC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,OAFS,EAEP,GAFO,CAAV;AAGH,KAtCkB;;AAAA,QAGPT,aAHO,GAGUL,QAHV,CAGPK,YAHO;AAKf,UAAKU,KAAL,GAAa;AACTP,MAAAA,mBAAmB,EAAE,KADZ;AAETH,MAAAA,YAAY,EAAZA;AAFS,KAAb;AALe;AASlB;;;;wCAEmB;AAChBL,MAAAA,QAAQ,CAACgB,EAAT,CAAY,iCAAZ,EAA+C,KAAKT,iCAApD;AACAP,MAAAA,QAAQ,CAACgB,EAAT,CAAY,uBAAZ,EAAqC,KAAKb,uBAA1C;AACH;;;2CAEsB;AACnBH,MAAAA,QAAQ,CAACiB,GAAT,CAAa,iCAAb,EAAgD,KAAKV,iCAArD;AACAP,MAAAA,QAAQ,CAACiB,GAAT,CAAa,uBAAb,EAAsC,KAAKd,uBAA3C;AACH;;;6BAqBQ;AAAA,wBACyC,KAAKY,KAD9C;AAAA,UACGP,mBADH,eACGA,mBADH;AAAA,UACwBH,YADxB,eACwBA,YADxB;AAAA,UAEGa,CAFH,GAES,KAAKhB,KAFd,CAEGgB,CAFH;;AAIL,UAAI,CAACV,mBAAL,EAA0B;AACtB,eAAO,IAAP;AACH;;AAED,aACI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAkC,QAAA,OAAO,EAAC,WAA1C;AAAsD,QAAA,KAAK,EAAC,SAA5D;AAAsE,QAAA,OAAO,EAAE,KAAKC,YAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKJ,YAAY,GAAG,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GAAqBa,CAAC,CAAC,QAAD,CADvC,CADJ;AAKH;;;;EAtDqBtB,KAAK,CAACuB,S;;AAyDhC,eAAetB,eAAe,GAAGI,WAAH,CAA9B","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n"]},"metadata":{},"sourceType":"module"}