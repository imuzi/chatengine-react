{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Player/RepeatButton.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nvar RepeatButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RepeatButton, _React$Component);\n\n  function RepeatButton(props) {\n    var _this;\n\n    _classCallCheck(this, RepeatButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RepeatButton).call(this, props));\n\n    _this.onClientUpdateMediaRepeat = function (update) {\n      var repeat = update.repeat;\n\n      _this.setState({\n        repeat: repeat\n      });\n    };\n\n    _this.handleRepeat = function () {\n      var repeat = _this.state.repeat;\n      var nextRepeat = repeat;\n\n      switch (repeat) {\n        case RepeatEnum.NONE:\n          {\n            nextRepeat = RepeatEnum.REPEAT;\n            break;\n          }\n\n        case RepeatEnum.REPEAT:\n          {\n            nextRepeat = RepeatEnum.REPEAT_ONE;\n            break;\n          }\n\n        case RepeatEnum.REPEAT_ONE:\n          {\n            nextRepeat = RepeatEnum.NONE;\n            break;\n          }\n      }\n\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaRepeat',\n        repeat: nextRepeat\n      });\n    };\n\n    _this.getIcon = function (repeat) {\n      switch (repeat) {\n        case RepeatEnum.NONE:\n          {\n            return React.createElement(RepeatIcon, {\n              fontSize: \"small\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 68\n              },\n              __self: this\n            });\n          }\n\n        case RepeatEnum.REPEAT:\n          {\n            return React.createElement(RepeatIcon, {\n              fontSize: \"small\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 71\n              },\n              __self: this\n            });\n          }\n\n        case RepeatEnum.REPEAT_ONE:\n          {\n            return React.createElement(RepeatOneIcon, {\n              fontSize: \"small\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74\n              },\n              __self: this\n            });\n          }\n\n        default:\n          {\n            return React.createElement(RepeatIcon, {\n              fontSize: \"small\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 77\n              },\n              __self: this\n            });\n          }\n      }\n    };\n\n    var _repeat = PlayerStore.repeat;\n    _this.state = {\n      repeat: _repeat\n    };\n    return _this;\n  }\n\n  _createClass(RepeatButton, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var repeat = this.state.repeat;\n      return React.createElement(IconButton, {\n        className: \"header-player-button\",\n        color: repeat === RepeatEnum.NONE ? 'default' : 'primary',\n        onClick: this.handleRepeat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, this.getIcon(repeat));\n    }\n  }]);\n\n  return RepeatButton;\n}(React.Component);\n\nexport default RepeatButton;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Player/RepeatButton.js"],"names":["React","IconButton","RepeatIcon","RepeatOneIcon","PlayerStore","RepeatEnum","TdLibController","RepeatButton","props","onClientUpdateMediaRepeat","update","repeat","setState","handleRepeat","state","nextRepeat","NONE","REPEAT","REPEAT_ONE","clientUpdate","getIcon","on","off","Component"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n"]},"metadata":{},"sourceType":"module"}