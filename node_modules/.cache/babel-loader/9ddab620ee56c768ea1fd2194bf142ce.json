{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Additional/SafeLink.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { getDecodedUrl, getHref, isUrlSafe } from '../../Utils/Url';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './SafeLink.css';\nimport { openChat } from '../../Actions/Client';\n\nvar SafeLink =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SafeLink, _React$Component);\n\n  function SafeLink(props) {\n    var _this;\n\n    _classCallCheck(this, SafeLink);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SafeLink).call(this, props));\n\n    _this.handleClick = function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      _this.setState({\n        confirm: true\n      });\n    };\n\n    _this.handleDialogClick = function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        confirm: false\n      });\n    };\n\n    _this.handleDone = function (event) {\n      _this.handleClose();\n\n      var _this$props = _this.props,\n          url = _this$props.url,\n          onClick = _this$props.onClick;\n      if (!url) return;\n\n      if (onClick) {\n        onClick(event);\n      } else {\n        var newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n      }\n    };\n\n    _this.handleSafeClick =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var _this$props2, onClick, href, messageLinkInfo, chat_id, message;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.stopPropagation();\n                _this$props2 = _this.props, onClick = _this$props2.onClick, href = _this$props2.url;\n\n                if (!_this.isTelegramLink(href)) {\n                  _context.next = 19;\n                  break;\n                }\n\n                event.preventDefault();\n                _context.prev = 4;\n                _context.next = 7;\n                return TdLibController.send({\n                  '@type': 'getMessageLinkInfo',\n                  url: href\n                });\n\n              case 7:\n                messageLinkInfo = _context.sent;\n                MessageStore.setItems([messageLinkInfo.message]);\n                chat_id = messageLinkInfo.chat_id, message = messageLinkInfo.message;\n\n                if (!chat_id) {\n                  _context.next = 13;\n                  break;\n                }\n\n                openChat(chat_id, message ? message.id : null);\n                return _context.abrupt(\"return\");\n\n              case 13:\n                _context.next = 18;\n                break;\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](4);\n                console.log('[safeLink] messageLinkInfo error', _context.t0);\n\n              case 18:\n                if (onClick) {\n                  onClick(event);\n                }\n\n              case 19:\n                if (onClick) {\n                  event.preventDefault();\n                  onClick(event);\n                }\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[4, 15]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(SafeLink, [{\n    key: \"isTelegramLink\",\n    value: function isTelegramLink(url) {\n      if (!url) return false;\n      var lowerCaseUrl = url.toLowerCase().replace('https://', '').replace('http://', '');\n      return lowerCaseUrl.startsWith('t.me') || lowerCaseUrl.startsWith('tg://');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          className = _this$props3.className,\n          children = _this$props3.children,\n          t = _this$props3.t,\n          url = _this$props3.url;\n      var _this$state = this.state,\n          confirm = _this$state.confirm,\n          decodedUrl = _this$state.decodedUrl,\n          href = _this$state.href,\n          safe = _this$state.safe;\n      if (!url) return null;\n      if (!decodedUrl) return null;\n      return React.createElement(React.Fragment, null, safe ? React.createElement(\"a\", {\n        className: className,\n        href: href,\n        title: decodedUrl,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        onClick: this.handleSafeClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, children || url) : React.createElement(React.Fragment, null, React.createElement(\"a\", {\n        className: className,\n        title: decodedUrl,\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, children || url), confirm && React.createElement(Dialog, {\n        transitionDuration: 0,\n        open: confirm,\n        onClose: this.handleClose,\n        onClick: this.handleDialogClick,\n        \"aria-labelledby\": \"confirm-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"confirm-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, t('Confirm')), React.createElement(DialogContent, {\n        classes: {\n          root: 'safe-link-content-root'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Open this link?\\n\\n\".concat(decodedUrl))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, t('Cancel')), React.createElement(Button, {\n        onClick: this.handleDone,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, t('Open'))))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var displayText = props.displayText,\n          mail = props.mail,\n          url = props.url;\n\n      if (state.prevUrl !== url || state.prevDisplayText !== displayText) {\n        return {\n          prevUrl: url,\n          prevDisplayText: displayText,\n          safe: isUrlSafe(displayText, url),\n          decodedUrl: getDecodedUrl(url, mail),\n          href: getHref(url, mail),\n          confirm: false\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return SafeLink;\n}(React.Component);\n\nSafeLink.propTypes = {\n  url: PropTypes.string.isRequired,\n  displayText: PropTypes.string,\n  mail: PropTypes.bool,\n  onClick: PropTypes.func\n};\nexport default withTranslation()(SafeLink);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Additional/SafeLink.js"],"names":["React","PropTypes","withTranslation","Button","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","getDecodedUrl","getHref","isUrlSafe","MessageStore","TdLibController","openChat","SafeLink","props","handleClick","event","preventDefault","stopPropagation","setState","confirm","handleDialogClick","handleClose","handleDone","url","onClick","newWindow","window","open","opener","location","handleSafeClick","href","isTelegramLink","send","messageLinkInfo","setItems","message","chat_id","id","console","log","state","lowerCaseUrl","toLowerCase","replace","startsWith","className","children","t","decodedUrl","safe","root","displayText","mail","prevUrl","prevDisplayText","Component","propTypes","string","isRequired","bool","func"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { getDecodedUrl, getHref, isUrlSafe } from '../../Utils/Url';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './SafeLink.css';\nimport { openChat } from '../../Actions/Client';\n\nclass SafeLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displayText, mail, url } = props;\n\n        if (state.prevUrl !== url || state.prevDisplayText !== displayText) {\n            return {\n                prevUrl: url,\n                prevDisplayText: displayText,\n                safe: isUrlSafe(displayText, url),\n                decodedUrl: getDecodedUrl(url, mail),\n                href: getHref(url, mail),\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.setState({ confirm: true });\n    };\n\n    handleDialogClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleDone = event => {\n        this.handleClose();\n\n        const { url, onClick } = this.props;\n        if (!url) return;\n\n        if (onClick) {\n            onClick(event);\n        } else {\n            const newWindow = window.open();\n            newWindow.opener = null;\n            newWindow.location = url;\n        }\n    };\n\n    isTelegramLink(url) {\n        if (!url) return false;\n\n        const lowerCaseUrl = url\n            .toLowerCase()\n            .replace('https://', '')\n            .replace('http://', '');\n\n        return lowerCaseUrl.startsWith('t.me') || lowerCaseUrl.startsWith('tg://');\n    }\n\n    handleSafeClick = async event => {\n        event.stopPropagation();\n\n        const { onClick, url: href } = this.props;\n\n        if (this.isTelegramLink(href)) {\n            event.preventDefault();\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: href\n                });\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                const { chat_id, message } = messageLinkInfo;\n                if (chat_id) {\n                    openChat(chat_id, message ? message.id : null);\n                    return;\n                }\n            } catch (error) {\n                console.log('[safeLink] messageLinkInfo error', error);\n            }\n\n            if (onClick) {\n                onClick(event);\n            }\n        }\n\n        if (onClick) {\n            event.preventDefault();\n            onClick(event);\n        }\n    };\n\n    render() {\n        const { className, children, t, url } = this.props;\n        const { confirm, decodedUrl, href, safe } = this.state;\n\n        if (!url) return null;\n        if (!decodedUrl) return null;\n\n        return (\n            <>\n                {safe ? (\n                    <a\n                        className={className}\n                        href={href}\n                        title={decodedUrl}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        onClick={this.handleSafeClick}>\n                        {children || url}\n                    </a>\n                ) : (\n                    <>\n                        <a className={className} title={decodedUrl} onClick={this.handleClick}>\n                            {children || url}\n                        </a>\n                        {confirm && (\n                            <Dialog\n                                transitionDuration={0}\n                                open={confirm}\n                                onClose={this.handleClose}\n                                onClick={this.handleDialogClick}\n                                aria-labelledby='confirm-dialog-title'>\n                                <DialogTitle id='confirm-dialog-title'>{t('Confirm')}</DialogTitle>\n                                <DialogContent classes={{ root: 'safe-link-content-root' }}>\n                                    <DialogContentText>{`Open this link?\\n\\n${decodedUrl}`}</DialogContentText>\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button onClick={this.handleClose}>{t('Cancel')}</Button>\n                                    <Button onClick={this.handleDone} color='primary'>\n                                        {t('Open')}\n                                    </Button>\n                                </DialogActions>\n                            </Dialog>\n                        )}\n                    </>\n                )}\n            </>\n        );\n    }\n}\n\nSafeLink.propTypes = {\n    url: PropTypes.string.isRequired,\n    displayText: PropTypes.string,\n    mail: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SafeLink);\n"]},"metadata":{},"sourceType":"module"}