{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnLeft/Language.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nvar Language =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Language, _React$Component);\n\n  function Language(props) {\n    var _this;\n\n    _classCallCheck(this, Language);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Language).call(this, props));\n\n    _this.handleChange = function (language) {\n      _this.setState({\n        language: language\n      });\n\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateLanguageChange',\n        language: language\n      });\n    };\n\n    var i18n = props.i18n;\n\n    var _language = i18n ? i18n.language : null;\n\n    _this.state = {\n      language: _language || 'en'\n    };\n    return _this;\n  }\n\n  _createClass(Language, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          onClose = _this$props.onClose;\n      var language = this.state.language;\n      var info = LocalizationStore.info || {\n        language_packs: []\n      };\n      var languages = info.language_packs.map(function (x) {\n        return React.createElement(\"div\", {\n          key: x.id,\n          className: \"settings-item\",\n          onClick: function onClick() {\n            return _this2.handleChange(x.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(Radio, {\n          color: \"primary\",\n          className: \"settings-item-control\",\n          checked: language === x.id,\n          tabIndex: -1,\n          inputProps: {\n            'aria-labelledby': 'label-2'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          id: \"label-2\",\n          primary: x.name,\n          secondary: x.native_name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"header-master\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        className: \"header-left-button\",\n        onClick: onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(ArrowBackIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"header-status grow cursor-pointer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"header-status-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, t('Language')))), React.createElement(\"div\", {\n        className: \"sidebar-page-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, languages));\n    }\n  }]);\n\n  return Language;\n}(React.Component);\n\nLanguage.propTypes = {\n  onClose: PropTypes.func\n};\nvar enhance = compose(withSaveRef(), withTranslation(), withRestoreRef());\nexport default enhance(Language);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnLeft/Language.js"],"names":["React","PropTypes","withTranslation","compose","withRestoreRef","withSaveRef","IconButton","ListItemText","Radio","ArrowBackIcon","LocalizationStore","TdLibController","Language","props","handleChange","language","setState","clientUpdate","i18n","state","t","onClose","info","language_packs","languages","map","x","id","name","native_name","Component","propTypes","func","enhance"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n"]},"metadata":{},"sourceType":"module"}