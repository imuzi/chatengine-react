{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport i18n from 'i18next';\nimport LocalizationCache from '../Localization/Cache';\nimport { initReactI18next } from 'react-i18next';\nimport TdLibController from '../Controllers/TdLibController';\nvar fallbackLng = 'en';\nvar defaultNS = 'translation';\nvar lng = localStorage.getItem('i18next') || fallbackLng;\ni18n.use(initReactI18next).init({\n  ns: [defaultNS, 'local'],\n  defaultNS: defaultNS,\n  fallbackNS: ['local', 'emoji', 'settings', 'translation', 'search'],\n  resources: {\n    en: {\n      search: {\n        ChatsAndContacts: 'Chats and contacts',\n        SearchMessagesIn: 'Search messages in'\n      },\n      settings: {\n        ContactJoinedEnabled: 'Enabled',\n        ContactJoinedDisabled: 'Disabled',\n        NotificationsEnabled: 'Enabled',\n        NotificationsDisabled: 'Disabled',\n        PreviewEnabled: 'Enabled',\n        PreviewDisabled: 'Disabled',\n        BioAbout: 'Any details such as age, occupation or city.\\nExample: 23 y.o. designer from San Francisco.',\n        Archived: 'Archived',\n        Saved: 'Saved',\n        EditProfile: 'Edit Profile',\n        GeneralSettings: 'General Settings'\n      },\n      local: {\n        PollQuizOneRightAnswer: 'Quiz has only one right answer.',\n        LeftChannel: 'Left channel',\n        LeftGroup: 'Left group',\n        EnterPassword: 'Enter a Password',\n        YourAccountProtectedWithPassword: 'Your account is protected with an additional password.',\n        DeletedMessage: 'Deleted message',\n        YourPhone: 'Your Phone',\n        SignInToTelegram: 'Sign in to NebulaChat',\n        PhoneNumber: 'Phone Number',\n        Country: 'Country',\n        KeepMeSignedIn: 'Keep me signed in',\n        StartText: 'Please confirm your country code and enter your phone number.',\n        Next: 'Next',\n        InvalidPhoneNumber: 'Invalid phone number. Please check the number and try again.',\n        More: 'More',\n        SendFileConfirmation: 'Are you sure you want to send file?',\n        SendFilesConfirmation: 'Are you sure you want to send files?',\n        SendMessage: 'Send Message',\n        ChatInfo: 'Chat Info',\n        ChannelInfo: 'Channel Info',\n        Stickers: 'STICKERS',\n        Emoji: 'EMOJI',\n        SelectChatToStartMessaging: 'Please select a chat to start messaging',\n        Text: 'Text',\n        ViewChannelInfo: 'View channel info',\n        ViewGroupInfo: 'View group info',\n        ViewProfile: 'View profile',\n        GoToMessage: 'Go to message',\n        PhotosTitle: 'Photos',\n        VideosTitle: 'Videos',\n        VoiceTitle: 'Voice messages',\n        UpdateDraftConfirmation: 'Are you sure you want to update draft?'\n      },\n      emoji: {\n        Search: 'Search',\n        NotEmojiFound: 'No Emoji Found',\n        ChooseDefaultSkinTone: 'Choose your default skin tone',\n        SearchResults: 'Search Results',\n        Recent: 'Frequently Used',\n        SmileysPeople: 'Smileys & People',\n        AnimalsNature: 'Animals & Nature',\n        FoodDrink: 'Food & Drink',\n        Activity: 'Activity',\n        TravelPlaces: 'Travel & Places',\n        Objects: 'Objects',\n        Symbols: 'Symbols',\n        Flags: 'Flags',\n        Custom: 'Custom'\n      },\n      translation: {\n        AppName: 'NebulaChat',\n        Connecting: 'Connecting...',\n        ConnectingToProxy: 'Connecting to proxy...',\n        Loading: 'Loading...',\n        Updating: 'Updating...',\n        WaitingForNetwork: 'Waiting for network...',\n        ContinueOnThisLanguage: 'Continue in English',\n        SendAsFile: 'Send as a file',\n        SendAsPhoto: 'Send as a photo'\n      }\n    },\n    ru: {\n      search: {\n        ChatsAndContacts: 'Чаты и контакты',\n        SearchMessagesIn: 'Искать сообщения в'\n      },\n      settings: {\n        ContactJoinedEnabled: 'Включено',\n        ContactJoinedDisabled: 'Выключено',\n        NotificationsEnabled: 'Включены',\n        NotificationsDisabled: 'Выключены',\n        PreviewEnabled: 'Включено',\n        PreviewDisabled: 'Выключено',\n        BioAbout: 'Любые подробности, например: возраст, род занятий или город.\\nПример: 23 года, дизайнер из Санкт-Петербурга.',\n        Archived: 'Архив',\n        Saved: 'Избранное',\n        EditProfile: 'Редактровать профиль',\n        GeneralSettings: 'Основные настройки'\n      },\n      local: {\n        PollQuizOneRightAnswer: 'Quiz has only one right answer.',\n        LeftChannel: 'Канал покинут',\n        LeftGroup: 'Группа покинута',\n        EnterPassword: 'Введите пароль',\n        YourAccountProtectedWithPassword: 'Ваш аккаунт защищен дополнительным паролем.',\n        DeletedMessage: 'Удаленное сообщение',\n        YourPhone: 'Ваш телефон',\n        SignInToTelegram: 'Вход в NebulaChat',\n        PhoneNumber: 'Телефонный номер',\n        Country: 'Страна',\n        KeepMeSignedIn: 'Сохранить авторизацию',\n        StartText: 'Пожалуйста, укажите код страны и свой номер телефона.',\n        Next: 'Далее',\n        InvalidPhoneNumber: 'Некорректный номер телефона. Пожалуйста, проверьте номер и попробуйте ещё раз.',\n        More: 'Ещё',\n        SendFileConfirmation: 'Вы действительно хотите отправить файл?',\n        SendFilesConfirmation: 'Вы действительно хотите отправить файлы?',\n        SendMessage: 'Отправить сообщение',\n        ChatInfo: 'Информация о чате',\n        ChannelInfo: 'Информация о канале',\n        Stickers: 'СТИКЕРЫ',\n        Emoji: 'ЕМОДЗИ',\n        SelectChatToStartMessaging: 'Пожалуйста, выберите, кому хотели бы написать',\n        Text: 'Текст',\n        ViewChannelInfo: 'Информация о канале',\n        ViewGroupInfo: 'Информация о группе',\n        ViewProfile: 'Показать профиль',\n        GoToMessage: 'Перейти к сообщению',\n        PhotosTitle: 'Фотографии',\n        VideosTitle: 'Видеозаписи',\n        VoiceTitle: 'Голосовые сообщения',\n        UpdateDraftConfirmation: 'Вы действительно хотите обновить черновик сообщения?'\n      },\n      emoji: {\n        Search: 'Поиск',\n        NotEmojiFound: 'Емодзи не найдены',\n        ChooseDefaultSkinTone: 'Выберите тон кожи по умолчанию',\n        SearchResults: 'Результаты поиска',\n        Recent: 'Часто используемые',\n        SmileysPeople: 'Смайлики и люди',\n        AnimalsNature: 'Животные и природа',\n        FoodDrink: 'Еда и напитки',\n        Activity: 'Активность',\n        TravelPlaces: 'Путешествия и местности',\n        Objects: 'Предметы',\n        Symbols: 'Символы',\n        Flags: 'Флаги',\n        Custom: 'Пользовательские'\n      },\n      translation: {\n        AppName: 'NebulaChat',\n        Connecting: 'Соединение...',\n        ConnectingToProxy: 'Подключение к прокси...',\n        Loading: 'Загрузка...',\n        Updating: 'Обновление...',\n        WaitingForNetwork: 'Ожидание сети...',\n        ContinueOnThisLanguage: 'Продолжить на русском',\n        SendAsFile: 'Отправить как файл',\n        SendAsPhoto: 'Отправить как фото'\n      }\n    }\n  },\n  lng: lng,\n  fallbackLng: fallbackLng,\n  interpolation: {\n    escapeValue: false\n  },\n  react: {\n    wait: false\n  }\n});\nvar cache = new LocalizationCache(null, {\n  enabled: true,\n  prefix: 'i18next_res_',\n  expirationTime: Infinity\n});\nvar defaultResources = cache.read(fallbackLng, defaultNS, function (err, data) {\n  return data;\n});\nvar currentResources = cache.read(lng, defaultNS, function (err, data) {\n  return data;\n});\ni18n.addResourceBundle(fallbackLng, defaultNS, defaultResources);\ni18n.addResourceBundle(lng, defaultNS, currentResources);\n\nvar LocalizationStore =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(LocalizationStore, _EventEmitter);\n\n  function LocalizationStore() {\n    var _this;\n\n    _classCallCheck(this, LocalizationStore);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LocalizationStore).call(this));\n\n    _this.addTdLibListener = function () {\n      TdLibController.on('update', _this.onUpdate);\n      TdLibController.on('clientUpdate', _this.onClientUpdate);\n    };\n\n    _this.removeTdLibListener = function () {\n      TdLibController.off('update', _this.onUpdate);\n      TdLibController.off('clientUpdate', _this.onClientUpdate);\n    };\n\n    _this.onUpdate =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(update) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = update['@type'];\n                _context.next = _context.t0 === 'updateAuthorizationState' ? 3 : _context.t0 === 'updateLanguagePackStrings' ? 14 : 16;\n                break;\n\n              case 3:\n                _context.t1 = update.authorization_state['@type'];\n                _context.next = _context.t1 === 'authorizationStateWaitTdlibParameters' ? 6 : 13;\n                break;\n\n              case 6:\n                TdLibController.send({\n                  '@type': 'setOption',\n                  name: 'localization_target',\n                  value: {\n                    '@type': 'optionValueString',\n                    value: 'android'\n                  }\n                });\n                TdLibController.send({\n                  '@type': 'setOption',\n                  name: 'language_pack_id',\n                  value: {\n                    '@type': 'optionValueString',\n                    value: lng\n                  }\n                });\n                _context.next = 10;\n                return TdLibController.send({\n                  '@type': 'getLocalizationTargetInfo',\n                  only_local: false\n                });\n\n              case 10:\n                _this.info = _context.sent;\n                TdLibController.clientUpdate({\n                  '@type': 'clientUpdateLanguageChange',\n                  language: lng\n                });\n                return _context.abrupt(\"break\", 13);\n\n              case 13:\n                return _context.abrupt(\"break\", 16);\n\n              case 14:\n                // add/remove new strings\n                _this.emit('updateLanguagePackStrings', update);\n\n                return _context.abrupt(\"break\", 16);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onClientUpdate =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(update) {\n        var language;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.t0 = update['@type'];\n                _context2.next = _context2.t0 === 'clientUpdateLanguageChange' ? 3 : 12;\n                break;\n\n              case 3:\n                language = update.language;\n                _context2.next = 6;\n                return _this.loadLanguage(language);\n\n              case 6:\n                localStorage.setItem('i18next', language);\n                _context2.next = 9;\n                return i18n.changeLanguage(language);\n\n              case 9:\n                TdLibController.send({\n                  '@type': 'setOption',\n                  name: 'language_pack_id',\n                  value: {\n                    '@type': 'optionValueString',\n                    value: language\n                  }\n                });\n\n                _this.emit('clientUpdateLanguageChange', update);\n\n                return _context2.abrupt(\"break\", 12);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.processStrings = function (lng, languagePackStrings) {\n      if (!languagePackStrings) return {};\n      var strings = languagePackStrings.strings;\n      if (!strings) return {};\n      var result = {};\n\n      for (var i = 0; i < strings.length; i++) {\n        var value = strings[i].value;\n\n        switch (value['@type']) {\n          case 'languagePackStringValueOrdinary':\n            {\n              result[strings[i].key] = value.value;\n              break;\n            }\n\n          case 'languagePackStringValuePluralized':\n            {\n              if (value.zero_value) {\n                result[strings[i].key + 'Z'] = value.zero_value;\n              }\n\n              if (value.one_value) {\n                result[strings[i].key + 'O'] = value.one_value;\n              }\n\n              if (value.two_value) {\n                result[strings[i].key + 'T'] = value.two_value;\n              }\n\n              if (value.few_value) {\n                result[strings[i].key + 'F'] = value.few_value;\n              }\n\n              if (value.many_value) {\n                result[strings[i].key + 'M'] = value.many_value;\n              }\n\n              if (value.other_value) {\n                result[strings[i].key + 'OT'] = value.other_value;\n              }\n\n              break;\n            }\n\n          case 'languagePackStringValueDeleted':\n            {\n              break;\n            }\n        }\n      }\n\n      return result;\n    };\n\n    _this.loadLanguage =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(language) {\n        var result, resources;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return TdLibController.send({\n                  '@type': 'getLanguagePackStrings',\n                  language_pack_id: language,\n                  keys: []\n                });\n\n              case 2:\n                result = _context3.sent;\n                resources = _this.processStrings(language, result);\n\n                _this.cache.save(language, defaultNS, resources);\n\n                i18n.addResourceBundle(language, defaultNS, resources);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.fallbackLng = fallbackLng;\n    _this.i18n = i18n;\n    _this.cache = cache;\n\n    _this.addTdLibListener();\n\n    return _this;\n  }\n\n  return LocalizationStore;\n}(EventEmitter);\n\nvar store = new LocalizationStore();\nwindow.localization = store;\nexport default store;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Stores/LocalizationStore.js"],"names":["EventEmitter","i18n","LocalizationCache","initReactI18next","TdLibController","fallbackLng","defaultNS","lng","localStorage","getItem","use","init","ns","fallbackNS","resources","en","search","ChatsAndContacts","SearchMessagesIn","settings","ContactJoinedEnabled","ContactJoinedDisabled","NotificationsEnabled","NotificationsDisabled","PreviewEnabled","PreviewDisabled","BioAbout","Archived","Saved","EditProfile","GeneralSettings","local","PollQuizOneRightAnswer","LeftChannel","LeftGroup","EnterPassword","YourAccountProtectedWithPassword","DeletedMessage","YourPhone","SignInToTelegram","PhoneNumber","Country","KeepMeSignedIn","StartText","Next","InvalidPhoneNumber","More","SendFileConfirmation","SendFilesConfirmation","SendMessage","ChatInfo","ChannelInfo","Stickers","Emoji","SelectChatToStartMessaging","Text","ViewChannelInfo","ViewGroupInfo","ViewProfile","GoToMessage","PhotosTitle","VideosTitle","VoiceTitle","UpdateDraftConfirmation","emoji","Search","NotEmojiFound","ChooseDefaultSkinTone","SearchResults","Recent","SmileysPeople","AnimalsNature","FoodDrink","Activity","TravelPlaces","Objects","Symbols","Flags","Custom","translation","AppName","Connecting","ConnectingToProxy","Loading","Updating","WaitingForNetwork","ContinueOnThisLanguage","SendAsFile","SendAsPhoto","ru","interpolation","escapeValue","react","wait","cache","enabled","prefix","expirationTime","Infinity","defaultResources","read","err","data","currentResources","addResourceBundle","LocalizationStore","addTdLibListener","on","onUpdate","onClientUpdate","removeTdLibListener","off","update","authorization_state","send","name","value","only_local","info","clientUpdate","language","emit","loadLanguage","setItem","changeLanguage","processStrings","languagePackStrings","strings","result","i","length","key","zero_value","one_value","two_value","few_value","many_value","other_value","language_pack_id","keys","save","store","window","localization"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport i18n from 'i18next';\nimport LocalizationCache from '../Localization/Cache';\nimport { initReactI18next } from 'react-i18next';\nimport TdLibController from '../Controllers/TdLibController';\n\nconst fallbackLng = 'en';\nconst defaultNS = 'translation';\nconst lng = localStorage.getItem('i18next') || fallbackLng;\n\ni18n.use(initReactI18next).init({\n    ns: [defaultNS, 'local'],\n    defaultNS,\n    fallbackNS: ['local', 'emoji', 'settings', 'translation', 'search'],\n    resources: {\n        en: {\n            search: {\n                ChatsAndContacts: 'Chats and contacts',\n                SearchMessagesIn: 'Search messages in'\n            },\n            settings: {\n                ContactJoinedEnabled: 'Enabled',\n                ContactJoinedDisabled: 'Disabled',\n                NotificationsEnabled: 'Enabled',\n                NotificationsDisabled: 'Disabled',\n                PreviewEnabled: 'Enabled',\n                PreviewDisabled: 'Disabled',\n                BioAbout: 'Any details such as age, occupation or city.\\nExample: 23 y.o. designer from San Francisco.',\n                Archived: 'Archived',\n                Saved: 'Saved',\n                EditProfile: 'Edit Profile',\n                GeneralSettings: 'General Settings'\n            },\n            local: {\n                PollQuizOneRightAnswer: 'Quiz has only one right answer.',\n                LeftChannel: 'Left channel',\n                LeftGroup: 'Left group',\n                EnterPassword: 'Enter a Password',\n                YourAccountProtectedWithPassword: 'Your account is protected with an additional password.',\n                DeletedMessage: 'Deleted message',\n                YourPhone: 'Your Phone',\n                SignInToTelegram: 'Sign in to NebulaChat',\n                PhoneNumber: 'Phone Number',\n                Country: 'Country',\n                KeepMeSignedIn: 'Keep me signed in',\n                StartText: 'Please confirm your country code and enter your phone number.',\n                Next: 'Next',\n                InvalidPhoneNumber: 'Invalid phone number. Please check the number and try again.',\n                More: 'More',\n                SendFileConfirmation: 'Are you sure you want to send file?',\n                SendFilesConfirmation: 'Are you sure you want to send files?',\n                SendMessage: 'Send Message',\n                ChatInfo: 'Chat Info',\n                ChannelInfo: 'Channel Info',\n                Stickers: 'STICKERS',\n                Emoji: 'EMOJI',\n                SelectChatToStartMessaging: 'Please select a chat to start messaging',\n                Text: 'Text',\n                ViewChannelInfo: 'View channel info',\n                ViewGroupInfo: 'View group info',\n                ViewProfile: 'View profile',\n                GoToMessage: 'Go to message',\n                PhotosTitle: 'Photos',\n                VideosTitle: 'Videos',\n                VoiceTitle: 'Voice messages',\n                UpdateDraftConfirmation: 'Are you sure you want to update draft?'\n            },\n            emoji: {\n                Search: 'Search',\n                NotEmojiFound: 'No Emoji Found',\n                ChooseDefaultSkinTone: 'Choose your default skin tone',\n                SearchResults: 'Search Results',\n                Recent: 'Frequently Used',\n                SmileysPeople: 'Smileys & People',\n                AnimalsNature: 'Animals & Nature',\n                FoodDrink: 'Food & Drink',\n                Activity: 'Activity',\n                TravelPlaces: 'Travel & Places',\n                Objects: 'Objects',\n                Symbols: 'Symbols',\n                Flags: 'Flags',\n                Custom: 'Custom'\n            },\n            translation: {\n                AppName: 'NebulaChat',\n                Connecting: 'Connecting...',\n                ConnectingToProxy: 'Connecting to proxy...',\n                Loading: 'Loading...',\n                Updating: 'Updating...',\n                WaitingForNetwork: 'Waiting for network...',\n                ContinueOnThisLanguage: 'Continue in English',\n                SendAsFile: 'Send as a file',\n                SendAsPhoto: 'Send as a photo'\n            }\n        },\n        ru: {\n            search: {\n                ChatsAndContacts: 'Чаты и контакты',\n                SearchMessagesIn: 'Искать сообщения в'\n            },\n            settings: {\n                ContactJoinedEnabled: 'Включено',\n                ContactJoinedDisabled: 'Выключено',\n                NotificationsEnabled: 'Включены',\n                NotificationsDisabled: 'Выключены',\n                PreviewEnabled: 'Включено',\n                PreviewDisabled: 'Выключено',\n                BioAbout:\n                    'Любые подробности, например: возраст, род занятий или город.\\nПример: 23 года, дизайнер из Санкт-Петербурга.',\n                Archived: 'Архив',\n                Saved: 'Избранное',\n                EditProfile: 'Редактровать профиль',\n                GeneralSettings: 'Основные настройки'\n            },\n            local: {\n                PollQuizOneRightAnswer: 'Quiz has only one right answer.',\n                LeftChannel: 'Канал покинут',\n                LeftGroup: 'Группа покинута',\n                EnterPassword: 'Введите пароль',\n                YourAccountProtectedWithPassword: 'Ваш аккаунт защищен дополнительным паролем.',\n                DeletedMessage: 'Удаленное сообщение',\n                YourPhone: 'Ваш телефон',\n                SignInToTelegram: 'Вход в NebulaChat',\n                PhoneNumber: 'Телефонный номер',\n                Country: 'Страна',\n                KeepMeSignedIn: 'Сохранить авторизацию',\n                StartText: 'Пожалуйста, укажите код страны и свой номер телефона.',\n                Next: 'Далее',\n                InvalidPhoneNumber: 'Некорректный номер телефона. Пожалуйста, проверьте номер и попробуйте ещё раз.',\n                More: 'Ещё',\n                SendFileConfirmation: 'Вы действительно хотите отправить файл?',\n                SendFilesConfirmation: 'Вы действительно хотите отправить файлы?',\n                SendMessage: 'Отправить сообщение',\n                ChatInfo: 'Информация о чате',\n                ChannelInfo: 'Информация о канале',\n                Stickers: 'СТИКЕРЫ',\n                Emoji: 'ЕМОДЗИ',\n                SelectChatToStartMessaging: 'Пожалуйста, выберите, кому хотели бы написать',\n                Text: 'Текст',\n                ViewChannelInfo: 'Информация о канале',\n                ViewGroupInfo: 'Информация о группе',\n                ViewProfile: 'Показать профиль',\n                GoToMessage: 'Перейти к сообщению',\n                PhotosTitle: 'Фотографии',\n                VideosTitle: 'Видеозаписи',\n                VoiceTitle: 'Голосовые сообщения',\n                UpdateDraftConfirmation: 'Вы действительно хотите обновить черновик сообщения?'\n            },\n            emoji: {\n                Search: 'Поиск',\n                NotEmojiFound: 'Емодзи не найдены',\n                ChooseDefaultSkinTone: 'Выберите тон кожи по умолчанию',\n                SearchResults: 'Результаты поиска',\n                Recent: 'Часто используемые',\n                SmileysPeople: 'Смайлики и люди',\n                AnimalsNature: 'Животные и природа',\n                FoodDrink: 'Еда и напитки',\n                Activity: 'Активность',\n                TravelPlaces: 'Путешествия и местности',\n                Objects: 'Предметы',\n                Symbols: 'Символы',\n                Flags: 'Флаги',\n                Custom: 'Пользовательские'\n            },\n            translation: {\n                AppName: 'NebulaChat',\n                Connecting: 'Соединение...',\n                ConnectingToProxy: 'Подключение к прокси...',\n                Loading: 'Загрузка...',\n                Updating: 'Обновление...',\n                WaitingForNetwork: 'Ожидание сети...',\n                ContinueOnThisLanguage: 'Продолжить на русском',\n                SendAsFile: 'Отправить как файл',\n                SendAsPhoto: 'Отправить как фото'\n            }\n        }\n    },\n    lng,\n    fallbackLng,\n    interpolation: {\n        escapeValue: false\n    },\n    react: {\n        wait: false\n    }\n});\n\nconst cache = new LocalizationCache(null, {\n    enabled: true,\n    prefix: 'i18next_res_',\n    expirationTime: Infinity\n});\n\nconst defaultResources = cache.read(fallbackLng, defaultNS, (err, data) => data);\nconst currentResources = cache.read(lng, defaultNS, (err, data) => data);\n\ni18n.addResourceBundle(fallbackLng, defaultNS, defaultResources);\ni18n.addResourceBundle(lng, defaultNS, currentResources);\n\nclass LocalizationStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.fallbackLng = fallbackLng;\n        this.i18n = i18n;\n        this.cache = cache;\n\n        this.addTdLibListener();\n    }\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                switch (update.authorization_state['@type']) {\n                    case 'authorizationStateWaitTdlibParameters':\n                        TdLibController.send({\n                            '@type': 'setOption',\n                            name: 'localization_target',\n                            value: { '@type': 'optionValueString', value: 'android' }\n                        });\n\n                        TdLibController.send({\n                            '@type': 'setOption',\n                            name: 'language_pack_id',\n                            value: { '@type': 'optionValueString', value: lng }\n                        });\n\n                        this.info = await TdLibController.send({\n                            '@type': 'getLocalizationTargetInfo',\n                            only_local: false\n                        });\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateLanguageChange',\n                            language: lng\n                        });\n                        break;\n                }\n                break;\n            }\n            case 'updateLanguagePackStrings': {\n                // add/remove new strings\n\n                this.emit('updateLanguagePackStrings', update);\n                break;\n            }\n        }\n    };\n\n    onClientUpdate = async update => {\n        switch (update['@type']) {\n            case 'clientUpdateLanguageChange': {\n                const { language } = update;\n\n                await this.loadLanguage(language);\n\n                localStorage.setItem('i18next', language);\n\n                await i18n.changeLanguage(language);\n\n                TdLibController.send({\n                    '@type': 'setOption',\n                    name: 'language_pack_id',\n                    value: { '@type': 'optionValueString', value: language }\n                });\n\n                this.emit('clientUpdateLanguageChange', update);\n                break;\n            }\n        }\n    };\n\n    processStrings = (lng, languagePackStrings) => {\n        if (!languagePackStrings) return {};\n        const { strings } = languagePackStrings;\n        if (!strings) return {};\n\n        let result = {};\n        for (let i = 0; i < strings.length; i++) {\n            const { value } = strings[i];\n            switch (value['@type']) {\n                case 'languagePackStringValueOrdinary': {\n                    result[strings[i].key] = value.value;\n                    break;\n                }\n                case 'languagePackStringValuePluralized': {\n                    if (value.zero_value) {\n                        result[strings[i].key + 'Z'] = value.zero_value;\n                    }\n                    if (value.one_value) {\n                        result[strings[i].key + 'O'] = value.one_value;\n                    }\n                    if (value.two_value) {\n                        result[strings[i].key + 'T'] = value.two_value;\n                    }\n                    if (value.few_value) {\n                        result[strings[i].key + 'F'] = value.few_value;\n                    }\n                    if (value.many_value) {\n                        result[strings[i].key + 'M'] = value.many_value;\n                    }\n                    if (value.other_value) {\n                        result[strings[i].key + 'OT'] = value.other_value;\n                    }\n                    break;\n                }\n                case 'languagePackStringValueDeleted': {\n                    break;\n                }\n            }\n        }\n\n        return result;\n    };\n\n    loadLanguage = async language => {\n        const result = await TdLibController.send({\n            '@type': 'getLanguagePackStrings',\n            language_pack_id: language,\n            keys: []\n        });\n\n        const resources = this.processStrings(language, result);\n        this.cache.save(language, defaultNS, resources);\n        i18n.addResourceBundle(language, defaultNS, resources);\n    };\n}\n\nconst store = new LocalizationStore();\nwindow.localization = store;\nexport default store;\n"]},"metadata":{},"sourceType":"module"}