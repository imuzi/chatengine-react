{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnMiddle/Header.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { getChatShortTitle, getChatSubtitle, getChatTitle, isAccentChatSubtitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { clearSelection, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nvar Header =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Header, _Component);\n\n  function Header(props) {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Header).call(this, props));\n\n    _this.onClientUpdateDeleteMessages = function (update) {\n      var chatId = update.chatId,\n          messageIds = update.messageIds;\n      var canBeDeletedForAllUsers = true;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = messageIds[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var messageId = _step.value;\n          var message = MessageStore.get(chatId, messageId);\n\n          if (!message) {\n            canBeDeletedForAllUsers = false;\n            break;\n          }\n\n          if (!message.can_be_deleted_for_all_users) {\n            canBeDeletedForAllUsers = false;\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      _this.setState({\n        openDeleteDialog: true,\n        chatId: chatId,\n        messageIds: messageIds,\n        canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n        revoke: canBeDeletedForAllUsers\n      });\n    };\n\n    _this.handleRevokeChange = function () {\n      _this.setState({\n        revoke: !_this.state.revoke\n      });\n    };\n\n    _this.handleCloseDelete = function () {\n      _this.setState({\n        openDeleteDialog: false\n      });\n    };\n\n    _this.handleDeleteContinue = function () {\n      var _this$state = _this.state,\n          revoke = _this$state.revoke,\n          chatId = _this$state.chatId,\n          messageIds = _this$state.messageIds;\n      clearSelection();\n\n      _this.handleCloseDelete();\n\n      TdLibController.send({\n        '@type': 'deleteMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        revoke: revoke\n      });\n    };\n\n    _this.onClientUpdateMessageSelected = function (update) {\n      _this.setState({\n        selectionCount: MessageStore.selectedItems.size\n      });\n    };\n\n    _this.onClientUpdateChatId = function (update) {\n      _this.forceUpdate();\n    };\n\n    _this.onUpdateConnectionState = function (update) {\n      _this.setState({\n        connectionState: update.state\n      });\n    };\n\n    _this.onUpdateAuthorizationState = function (update) {\n      _this.setState({\n        authorizationState: update.authorization_state\n      });\n    };\n\n    _this.openChatDetails = function () {\n      var chatId = AppStore.getChatId();\n      var chat = ChatStore.get(chatId);\n      if (!chat) return;\n      var isSmallWidth = AppStore.isSmallWidth;\n\n      if (isSmallWidth) {\n        openChat(chatId, null, true);\n      } else {\n        AppStore.changeChatDetailsVisibility(true);\n      }\n    };\n\n    _this.handleSearchChat = function () {\n      var chatId = AppStore.getChatId();\n      var chat = ChatStore.get(chatId);\n      if (!chat) return;\n      searchChat(chatId);\n    };\n\n    _this.localize = function (str) {\n      var t = _this.props.t;\n      return t(str).replace('...', '').replace('â€¦', '');\n    };\n\n    _this.state = {\n      authorizationState: AppStore.getAuthorizationState(),\n      connectionState: AppStore.getConnectionState(),\n      openDeleteDialog: false\n    };\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      if (nextState !== this.state) {\n        return true;\n      }\n\n      if (nextProps.theme !== this.props.theme) {\n        return true;\n      }\n\n      if (nextProps.t !== this.props.t) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n      AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n      AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n      AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n      MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n      MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n      AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n      AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n      AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n      MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n      MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var t = this.props.t;\n      var _this$state2 = this.state,\n          authorizationState = _this$state2.authorizationState,\n          connectionState = _this$state2.connectionState,\n          selectionCount = _this$state2.selectionCount,\n          openDeleteDialog = _this$state2.openDeleteDialog,\n          canBeDeletedForAllUsers = _this$state2.canBeDeletedForAllUsers,\n          revoke = _this$state2.revoke,\n          messageIds = _this$state2.messageIds;\n      var count = messageIds ? messageIds.length : 0;\n      var control = null;\n\n      if (selectionCount) {\n        control = React.createElement(HeaderCommand, {\n          count: selectionCount,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        });\n      }\n\n      var chatId = AppStore.getChatId();\n      var chat = ChatStore.get(chatId);\n      var isAccentSubtitle = isAccentChatSubtitle(chatId);\n      var title = getChatTitle(chatId, true, t);\n      var subtitle = getChatSubtitle(chatId, true);\n      var showProgressAnimation = false;\n\n      if (connectionState) {\n        switch (connectionState['@type']) {\n          case 'connectionStateConnecting':\n            title = this.localize('Connecting');\n            subtitle = '';\n            showProgressAnimation = true;\n            break;\n\n          case 'connectionStateConnectingToProxy':\n            title = this.localize('Connecting to proxy');\n            subtitle = '';\n            showProgressAnimation = true;\n            break;\n\n          case 'connectionStateReady':\n            break;\n\n          case 'connectionStateUpdating':\n            title = this.localize('Updating');\n            subtitle = '';\n            showProgressAnimation = true;\n            break;\n\n          case 'connectionStateWaitingForNetwork':\n            title = this.localize('Waiting for network');\n            subtitle = '';\n            showProgressAnimation = true;\n            break;\n        }\n      } else if (authorizationState) {\n        switch (authorizationState['@type']) {\n          case 'authorizationStateClosed':\n            break;\n\n          case ' authorizationStateClosing':\n            break;\n\n          case 'authorizationStateLoggingOut':\n            title = this.localize('Logging out');\n            subtitle = '';\n            showProgressAnimation = true;\n            break;\n\n          case 'authorizationStateReady':\n            break;\n\n          case 'authorizationStateWaitCode':\n            break;\n\n          case 'authorizationStateWaitEncryptionKey':\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n            break;\n\n          case 'authorizationStateWaitPassword':\n            break;\n\n          case 'authorizationStateWaitPhoneNumber':\n            break;\n\n          case 'authorizationStateWaitTdlibParameters':\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n            break;\n        }\n      } else {\n        title = this.localize('Loading');\n        subtitle = '';\n        showProgressAnimation = true;\n      }\n\n      control = control || React.createElement(\"div\", {\n        className: \"header-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, showProgressAnimation ? React.createElement(\"div\", {\n        className: classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default'),\n        onClick: this.openChatDetails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"header-status-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, title), React.createElement(HeaderProgress, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: classNames('header-status-title', {\n          'header-status-accent': isAccentSubtitle\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, subtitle), React.createElement(\"span\", {\n        className: \"header-status-tail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      })) : React.createElement(HeaderChat, {\n        className: classNames('grow', 'cursor-pointer'),\n        chatId: chatId,\n        onClick: this.openChatDetails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }), React.createElement(PinnedMessage, {\n        chatId: chatId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }), chat && React.createElement(React.Fragment, null, React.createElement(IconButton, {\n        className: \"header-right-second-button\",\n        \"aria-label\": \"Search\",\n        onClick: this.handleSearchChat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(SearchIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      })), React.createElement(MainMenuButton, {\n        openChatDetails: this.openChatDetails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      })));\n      return React.createElement(React.Fragment, null, control, React.createElement(Dialog, {\n        transitionDuration: 0,\n        open: openDeleteDialog,\n        onClose: this.handleCloseDelete,\n        \"aria-labelledby\": \"delete-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"delete-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, \"Confirm\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, count === 1 ? 'Do you want to delete this message?' : \"Do you want to delete \".concat(count, \" messages?\")), isSupergroup(chatId) ? React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, !isChannelChat(chatId) && (count === 1 ? 'This will delete it for everyone in this chat' : 'This will delete them for everyone in this chat')) : React.createElement(React.Fragment, null, canBeDeletedForAllUsers && React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          checked: revoke,\n          onChange: this.handleRevokeChange,\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332\n          },\n          __self: this\n        }),\n        label: isPrivateChat(chatId) ? \"Delete for \".concat(getChatShortTitle(chatId, false, t)) : 'Delete for all',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleCloseDelete,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, t('Cancel')), React.createElement(Button, {\n        onClick: this.handleDeleteContinue,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, t('Ok')))));\n    }\n  }]);\n\n  return Header;\n}(Component);\n\nexport default withTranslation()(Header);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnMiddle/Header.js"],"names":["React","Component","classNames","withTranslation","Button","Checkbox","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControlLabel","IconButton","SearchIcon","MainMenuButton","HeaderChat","HeaderCommand","HeaderProgress","PinnedMessage","getChatShortTitle","getChatSubtitle","getChatTitle","isAccentChatSubtitle","isChannelChat","isPrivateChat","isSupergroup","clearSelection","openChat","searchChat","AppStore","ChatStore","MessageStore","TdLibController","Header","props","onClientUpdateDeleteMessages","update","chatId","messageIds","canBeDeletedForAllUsers","messageId","message","get","can_be_deleted_for_all_users","setState","openDeleteDialog","revoke","handleRevokeChange","state","handleCloseDelete","handleDeleteContinue","send","chat_id","message_ids","onClientUpdateMessageSelected","selectionCount","selectedItems","size","onClientUpdateChatId","forceUpdate","onUpdateConnectionState","connectionState","onUpdateAuthorizationState","authorizationState","authorization_state","openChatDetails","getChatId","chat","isSmallWidth","changeChatDetailsVisibility","handleSearchChat","localize","str","t","replace","getAuthorizationState","getConnectionState","nextProps","nextState","theme","on","off","count","length","control","isAccentSubtitle","title","subtitle","showProgressAnimation"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle, isChannelChat,\n    isPrivateChat, isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            AppStore.changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('â€¦', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        { isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                { !isChannelChat(chatId) && (count === 1\n                                    ? 'This will delete it for everyone in this chat'\n                                    : 'This will delete them for everyone in this chat')\n                                }\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {\n                                    canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={\n                                        isPrivateChat(chatId)\n                                            ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                            : 'Delete for all'\n                                    }\n                                    />\n                                )}\n                            </>\n                        )}\n\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n"]},"metadata":{},"sourceType":"module"}