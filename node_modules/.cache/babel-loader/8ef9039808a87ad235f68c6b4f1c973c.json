{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Tile/UserStatus.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatus.css';\n\nvar UserStatus =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserStatus, _React$Component);\n\n  function UserStatus(props) {\n    var _this;\n\n    _classCallCheck(this, UserStatus);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserStatus).call(this, props));\n\n    _this.onUpdateUserStatus = function (update) {\n      var userId = _this.props.userId;\n      var user = UserStore.get(userId);\n\n      if (userId === update.user_id) {\n        _this.setState({\n          status: getUserStatus(user),\n          isAccent: isUserOnline(user)\n        });\n      }\n    };\n\n    var _userId = _this.props.userId;\n\n    var _user = UserStore.get(_userId);\n\n    _this.state = {\n      prevUserId: _userId,\n      status: getUserStatus(_user),\n      isAccent: isUserOnline(_user)\n    };\n    return _this;\n  }\n\n  _createClass(UserStatus, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      var userId = this.props.userId;\n      var _this$state = this.state,\n          status = _this$state.status,\n          isAccent = _this$state.isAccent;\n\n      if (nextProps.userId !== userId) {\n        return true;\n      }\n\n      if (nextState.status !== status) {\n        return true;\n      }\n\n      if (nextState.isAccent !== isAccent) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          status = _this$state2.status,\n          isAccent = _this$state2.isAccent;\n      return React.createElement(\"div\", {\n        className: classNames('user-content', 'dialog-content', {\n          'user-status-accent': isAccent\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, status);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if (props.userId !== state.prevUserId) {\n        var userId = props.userId;\n        var user = UserStore.get(userId);\n        return {\n          prevUserId: userId,\n          status: getUserStatus(user),\n          isAccent: isUserOnline(user)\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return UserStatus;\n}(React.Component);\n\nexport default UserStatus;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Tile/UserStatus.js"],"names":["React","classNames","getUserStatus","isUserOnline","UserStore","UserStatus","props","onUpdateUserStatus","update","userId","user","get","user_id","setState","status","isAccent","state","prevUserId","nextProps","nextState","on","off","Component"],"mappings":";;;;;;;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,kBAA5C;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,kBAAP;;IAEMC,U;;;;;AACF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,oFAAMA,KAAN;;AADe,UAuDnBC,kBAvDmB,GAuDE,UAAAC,MAAM,EAAI;AAAA,UACnBC,MADmB,GACR,MAAKH,KADG,CACnBG,MADmB;AAE3B,UAAMC,IAAI,GAAGN,SAAS,CAACO,GAAV,CAAcF,MAAd,CAAb;;AAEA,UAAIA,MAAM,KAAKD,MAAM,CAACI,OAAtB,EAA+B;AAC3B,cAAKC,QAAL,CAAc;AAAEC,UAAAA,MAAM,EAAEZ,aAAa,CAACQ,IAAD,CAAvB;AAA+BK,UAAAA,QAAQ,EAAEZ,YAAY,CAACO,IAAD;AAArD,SAAd;AACH;AACJ,KA9DkB;;AAAA,QAGPD,OAHO,GAGI,MAAKH,KAHT,CAGPG,MAHO;;AAIf,QAAMC,KAAI,GAAGN,SAAS,CAACO,GAAV,CAAcF,OAAd,CAAb;;AAEA,UAAKO,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAER,OADH;AAETK,MAAAA,MAAM,EAAEZ,aAAa,CAACQ,KAAD,CAFZ;AAGTK,MAAAA,QAAQ,EAAEZ,YAAY,CAACO,KAAD;AAHb,KAAb;AANe;AAWlB;;;;0CAiBqBQ,S,EAAWC,S,EAAW;AAAA,UAChCV,MADgC,GACrB,KAAKH,KADgB,CAChCG,MADgC;AAAA,wBAEX,KAAKO,KAFM;AAAA,UAEhCF,MAFgC,eAEhCA,MAFgC;AAAA,UAExBC,QAFwB,eAExBA,QAFwB;;AAIxC,UAAIG,SAAS,CAACT,MAAV,KAAqBA,MAAzB,EAAiC;AAC7B,eAAO,IAAP;AACH;;AAED,UAAIU,SAAS,CAACL,MAAV,KAAqBA,MAAzB,EAAiC;AAC7B,eAAO,IAAP;AACH;;AAED,UAAIK,SAAS,CAACJ,QAAV,KAAuBA,QAA3B,EAAqC;AACjC,eAAO,IAAP;AACH;;AAED,aAAO,KAAP;AACH;;;wCAEmB;AAChBX,MAAAA,SAAS,CAACgB,EAAV,CAAa,kBAAb,EAAiC,KAAKb,kBAAtC;AACH;;;2CAEsB;AACnBH,MAAAA,SAAS,CAACiB,GAAV,CAAc,kBAAd,EAAkC,KAAKd,kBAAvC;AACH;;;6BAWQ;AAAA,yBACwB,KAAKS,KAD7B;AAAA,UACGF,MADH,gBACGA,MADH;AAAA,UACWC,QADX,gBACWA,QADX;AAGL,aACI;AAAK,QAAA,SAAS,EAAEd,UAAU,CAAC,cAAD,EAAiB,gBAAjB,EAAmC;AAAE,gCAAsBc;AAAxB,SAAnC,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,MADL,CADJ;AAKH;;;6CA3D+BR,K,EAAOU,K,EAAO;AAC1C,UAAIV,KAAK,CAACG,MAAN,KAAiBO,KAAK,CAACC,UAA3B,EAAuC;AAAA,YAC3BR,MAD2B,GAChBH,KADgB,CAC3BG,MAD2B;AAEnC,YAAMC,IAAI,GAAGN,SAAS,CAACO,GAAV,CAAcF,MAAd,CAAb;AAEA,eAAO;AACHQ,UAAAA,UAAU,EAAER,MADT;AAEHK,UAAAA,MAAM,EAAEZ,aAAa,CAACQ,IAAD,CAFlB;AAGHK,UAAAA,QAAQ,EAAEZ,YAAY,CAACO,IAAD;AAHnB,SAAP;AAKH;;AAED,aAAO,IAAP;AACH;;;;EA3BoBV,KAAK,CAACsB,S;;AA4E/B,eAAejB,UAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatus.css';\n\nclass UserStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { status, isAccent } = this.state;\n\n        return (\n            <div className={classNames('user-content', 'dialog-content', { 'user-status-accent': isAccent })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default UserStatus;\n"]},"metadata":{},"sourceType":"module"}