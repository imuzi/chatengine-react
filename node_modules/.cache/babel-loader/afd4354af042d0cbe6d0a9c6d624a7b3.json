{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Language.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport { I18nextProvider } from 'react-i18next';\nimport { getDisplayName } from './Utils/HOC';\nimport LocalizationStore from './Stores/LocalizationStore';\n\nfunction withLanguage(WrappedComponent) {\n  var LanguageWrapper =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inherits(LanguageWrapper, _React$Component);\n\n    function LanguageWrapper() {\n      _classCallCheck(this, LanguageWrapper);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(LanguageWrapper).apply(this, arguments));\n    }\n\n    _createClass(LanguageWrapper, [{\n      key: \"render\",\n      value: function render() {\n        var i18n = LocalizationStore.i18n;\n        return React.createElement(I18nextProvider, {\n          i18n: i18n,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, React.createElement(WrappedComponent, Object.assign({}, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        })));\n      }\n    }]);\n\n    return LanguageWrapper;\n  }(React.Component);\n\n  LanguageWrapper.displayName = \"WithLanguage(\".concat(getDisplayName(WrappedComponent), \")\");\n  return LanguageWrapper;\n}\n\nexport default withLanguage;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Language.js"],"names":["React","I18nextProvider","getDisplayName","LocalizationStore","withLanguage","WrappedComponent","LanguageWrapper","i18n","props","Component","displayName"],"mappings":";;;;;;;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;;AAEA,SAASC,YAAT,CAAsBC,gBAAtB,EAAwC;AAAA,MAC9BC,eAD8B;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAEvB;AACL,YAAMC,IAAI,GAAGJ,iBAAiB,CAACI,IAA/B;AAEA,eACI,oBAAC,eAAD;AAAiB,UAAA,IAAI,EAAEA,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,gBAAD,oBAAsB,KAAKC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,CADJ;AAKH;AAV+B;;AAAA;AAAA,IACNR,KAAK,CAACS,SADA;;AAYpCH,EAAAA,eAAe,CAACI,WAAhB,0BAA8CR,cAAc,CAACG,gBAAD,CAA5D;AAEA,SAAOC,eAAP;AACH;;AAED,eAAeF,YAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { I18nextProvider } from 'react-i18next';\nimport { getDisplayName } from './Utils/HOC';\nimport LocalizationStore from './Stores/LocalizationStore';\n\nfunction withLanguage(WrappedComponent) {\n    class LanguageWrapper extends React.Component {\n        render() {\n            const i18n = LocalizationStore.i18n;\n\n            return (\n                <I18nextProvider i18n={i18n}>\n                    <WrappedComponent {...this.props} />\n                </I18nextProvider>\n            );\n        }\n    }\n    LanguageWrapper.displayName = `WithLanguage(${getDisplayName(WrappedComponent)})`;\n\n    return LanguageWrapper;\n}\n\nexport default withLanguage;\n"]},"metadata":{},"sourceType":"module"}