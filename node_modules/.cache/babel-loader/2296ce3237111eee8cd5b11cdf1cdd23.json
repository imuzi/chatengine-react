{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Tile/SharedMedia/SharedVoiceNote.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nvar SharedVoiceNote =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SharedVoiceNote, _React$Component);\n\n  function SharedVoiceNote(props) {\n    var _this;\n\n    _classCallCheck(this, SharedVoiceNote);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SharedVoiceNote).call(this, props));\n\n    _this.handleOpenContextMenu =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var contextMenu, left, top;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (event) {\n                  event.preventDefault();\n                  event.stopPropagation();\n                }\n\n                contextMenu = _this.state.contextMenu;\n\n                if (contextMenu) {\n                  _this.setState({\n                    contextMenu: false\n                  });\n                } else {\n                  left = event.clientX;\n                  top = event.clientY;\n\n                  _this.setState({\n                    contextMenu: true,\n                    left: left,\n                    top: top\n                  });\n                }\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleCloseContextMenu = function (event) {\n      if (event) {\n        event.stopPropagation();\n      }\n\n      _this.setState({\n        contextMenu: false\n      });\n    };\n\n    _this.state = {\n      contextMenu: false,\n      left: 0,\n      top: 0\n    };\n    return _this;\n  }\n\n  _createClass(SharedVoiceNote, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          chatId = _this$props.chatId,\n          i18n = _this$props.i18n,\n          messageId = _this$props.messageId,\n          voiceNote = _this$props.voiceNote,\n          openMedia = _this$props.openMedia,\n          showOpenMessage = _this$props.showOpenMessage;\n      var _this$state = this.state,\n          contextMenu = _this$state.contextMenu,\n          left = _this$state.left,\n          top = _this$state.top;\n      var message = MessageStore.get(chatId, messageId);\n      if (!message) return null;\n      if (!voiceNote) return null;\n      var date = message.date,\n          sender_user_id = message.sender_user_id;\n      var dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n        day: 'numeric',\n        month: 'short',\n        year: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: false\n      });\n      var duration = voiceNote.duration,\n          file = voiceNote.voice;\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"shared-voice-note\",\n        onContextMenu: this.handleOpenContextMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(VoiceNoteTile, {\n        chatId: chatId,\n        messageId: messageId,\n        file: file,\n        openMedia: openMedia,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"voice-note-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(MessageAuthor, {\n        chatId: chatId,\n        messageId: messageId,\n        userId: sender_user_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"voice-note-meta\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(AudioAction, {\n        chatId: chatId,\n        messageId: messageId,\n        duration: duration,\n        file: file,\n        title: \"\".concat(dateString, \", \"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(MediaStatus, {\n        chatId: chatId,\n        messageId: messageId,\n        icon: \"\\xA0\\u2022\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })))), React.createElement(ContextMenu, {\n        chatId: chatId,\n        messageId: messageId,\n        anchorPosition: {\n          top: top,\n          left: left\n        },\n        open: contextMenu,\n        showOpenMessage: showOpenMessage,\n        onClose: this.handleCloseContextMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SharedVoiceNote;\n}(React.Component);\n\nSharedVoiceNote.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  messageId: PropTypes.number.isRequired,\n  voiceNote: PropTypes.object.isRequired,\n  openMedia: PropTypes.func\n};\nexport default withTranslation()(SharedVoiceNote);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Tile/SharedMedia/SharedVoiceNote.js"],"names":["React","PropTypes","withTranslation","AudioAction","ContextMenu","MediaStatus","MessageAuthor","VoiceNoteTile","MessageStore","SharedVoiceNote","props","handleOpenContextMenu","event","preventDefault","stopPropagation","contextMenu","state","setState","left","clientX","top","clientY","handleCloseContextMenu","chatId","i18n","messageId","voiceNote","openMedia","showOpenMessage","message","get","date","sender_user_id","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","duration","file","voice","Component","propTypes","number","isRequired","object","func"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                title={`${dateString}, `}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n"]},"metadata":{},"sourceType":"module"}