{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnLeft/Settings/SettingsMenuButton.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nvar SettingsMenuButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SettingsMenuButton, _React$Component);\n\n  function SettingsMenuButton() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SettingsMenuButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SettingsMenuButton)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      anchorEl: null,\n      open: false\n    };\n\n    _this.handleMenuOpen = function (event) {\n      _this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    _this.handleMenuClose = function () {\n      _this.setState({\n        anchorEl: null\n      });\n    };\n\n    _this.handleLogOut = function () {\n      _this.handleMenuClose();\n\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleDone = function () {\n      _this.handleClose();\n\n      TdLibController.logOut();\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SettingsMenuButton, [{\n    key: \"render\",\n    value: function render() {\n      var t = this.props.t;\n      var _this$state = this.state,\n          anchorEl = _this$state.anchorEl,\n          open = _this$state.open;\n      return React.createElement(React.Fragment, null, React.createElement(IconButton, {\n        \"aria-owns\": anchorEl ? 'simple-menu' : null,\n        \"aria-haspopup\": \"true\",\n        className: \"header-right-button\",\n        \"aria-label\": \"Menu\",\n        onClick: this.handleMenuOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(MoreIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(Menu, {\n        id: \"main-menu\",\n        anchorEl: anchorEl,\n        open: Boolean(anchorEl),\n        onClose: this.handleMenuClose,\n        getContentAnchorEl: null,\n        disableAutoFocusItem: true,\n        disableRestoreFocus: true,\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right'\n        },\n        transformOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        onClick: this.handleLogOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(LogOutIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: t('LogOut'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }))), React.createElement(Dialog, {\n        transitionDuration: 0,\n        open: open,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, t('Confirm')), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        style: {\n          whiteSpace: 'pre-wrap'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, t('AreYouSureLogout'))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, t('Cancel')), React.createElement(Button, {\n        onClick: this.handleDone,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, t('Ok')))));\n    }\n  }]);\n\n  return SettingsMenuButton;\n}(React.Component);\n\nSettingsMenuButton.propTypes = {};\nexport default withTranslation()(SettingsMenuButton);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnLeft/Settings/SettingsMenuButton.js"],"names":["React","withTranslation","IconButton","ListItemIcon","ListItemText","Menu","MenuItem","LogOutIcon","MoreIcon","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TdLibController","SettingsMenuButton","state","anchorEl","open","handleMenuOpen","event","setState","currentTarget","handleMenuClose","handleLogOut","handleDone","handleClose","logOut","t","props","Boolean","vertical","horizontal","whiteSpace","Component","propTypes"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n"]},"metadata":{},"sourceType":"module"}