{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnLeft/Search/SearchInput.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nvar SearchInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SearchInput, _React$Component);\n\n  function SearchInput() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleKeyDown = function (event) {\n      if (event.keyCode === 13) {\n        event.preventDefault();\n      } else if (event.keyCode === 27) {\n        var _this$props = _this.props,\n            onChange = _this$props.onChange,\n            onClose = _this$props.onClose;\n        var element = event.target;\n        if (!element) return;\n\n        if (element.innerText) {\n          event.stopPropagation();\n          event.nativeEvent.stopImmediatePropagation();\n          element.innerText = null;\n          if (onChange) onChange(element.innerText);\n          return;\n        }\n\n        if (onClose) {\n          event.stopPropagation();\n          event.target.blur();\n          onClose();\n        }\n      }\n    };\n\n    _this.handleKeyUp = function (event) {\n      var element = event.target;\n      if (!element) return;\n      var innerHTML = element.innerHTML;\n\n      if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n        element.innerHTML = null;\n      }\n    };\n\n    _this.handlePaste = function (event) {\n      var plainText = event.clipboardData.getData('text/plain');\n\n      if (plainText) {\n        event.preventDefault();\n        document.execCommand('insertText', false, plainText);\n      }\n    };\n\n    _this.handleInput = function (event) {\n      var onChange = _this.props.onChange;\n      var element = event.target;\n      if (!element) return;\n\n      if (onChange) {\n        onChange(element.innerText);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          inputRef = _this$props2.inputRef,\n          t = _this$props2.t,\n          onFocus = _this$props2.onFocus;\n      return React.createElement(\"div\", {\n        className: \"search-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"search-inputbox\",\n        ref: inputRef,\n        placeholder: t('Search'),\n        contentEditable: true,\n        suppressContentEditableWarning: true,\n        onKeyDown: this.handleKeyDown,\n        onKeyUp: this.handleKeyUp,\n        onPaste: this.handlePaste,\n        onInput: this.handleInput,\n        onFocus: onFocus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(SearchIcon, {\n        className: \"search-input-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SearchInput;\n}(React.Component);\n\nSearchInput.propTypes = {\n  inputRef: PropTypes.object,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  onClose: PropTypes.func\n};\nexport default withTranslation()(SearchInput);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnLeft/Search/SearchInput.js"],"names":["React","PropTypes","withTranslation","SearchIcon","SearchInput","handleKeyDown","event","keyCode","preventDefault","props","onChange","onClose","element","target","innerText","stopPropagation","nativeEvent","stopImmediatePropagation","blur","handleKeyUp","innerHTML","handlePaste","plainText","clipboardData","getData","document","execCommand","handleInput","inputRef","t","onFocus","Component","propTypes","object","func"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                event.stopPropagation();\n                event.target.blur();\n                onClose();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                <SearchIcon className='search-input-icon' />\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(SearchInput);\n"]},"metadata":{},"sourceType":"module"}