{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnMiddle/FilesDropTarget.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nvar FilesDropTarget =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FilesDropTarget, _React$Component);\n\n  function FilesDropTarget(props) {\n    var _this;\n\n    _classCallCheck(this, FilesDropTarget);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FilesDropTarget).call(this, props));\n\n    _this.onClientUpdateDragging = function (update) {\n      var dragParams = AppStore.dragParams;\n\n      _this.setState({\n        dragParams: dragParams\n      });\n    };\n\n    _this.handleDragEnter = function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    };\n\n    _this.handleDrop = function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateDragging',\n        dragging: false\n      });\n\n      _this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    _this.handleDragLeave = function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateDragging',\n        dragging: false\n      });\n    };\n\n    _this.handleAttachDocumentComplete = function (files) {\n      if (files.length === 0) return;\n      TdLibController.clientUpdate({\n        '@type': 'clientUpdateSendFiles',\n        files: files\n      });\n    };\n\n    var _dragParams = AppStore.dragParams;\n    _this.state = {\n      dragParams: _dragParams\n    };\n    return _this;\n  }\n\n  _createClass(FilesDropTarget, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var dragParams = this.state.dragParams;\n      if (!dragParams) return null;\n      return React.createElement(\"div\", {\n        className: \"files-drop-target\",\n        onDragEnter: this.handleDragEnter,\n        onDragLeave: this.handleDragLeave,\n        onDrop: this.handleDrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"files-drop-target-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"files-drop-target-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"files-drop-target-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Drop files here\"), React.createElement(\"div\", {\n        className: \"files-drop-target-subtitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"to send them\"))));\n    }\n  }]);\n\n  return FilesDropTarget;\n}(React.Component);\n\nexport default FilesDropTarget;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnMiddle/FilesDropTarget.js"],"names":["React","FileStore","AppStore","TdLibController","FilesDropTarget","props","onClientUpdateDragging","update","dragParams","setState","handleDragEnter","event","preventDefault","stopPropagation","handleDrop","clientUpdate","dragging","handleAttachDocumentComplete","dataTransfer","files","handleDragLeave","length","state","on","off","Component"],"mappings":";;;;;;;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAO,uBAAP;;IAEMC,e;;;;;AACF,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,yFAAMA,KAAN;;AADe,UAgBnBC,sBAhBmB,GAgBM,UAAAC,MAAM,EAAI;AAAA,UACvBC,UADuB,GACRN,QADQ,CACvBM,UADuB;;AAG/B,YAAKC,QAAL,CAAc;AAAED,QAAAA,UAAU,EAAVA;AAAF,OAAd;AACH,KApBkB;;AAAA,UAsBnBE,eAtBmB,GAsBD,UAAAC,KAAK,EAAI;AACvBA,MAAAA,KAAK,CAACC,cAAN;AACAD,MAAAA,KAAK,CAACE,eAAN;AACH,KAzBkB;;AAAA,UA2BnBC,UA3BmB,GA2BN,UAAAH,KAAK,EAAI;AAClBA,MAAAA,KAAK,CAACC,cAAN;AACAD,MAAAA,KAAK,CAACE,eAAN;AACAV,MAAAA,eAAe,CAACY,YAAhB,CAA6B;AACzB,iBAAS,sBADgB;AAEzBC,QAAAA,QAAQ,EAAE;AAFe,OAA7B;;AAKA,YAAKC,4BAAL,CAAkCN,KAAK,CAACO,YAAN,CAAmBC,KAArD;AACH,KApCkB;;AAAA,UAsCnBC,eAtCmB,GAsCD,UAAAT,KAAK,EAAI;AACvBA,MAAAA,KAAK,CAACC,cAAN;AACAD,MAAAA,KAAK,CAACE,eAAN;AACAV,MAAAA,eAAe,CAACY,YAAhB,CAA6B;AACzB,iBAAS,sBADgB;AAEzBC,QAAAA,QAAQ,EAAE;AAFe,OAA7B;AAIH,KA7CkB;;AAAA,UA+CnBC,4BA/CmB,GA+CY,UAAAE,KAAK,EAAI;AACpC,UAAIA,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;AAExBlB,MAAAA,eAAe,CAACY,YAAhB,CAA6B;AACzB,iBAAS,uBADgB;AAEzBI,QAAAA,KAAK,EAALA;AAFyB,OAA7B;AAIH,KAtDkB;;AAAA,QAGPX,WAHO,GAGQN,QAHR,CAGPM,UAHO;AAKf,UAAKc,KAAL,GAAa;AAAEd,MAAAA,UAAU,EAAVA;AAAF,KAAb;AALe;AAMlB;;;;wCAEmB;AAChBN,MAAAA,QAAQ,CAACqB,EAAT,CAAY,sBAAZ,EAAoC,KAAKjB,sBAAzC;AACH;;;2CAEsB;AACnBJ,MAAAA,QAAQ,CAACsB,GAAT,CAAa,sBAAb,EAAqC,KAAKlB,sBAA1C;AACH;;;6BA0CQ;AAAA,UACGE,UADH,GACkB,KAAKc,KADvB,CACGd,UADH;AAEL,UAAI,CAACA,UAAL,EAAiB,OAAO,IAAP;AAEjB,aACI;AACI,QAAA,SAAS,EAAC,mBADd;AAEI,QAAA,WAAW,EAAE,KAAKE,eAFtB;AAGI,QAAA,WAAW,EAAE,KAAKU,eAHtB;AAII,QAAA,MAAM,EAAE,KAAKN,UAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,CADJ,CALJ,CADJ;AAcH;;;;EA3EyBd,KAAK,CAACyB,S;;AA8EpC,eAAerB,eAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n"]},"metadata":{},"sourceType":"module"}