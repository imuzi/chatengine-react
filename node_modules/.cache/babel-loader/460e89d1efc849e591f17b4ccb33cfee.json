{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnRight/SharedMedia/SharedMediaHeader.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nvar SharedMediaHeader =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SharedMediaHeader, _React$Component);\n\n  function SharedMediaHeader(props) {\n    var _this;\n\n    _classCallCheck(this, SharedMediaHeader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SharedMediaHeader).call(this, props));\n\n    _this.handleSearch = function () {\n      if (_this.searchInputRef.current) {\n        var innerText = _this.searchInputRef.current.innerText;\n\n        if (innerText) {\n          _this.searchInputRef.current.innerText = '';\n          var onSearch = _this.props.onSearch;\n          if (!onSearch) return;\n          onSearch('');\n          return;\n        }\n      }\n\n      var onCloseSearch = _this.props.onCloseSearch;\n      var openSearch = _this.state.openSearch;\n\n      _this.setState({\n        openSearch: !openSearch\n      });\n\n      if (onCloseSearch) {\n        onCloseSearch();\n      }\n    };\n\n    _this.handleKeyDown = function (event) {\n      if (event.keyCode === 13) {\n        event.preventDefault();\n      }\n    };\n\n    _this.handleKeyUp = function () {\n      var element = _this.searchInputRef.current;\n      if (!element) return;\n      var innerHTML = element.innerHTML;\n\n      if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n        element.innerHTML = null;\n      }\n\n      var innerText = element.innerText;\n      var onSearch = _this.props.onSearch;\n      if (!onSearch) return;\n      onSearch(innerText);\n    };\n\n    _this.handlePaste = function (event) {\n      var plainText = event.clipboardData.getData('text/plain');\n\n      if (plainText) {\n        event.preventDefault();\n        document.execCommand('insertText', false, plainText);\n      }\n    };\n\n    _this.searchInputRef = React.createRef();\n    _this.state = {\n      openSearch: false\n    };\n    return _this;\n  }\n\n  _createClass(SharedMediaHeader, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      var _this2 = this;\n\n      var openSearch = this.state.openSearch;\n\n      if (openSearch && openSearch !== prevProps.openSearch) {\n        setTimeout(function () {\n          if (_this2.searchInputRef.current) {\n            _this2.searchInputRef.current.focus();\n          }\n        }, ANIMATION_DURATION_200MS);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          t = _this$props.t,\n          title = _this$props.title,\n          onClick = _this$props.onClick,\n          onClose = _this$props.onClose,\n          onSearch = _this$props.onSearch;\n      var openSearch = this.state.openSearch;\n      return React.createElement(\"div\", {\n        className: \"header-master\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, !openSearch ? React.createElement(React.Fragment, null, React.createElement(IconButton, {\n        className: \"header-left-button\",\n        onClick: onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(ArrowBackIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"header-status grow cursor-pointer\",\n        onClick: onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"header-status-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, title))) : React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"header-search-input grow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"header-search-inputbox\",\n        ref: this.searchInputRef,\n        placeholder: t('Search'),\n        contentEditable: true,\n        suppressContentEditableWarning: true,\n        onKeyDown: this.handleKeyDown,\n        onKeyUp: this.handleKeyUp,\n        onPaste: this.handlePaste,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }))), Boolean(onSearch) && React.createElement(IconButton, {\n        className: \"header-right-button\",\n        onMouseDown: this.handleSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(SpeedDialIcon, {\n        open: openSearch,\n        icon: React.createElement(SearchIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }),\n        openIcon: React.createElement(CloseIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SharedMediaHeader;\n}(React.Component);\n\nSharedMediaHeader.propTypes = {\n  title: PropTypes.string,\n  onClick: PropTypes.func,\n  onClose: PropTypes.func,\n  onCloseSearch: PropTypes.func,\n  onSearch: PropTypes.func\n};\nexport default withTranslation()(SharedMediaHeader);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnRight/SharedMedia/SharedMediaHeader.js"],"names":["React","PropTypes","withTranslation","IconButton","ArrowBackIcon","CloseIcon","SearchIcon","SpeedDialIcon","ANIMATION_DURATION_200MS","SharedMediaHeader","props","handleSearch","searchInputRef","current","innerText","onSearch","onCloseSearch","openSearch","state","setState","handleKeyDown","event","keyCode","preventDefault","handleKeyUp","element","innerHTML","handlePaste","plainText","clipboardData","getData","document","execCommand","createRef","prevProps","prevState","snapshot","setTimeout","focus","t","title","onClick","onClose","Boolean","Component","propTypes","string","func"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n"]},"metadata":{},"sourceType":"module"}