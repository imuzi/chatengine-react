{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from '../Stores/EventEmitter';\nimport packageJson from '../../package.json';\nimport { stringToBoolean, getBrowser, getOSName } from '../Utils/Common';\nimport { VERBOSITY_JS_MAX, VERBOSITY_JS_MIN, VERBOSITY_MAX, VERBOSITY_MIN, WASM_FILE_HASH, WASM_FILE_NAME } from '../Constants';\nimport TdClient from 'tdweb/dist/tdweb'; // import TdClient from '@arseny30/tdweb/dist/tdweb';\n\nfunction databaseExists(dbname, callback) {\n  var req = indexedDB.open(dbname);\n  var existed = true;\n\n  req.onsuccess = function () {\n    req.result.close();\n    if (!existed) indexedDB.deleteDatabase(dbname);\n    callback(existed);\n  };\n\n  req.onupgradeneeded = function () {\n    existed = false;\n  };\n}\n\nvar TdLibController =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(TdLibController, _EventEmitter);\n\n  function TdLibController() {\n    var _this;\n\n    _classCallCheck(this, TdLibController);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TdLibController).call(this));\n\n    _this.init = function (location) {\n      _this.setParameters(location);\n\n      var _this$parameters = _this.parameters,\n          verbosity = _this$parameters.verbosity,\n          jsVerbosity = _this$parameters.jsVerbosity,\n          useTestDC = _this$parameters.useTestDC,\n          readOnly = _this$parameters.readOnly,\n          fastUpdating = _this$parameters.fastUpdating,\n          useDatabase = _this$parameters.useDatabase,\n          mode = _this$parameters.mode;\n      var dbName = useTestDC ? 'tdlib_test' : 'tdlib';\n      databaseExists(dbName, function (exists) {\n        _this.clientUpdate({\n          '@type': 'clientUpdateTdLibDatabaseExists',\n          exists: exists\n        });\n\n        var options = {\n          logVerbosityLevel: verbosity,\n          jsLogVerbosityLevel: jsVerbosity,\n          mode: mode,\n          // 'wasm-streaming'/'wasm'/'asmjs'\n          prefix: useTestDC ? 'tdlib_test' : 'tdlib',\n          readOnly: readOnly,\n          isBackground: false,\n          useDatabase: useDatabase,\n          wasmUrl: \"\".concat(WASM_FILE_NAME, \"?_sw-precache=\").concat(WASM_FILE_HASH) // onUpdate: update => this.emit('update', update)\n\n        };\n        console.log(\"[TdLibController] (fast_updating=\".concat(fastUpdating, \") Start client with params=\").concat(JSON.stringify(options)));\n        _this.client = new TdClient(options);\n\n        _this.client.onUpdate = function (update) {\n          if (!_this.disableLog) {\n            if (update['@type'] === 'updateFile') {\n              console.log('receive updateFile file_id=' + update.file.id, update);\n            } else {\n              console.log('receive update', update);\n            }\n          }\n\n          _this.emit('update', update);\n        };\n      });\n    };\n\n    _this.clientUpdate = function (update) {\n      if (!_this.disableLog) {\n        console.log('clientUpdate', update);\n      }\n\n      _this.emit('clientUpdate', update);\n    };\n\n    _this.setParameters = function (location) {\n      if (!location) return;\n      var search = location.search;\n      if (!search) return;\n      var params = new URLSearchParams(search.toLowerCase());\n\n      if (params.has('test')) {\n        _this.parameters.useTestDC = stringToBoolean(params.get('test'));\n      }\n\n      if (params.has('verbosity')) {\n        var verbosity = parseInt(params.get('verbosity'), 10);\n\n        if (verbosity >= VERBOSITY_MIN && verbosity <= VERBOSITY_MAX) {\n          _this.parameters.verbosity = verbosity;\n        }\n      }\n\n      if (params.has('jsverbosity')) {\n        var jsVerbosity = parseInt(params.get('jsverbosity'), 10);\n\n        if (jsVerbosity >= VERBOSITY_JS_MIN && jsVerbosity <= VERBOSITY_JS_MAX) {\n          _this.parameters.jsVerbosity = jsVerbosity;\n        }\n      }\n\n      _this.parameters.verbosity = 1024;\n      _this.parameters.jsVerbosity = 1024;\n\n      if (params.has('tag') && params.has('tagverbosity')) {\n        var tag = params.get('tag').replace('[', '').replace(']', '').split(',');\n        var tagVerbosity = params.get('tagverbosity').replace('[', '').replace(']', '').split(',');\n\n        if (tag && tagVerbosity && tag.length === tagVerbosity.length) {\n          _this.parameters.tag = tag;\n          _this.parameters.tagVerbosity = tagVerbosity;\n        }\n      }\n\n      if (params.has('readonly')) {\n        _this.parameters.readOnly = stringToBoolean(params.get('readonly'));\n      }\n\n      if (params.has('fastupdating')) {\n        _this.parameters.fastUpdating = stringToBoolean(params.get('fastupdating'));\n      }\n\n      if (params.has('db')) {\n        _this.parameters.useDatabase = stringToBoolean(params.get('db'));\n      }\n\n      if (params.has('mode')) {\n        _this.parameters.mode = params.get('mode');\n      }\n\n      if (params.has('clientlog')) {\n        _this.disableLog = !stringToBoolean(params.get('clientlog'));\n      }\n\n      _this.disableLog = false;\n    };\n\n    _this.send = function (request) {\n      if (!_this.client) {\n        console.log('send (none init)', request);\n        return;\n      }\n\n      if (!_this.disableLog) {\n        console.log('send', request);\n        return _this.client.send(request).then(function (result) {\n          console.log('send result', result);\n          return result;\n        }).catch(function (error) {\n          console.error('send error', error);\n          throw error;\n        });\n      } else {\n        return _this.client.send(request);\n      }\n    };\n\n    _this.sendTdParameters =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var apiId, apiHash, useTestDC, version, i, tag, tagVerbosity;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              apiId = process.env.REACT_APP_TELEGRAM_API_ID;\n              apiHash = process.env.REACT_APP_TELEGRAM_API_HASH; // console.log('[td] sendTdParameters', apiHash, apiId);\n\n              if (!apiId || !apiHash) {\n                if (window.confirm('API id is missing!\\n' + 'In order to obtain an API id and develop your own application ' + 'using the NebulaChat API please visit https://nebula.chat/api/obtaining_api_id')) {\n                  window.location.href = 'https://nebula.chat/api/obtaining_api_id';\n                }\n              }\n\n              useTestDC = _this.parameters.useTestDC;\n              version = packageJson.version;\n\n              _this.send({\n                '@type': 'setTdlibParameters',\n                parameters: {\n                  '@type': 'tdParameters',\n                  use_test_dc: useTestDC,\n                  api_id: apiId,\n                  api_hash: apiHash,\n                  system_language_code: navigator.language || 'en',\n                  device_model: getBrowser(),\n                  system_version: getOSName(),\n                  application_version: version,\n                  use_secret_chats: false,\n                  use_message_database: true,\n                  use_file_database: false,\n                  database_directory: '/db',\n                  files_directory: '/' // ,\n                  // extra: {\n                  //     a: ['a', 'b'],\n                  //     b: 123\n                  // }\n\n                }\n              });\n\n              if (_this.parameters.tag && _this.parameters.tagVerbosity) {\n                for (i = 0; i < _this.parameters.tag.length; i++) {\n                  tag = _this.parameters.tag[i];\n                  tagVerbosity = _this.parameters.tagVerbosity[i];\n\n                  _this.send({\n                    '@type': 'setLogTagVerbosityLevel',\n                    tag: tag,\n                    new_verbosity_level: 1024\n                  });\n                }\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.setChatId = function (chatId) {\n      var messageId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var update = {\n        '@type': 'clientUpdateChatId',\n        chatId: chatId,\n        messageId: messageId\n      };\n\n      _this.clientUpdate(update);\n    };\n\n    _this.parameters = {\n      useTestDC: false,\n      readOnly: false,\n      verbosity: 4,\n      jsVerbosity: 4,\n      fastUpdating: true,\n      useDatabase: false,\n      mode: 'wasm'\n    };\n    _this.disableLog = false;\n    return _this;\n  }\n\n  _createClass(TdLibController, [{\n    key: \"logOut\",\n    value: function logOut() {\n      var _this2 = this;\n\n      this.send({\n        '@type': 'logOut'\n      }).catch(function (error) {\n        _this2.emit('tdlib_auth_error', error);\n      });\n    }\n  }, {\n    key: \"setMediaViewerContent\",\n    value: function setMediaViewerContent(content) {\n      this.clientUpdate({\n        '@type': 'clientUpdateMediaViewerContent',\n        content: content\n      });\n    }\n  }]);\n\n  return TdLibController;\n}(EventEmitter);\n\nvar controller = new TdLibController();\nexport default controller;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Controllers/TdLibController.js"],"names":["EventEmitter","packageJson","stringToBoolean","getBrowser","getOSName","VERBOSITY_JS_MAX","VERBOSITY_JS_MIN","VERBOSITY_MAX","VERBOSITY_MIN","WASM_FILE_HASH","WASM_FILE_NAME","TdClient","databaseExists","dbname","callback","req","indexedDB","open","existed","onsuccess","result","close","deleteDatabase","onupgradeneeded","TdLibController","init","location","setParameters","parameters","verbosity","jsVerbosity","useTestDC","readOnly","fastUpdating","useDatabase","mode","dbName","exists","clientUpdate","options","logVerbosityLevel","jsLogVerbosityLevel","prefix","isBackground","wasmUrl","console","log","JSON","stringify","client","onUpdate","update","disableLog","file","id","emit","search","params","URLSearchParams","toLowerCase","has","get","parseInt","tag","replace","split","tagVerbosity","length","send","request","then","catch","error","sendTdParameters","apiId","process","env","REACT_APP_TELEGRAM_API_ID","apiHash","REACT_APP_TELEGRAM_API_HASH","window","confirm","href","version","use_test_dc","api_id","api_hash","system_language_code","navigator","language","device_model","system_version","application_version","use_secret_chats","use_message_database","use_file_database","database_directory","files_directory","i","new_verbosity_level","setChatId","chatId","messageId","content","controller"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from '../Stores/EventEmitter';\nimport packageJson from '../../package.json';\nimport { stringToBoolean, getBrowser, getOSName } from '../Utils/Common';\nimport {\n    VERBOSITY_JS_MAX,\n    VERBOSITY_JS_MIN,\n    VERBOSITY_MAX,\n    VERBOSITY_MIN,\n    WASM_FILE_HASH,\n    WASM_FILE_NAME\n} from '../Constants';\nimport TdClient from 'tdweb/dist/tdweb';\n// import TdClient from '@arseny30/tdweb/dist/tdweb';\n\nfunction databaseExists(dbname, callback) {\n    var req = indexedDB.open(dbname);\n    var existed = true;\n    req.onsuccess = function() {\n        req.result.close();\n        if (!existed) indexedDB.deleteDatabase(dbname);\n        callback(existed);\n    };\n    req.onupgradeneeded = function() {\n        existed = false;\n    };\n}\n\nclass TdLibController extends EventEmitter {\n    constructor() {\n        super();\n\n        this.parameters = {\n            useTestDC: false,\n            readOnly: false,\n            verbosity: 4,\n            jsVerbosity: 4,\n            fastUpdating: true,\n            useDatabase: false,\n            mode: 'wasm'\n        };\n\n        this.disableLog = false;\n    }\n\n    init = location => {\n        this.setParameters(location);\n\n        const { verbosity, jsVerbosity, useTestDC, readOnly, fastUpdating, useDatabase, mode } = this.parameters;\n        const dbName = useTestDC ? 'tdlib_test' : 'tdlib';\n\n        databaseExists(dbName, exists => {\n            this.clientUpdate({ '@type': 'clientUpdateTdLibDatabaseExists', exists });\n\n            let options = {\n                logVerbosityLevel: verbosity,\n                jsLogVerbosityLevel: jsVerbosity,\n                mode: mode, // 'wasm-streaming'/'wasm'/'asmjs'\n                prefix: useTestDC ? 'tdlib_test' : 'tdlib',\n                readOnly: readOnly,\n                isBackground: false,\n                useDatabase: useDatabase,\n                wasmUrl: `${WASM_FILE_NAME}?_sw-precache=${WASM_FILE_HASH}`\n                // onUpdate: update => this.emit('update', update)\n            };\n\n            console.log(\n                `[TdLibController] (fast_updating=${fastUpdating}) Start client with params=${JSON.stringify(options)}`\n            );\n\n            this.client = new TdClient(options);\n            this.client.onUpdate = update => {\n                if (!this.disableLog) {\n                    if (update['@type'] === 'updateFile') {\n                        console.log('receive updateFile file_id=' + update.file.id, update);\n                    } else {\n                        console.log('receive update', update);\n                    }\n                }\n                this.emit('update', update);\n            };\n        });\n    };\n\n    clientUpdate = update => {\n        if (!this.disableLog) {\n            console.log('clientUpdate', update);\n        }\n        this.emit('clientUpdate', update);\n    };\n\n    setParameters = location => {\n        if (!location) return;\n\n        const { search } = location;\n        if (!search) return;\n\n        const params = new URLSearchParams(search.toLowerCase());\n\n        if (params.has('test')) {\n            this.parameters.useTestDC = stringToBoolean(params.get('test'));\n        }\n\n        if (params.has('verbosity')) {\n            const verbosity = parseInt(params.get('verbosity'), 10);\n            if (verbosity >= VERBOSITY_MIN && verbosity <= VERBOSITY_MAX) {\n                this.parameters.verbosity = verbosity;\n            }\n        }\n\n        if (params.has('jsverbosity')) {\n            const jsVerbosity = parseInt(params.get('jsverbosity'), 10);\n            if (jsVerbosity >= VERBOSITY_JS_MIN && jsVerbosity <= VERBOSITY_JS_MAX) {\n                this.parameters.jsVerbosity = jsVerbosity;\n            }\n        }\n\n        this.parameters.verbosity = 1024\n        this.parameters.jsVerbosity = 1024\n\n        if (params.has('tag') && params.has('tagverbosity')) {\n            const tag = params\n                .get('tag')\n                .replace('[', '')\n                .replace(']', '')\n                .split(',');\n            const tagVerbosity = params\n                .get('tagverbosity')\n                .replace('[', '')\n                .replace(']', '')\n                .split(',');\n            if (tag && tagVerbosity && tag.length === tagVerbosity.length) {\n                this.parameters.tag = tag;\n                this.parameters.tagVerbosity = tagVerbosity;\n            }\n        }\n\n        if (params.has('readonly')) {\n            this.parameters.readOnly = stringToBoolean(params.get('readonly'));\n        }\n\n        if (params.has('fastupdating')) {\n            this.parameters.fastUpdating = stringToBoolean(params.get('fastupdating'));\n        }\n\n        if (params.has('db')) {\n            this.parameters.useDatabase = stringToBoolean(params.get('db'));\n        }\n        if (params.has('mode')) {\n            this.parameters.mode = params.get('mode');\n        }\n        if (params.has('clientlog')) {\n            this.disableLog = !stringToBoolean(params.get('clientlog'));\n        }\n        this.disableLog = false\n    };\n\n    send = request => {\n        if (!this.client) {\n            console.log('send (none init)', request);\n            return;\n        }\n\n        if (!this.disableLog) {\n            console.log('send', request);\n\n            return this.client\n                .send(request)\n                .then(result => {\n                    console.log('send result', result);\n                    return result;\n                })\n                .catch(error => {\n                    console.error('send error', error);\n\n                    throw error;\n                });\n        } else {\n            return this.client.send(request);\n        }\n    };\n\n    sendTdParameters = async () => {\n        const apiId = process.env.REACT_APP_TELEGRAM_API_ID;\n        const apiHash = process.env.REACT_APP_TELEGRAM_API_HASH;\n\n        // console.log('[td] sendTdParameters', apiHash, apiId);\n        if (!apiId || !apiHash) {\n            if (\n                window.confirm(\n                    'API id is missing!\\n' +\n                        'In order to obtain an API id and develop your own application ' +\n                        'using the NebulaChat API please visit https://nebula.chat/api/obtaining_api_id'\n                )\n            ) {\n                window.location.href = 'https://nebula.chat/api/obtaining_api_id';\n            }\n        }\n\n        const { useTestDC } = this.parameters;\n        const { version } = packageJson;\n\n        this.send({\n            '@type': 'setTdlibParameters',\n            parameters: {\n                '@type': 'tdParameters',\n                use_test_dc: useTestDC,\n                api_id: apiId,\n                api_hash: apiHash,\n                system_language_code: navigator.language || 'en',\n                device_model: getBrowser(),\n                system_version: getOSName(),\n                application_version: version,\n                use_secret_chats: false,\n                use_message_database: true,\n                use_file_database: false,\n                database_directory: '/db',\n                files_directory: '/'\n            }\n            // ,\n            // extra: {\n            //     a: ['a', 'b'],\n            //     b: 123\n            // }\n        });\n\n        if (this.parameters.tag && this.parameters.tagVerbosity) {\n            for (let i = 0; i < this.parameters.tag.length; i++) {\n                let tag = this.parameters.tag[i];\n                let tagVerbosity = this.parameters.tagVerbosity[i];\n\n                this.send({\n                    '@type': 'setLogTagVerbosityLevel',\n                    tag: tag,\n                    new_verbosity_level: 1024\n                });\n            }\n        }\n    };\n\n    logOut() {\n        this.send({ '@type': 'logOut' }).catch(error => {\n            this.emit('tdlib_auth_error', error);\n        });\n    }\n\n    setChatId = (chatId, messageId = null) => {\n        const update = {\n            '@type': 'clientUpdateChatId',\n            chatId: chatId,\n            messageId: messageId\n        };\n\n        this.clientUpdate(update);\n    };\n\n    setMediaViewerContent(content) {\n        this.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: content\n        });\n    }\n}\n\nconst controller = new TdLibController();\n\nexport default controller;\n"]},"metadata":{},"sourceType":"module"}