{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnMiddle/Placeholder.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport { withTranslation } from 'react-i18next'; // import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\n\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nvar Placeholder =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Placeholder, _React$Component);\n\n  function Placeholder(props) {\n    var _this;\n\n    _classCallCheck(this, Placeholder);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Placeholder).call(this, props));\n\n    _this.onClientUpdateCacheLoaded = function (update) {\n      var cacheLoaded = AppStore.cacheLoaded;\n\n      _this.setState({\n        cacheLoaded: cacheLoaded\n      });\n    };\n\n    _this.onClientUpdateChatId = function (update) {\n      var chatId = update.nextChatId;\n\n      _this.setState({\n        chatId: chatId\n      });\n    };\n\n    _this.onClientUpdateDialogsReady = function (update) {\n      var dialogsReady = AppStore.dialogsReady;\n\n      _this.setState({\n        dialogsReady: dialogsReady\n      });\n    };\n\n    var _chatId = AppStore.chatId,\n        _dialogsReady = AppStore.dialogsReady,\n        _cacheLoaded = AppStore.cacheLoaded;\n    _this.state = {\n      chatId: _chatId,\n      dialogsReady: _dialogsReady,\n      cacheLoaded: _cacheLoaded\n    };\n    return _this;\n  }\n\n  _createClass(Placeholder, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState, nextContext) {\n      if (nextState.chatId !== this.state.chatId) {\n        return true;\n      }\n\n      if (nextState.dialogsReady !== this.state.dialogsReady) {\n        return true;\n      }\n\n      if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n      AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n      AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n      AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n      AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          t = _this$props.t,\n          force = _this$props.force;\n      var _this$state = this.state,\n          chatId = _this$state.chatId,\n          dialogsReady = _this$state.dialogsReady,\n          cacheLoaded = _this$state.cacheLoaded;\n      if (chatId) return null; // if (!dialogsReady && !cacheLoaded) return null;\n\n      return React.createElement(\"div\", {\n        className: \"placeholder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"placeholder-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"placeholder-meta\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, t('SelectChatToStartMessaging'))));\n    }\n  }]);\n\n  return Placeholder;\n}(React.Component);\n\nexport default withTranslation()(Placeholder);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnMiddle/Placeholder.js"],"names":["React","withTranslation","AppStore","Placeholder","props","onClientUpdateCacheLoaded","update","cacheLoaded","setState","onClientUpdateChatId","chatId","nextChatId","onClientUpdateDialogsReady","dialogsReady","state","nextProps","nextState","nextContext","on","off","t","force","Component"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n"]},"metadata":{},"sourceType":"module"}