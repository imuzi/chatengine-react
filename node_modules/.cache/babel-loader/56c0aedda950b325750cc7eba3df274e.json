{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Tile/OnlineStatus.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nvar OnlineStatus =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OnlineStatus, _React$Component);\n\n  function OnlineStatus(props) {\n    var _this;\n\n    _classCallCheck(this, OnlineStatus);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OnlineStatus).call(this, props));\n\n    _this.onUpdateUserStatus = function (update) {\n      var userId = _this.state.userId;\n      var user_id = update.user_id;\n      if (user_id !== userId) return;\n      var user = UserStore.get(userId);\n      if (!user) return;\n\n      _this.setState({\n        online: isUserOnline(user)\n      });\n    };\n\n    var _userId = getChatUserId(props.chatId);\n\n    var _user = UserStore.get(_userId);\n\n    _this.state = {\n      userId: _userId,\n      online: isUserOnline(_user)\n    };\n    return _this;\n  }\n\n  _createClass(OnlineStatus, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          size = _this$props.size,\n          borderSize = _this$props.borderSize;\n      var online = this.state.online;\n      if (!online) return null;\n      return React.createElement(\"div\", {\n        className: \"online-status\",\n        style: {\n          width: size,\n          height: size\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"online-status-icon\",\n        style: {\n          padding: borderSize\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"online-status-indicator\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return OnlineStatus;\n}(React.Component);\n\nOnlineStatus.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  size: PropTypes.number,\n  borderSize: PropTypes.number\n};\nOnlineStatus.defaultProps = {\n  size: 14,\n  borderSize: 2\n};\nexport default OnlineStatus;","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Tile/OnlineStatus.js"],"names":["React","PropTypes","isUserOnline","getChatUserId","UserStore","OnlineStatus","props","onUpdateUserStatus","update","userId","state","user_id","user","get","setState","online","chatId","on","off","size","borderSize","width","height","padding","Component","propTypes","number","isRequired","defaultProps"],"mappings":";;;;;;;AAAA;;;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAO,oBAAP;;IAEMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;;AADe,UAoBnBC,kBApBmB,GAoBE,UAAAC,MAAM,EAAI;AAAA,UACnBC,MADmB,GACR,MAAKC,KADG,CACnBD,MADmB;AAAA,UAEnBE,OAFmB,GAEPH,MAFO,CAEnBG,OAFmB;AAG3B,UAAIA,OAAO,KAAKF,MAAhB,EAAwB;AAExB,UAAMG,IAAI,GAAGR,SAAS,CAACS,GAAV,CAAcJ,MAAd,CAAb;AACA,UAAI,CAACG,IAAL,EAAW;;AAEX,YAAKE,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAEb,YAAY,CAACU,IAAD;AAAtB,OAAd;AACH,KA7BkB;;AAGf,QAAMH,OAAM,GAAGN,aAAa,CAACG,KAAK,CAACU,MAAP,CAA5B;;AACA,QAAMJ,KAAI,GAAGR,SAAS,CAACS,GAAV,CAAcJ,OAAd,CAAb;;AAEA,UAAKC,KAAL,GAAa;AACTD,MAAAA,MAAM,EAANA,OADS;AAETM,MAAAA,MAAM,EAAEb,YAAY,CAACU,KAAD;AAFX,KAAb;AANe;AAUlB;;;;wCAEmB;AAChBR,MAAAA,SAAS,CAACa,EAAV,CAAa,kBAAb,EAAiC,KAAKV,kBAAtC;AACH;;;2CAEsB;AACnBH,MAAAA,SAAS,CAACc,GAAV,CAAc,kBAAd,EAAkC,KAAKX,kBAAvC;AACH;;;6BAaQ;AAAA,wBACwB,KAAKD,KAD7B;AAAA,UACGa,IADH,eACGA,IADH;AAAA,UACSC,UADT,eACSA,UADT;AAAA,UAEGL,MAFH,GAEc,KAAKL,KAFnB,CAEGK,MAFH;AAGL,UAAI,CAACA,MAAL,EAAa,OAAO,IAAP;AAEb,aACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,KAAK,EAAE;AAAEM,UAAAA,KAAK,EAAEF,IAAT;AAAeG,UAAAA,MAAM,EAAEH;AAAvB,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAoC,QAAA,KAAK,EAAE;AAAEI,UAAAA,OAAO,EAAEH;AAAX,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ;AAOH;;;;EA5CsBpB,KAAK,CAACwB,S;;AA+CjCnB,YAAY,CAACoB,SAAb,GAAyB;AACrBT,EAAAA,MAAM,EAAEf,SAAS,CAACyB,MAAV,CAAiBC,UADJ;AAErBR,EAAAA,IAAI,EAAElB,SAAS,CAACyB,MAFK;AAGrBN,EAAAA,UAAU,EAAEnB,SAAS,CAACyB;AAHD,CAAzB;AAMArB,YAAY,CAACuB,YAAb,GAA4B;AACxBT,EAAAA,IAAI,EAAE,EADkB;AAExBC,EAAAA,UAAU,EAAE;AAFY,CAA5B;AAKA,eAAef,YAAf","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n"]},"metadata":{},"sourceType":"module"}