{"ast":null,"code":"import _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnMiddle/InputBoxHeader.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nvar InputBoxHeader =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InputBoxHeader, _React$Component);\n\n  function InputBoxHeader() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, InputBoxHeader);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InputBoxHeader)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onUpdateMessageContent = function (update) {\n      var _this$props = _this.props,\n          chatId = _this$props.chatId,\n          messageId = _this$props.messageId,\n          editMessageId = _this$props.editMessageId;\n      var chat_id = update.chat_id,\n          message_id = update.message_id;\n      if (chatId !== chat_id) return;\n      if (messageId !== message_id && editMessageId !== message_id) return;\n\n      _this.forceUpdate();\n    };\n\n    _this.handleClose = function () {\n      var _this$props2 = _this.props,\n          chatId = _this$props2.chatId,\n          editMessageId = _this$props2.editMessageId;\n\n      if (editMessageId) {\n        editMessage(chatId, 0);\n      } else {\n        replyMessage(chatId, 0);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(InputBoxHeader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          chatId = _this$props3.chatId,\n          messageId = _this$props3.messageId,\n          editMessageId = _this$props3.editMessageId,\n          t = _this$props3.t,\n          onClick = _this$props3.onClick;\n      if (!chatId) return null;\n      if (!messageId && !editMessageId) return null;\n      return React.createElement(\"div\", {\n        className: \"inputbox-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inputbox-header-left-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        className: \"inputbox-icon-button\",\n        \"aria-label\": \"Close\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"inputbox-header-middle-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Reply, {\n        chatId: chatId,\n        messageId: editMessageId || messageId,\n        title: editMessageId ? t('EditMessage') : null,\n        onClick: onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"inputbox-header-right-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return InputBoxHeader;\n}(React.Component);\n\nInputBoxHeader.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  messageId: PropTypes.number.isRequired,\n  editMessageId: PropTypes.number,\n  onClick: PropTypes.func\n};\nexport default withTranslation()(InputBoxHeader);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/ColumnMiddle/InputBoxHeader.js"],"names":["React","PropTypes","withTranslation","CloseIcon","IconButton","Reply","editMessage","replyMessage","MessageStore","TdLibController","InputBoxHeader","onUpdateMessageContent","update","props","chatId","messageId","editMessageId","chat_id","message_id","forceUpdate","handleClose","on","off","t","onClick","Component","propTypes","number","isRequired","func"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n"]},"metadata":{},"sourceType":"module"}