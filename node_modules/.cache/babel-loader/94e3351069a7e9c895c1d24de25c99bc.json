{"ast":null,"code":"import _slicedToArray from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wubenqi/nebula-chat/telegram-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wubenqi/nebula-chat/telegram-react/src/Components/Viewer/MediaViewer.js\";\n\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport { cancelPreloadMediaViewerContent, getMediaFile, loadMediaViewerContent, preloadMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { filterDuplicateMessages, isAnimationMessage, isLottieMessage, isMediaContent, isVideoMessage } from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nvar MediaViewer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MediaViewer, _React$Component);\n\n  function MediaViewer(props) {\n    var _this;\n\n    _classCallCheck(this, MediaViewer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MediaViewer).call(this, props));\n\n    _this.onKeyDown = function (event) {\n      if (event.keyCode === 27) {\n        var deleteConfirmationOpened = _this.state.deleteConfirmationOpened;\n        if (deleteConfirmationOpened) return;\n\n        _this.handleClose();\n      } else if (event.keyCode === 39) {\n        _this.handleNext();\n      } else if (event.keyCode === 37) {\n        _this.handlePrevious();\n      }\n    };\n\n    _this.onUpdateMessageContent = function (update) {\n      var chat_id = update.chat_id,\n          message_id = update.message_id,\n          new_content = update.new_content,\n          old_content = update.old_content;\n      var chatId = _this.props.chatId;\n      var _this$state = _this.state,\n          currentMessageId = _this$state.currentMessageId,\n          totalCount = _this$state.totalCount;\n      if (chatId !== chat_id) return;\n      var message = MessageStore.get(chat_id, message_id);\n      if (!message) return;\n      loadMediaViewerContent([message]);\n      var addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n\n      if (addMessage) {\n        if (_this.history.length >= 2 && (_this.firstSliceLoaded || between(message_id, _this.history[0].id, _this.history[_this.history.length - 1].id))) {\n          var inserted = false;\n          var history = [];\n\n          for (var i = 0; i < _this.history.length; i++) {\n            if (_this.history[i].id > message_id) {\n              history.push(_this.history[i]);\n            } else {\n              if (!inserted) {\n                inserted = true;\n                history.push(message);\n              }\n\n              history.push(_this.history[i]);\n            }\n          }\n\n          _this.history = history;\n        }\n\n        var index = _this.history.findIndex(function (x) {\n          return x.id === currentMessageId;\n        });\n\n        _this.setState({\n          hasNextMedia: _this.hasNextMedia(index),\n          hasPreviousMedia: _this.hasPreviousMedia(index),\n          totalCount: totalCount + 1\n        });\n      }\n\n      var removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n\n      if (removeMessage) {\n        var oldHistory = _this.history;\n        _this.history = _this.history.filter(function (x) {\n          return x.id !== message_id;\n        });\n\n        if (currentMessageId === message_id) {\n          var filterMap = new Map();\n          filterMap.set(message_id, message_id);\n\n          _this.moveToNextMedia(oldHistory, filterMap);\n\n          _this.setState({\n            totalCount: Math.max(totalCount - 1, 0)\n          });\n        } else {\n          var _index = _this.history.findIndex(function (x) {\n            return x.id === currentMessageId;\n          });\n\n          _this.setState({\n            hasNextMedia: _this.hasNextMedia(_index),\n            hasPreviousMedia: _this.hasPreviousMedia(_index),\n            totalCount: Math.max(totalCount - 1, 0)\n          });\n        }\n      }\n    };\n\n    _this.onUpdateDeleteMessages = function (update) {\n      var chat_id = update.chat_id,\n          message_ids = update.message_ids,\n          is_permanent = update.is_permanent;\n      var chatId = _this.props.chatId;\n      var _this$state2 = _this.state,\n          currentMessageId = _this$state2.currentMessageId,\n          totalCount = _this$state2.totalCount;\n      if (!is_permanent) return;\n      if (chatId !== chat_id) return;\n      var filterMap = message_ids.reduce(function (accumulator, currentId) {\n        accumulator.set(currentId, currentId);\n        return accumulator;\n      }, new Map());\n      var oldHistory = _this.history;\n      var deletedCount = oldHistory.length;\n      _this.history = _this.history.filter(function (x) {\n        return !filterMap.has(x.id);\n      });\n      deletedCount -= _this.history.length;\n\n      _this.setState({\n        totalCount: Math.max(totalCount - deletedCount, 0)\n      });\n\n      if (!_this.history.length) {\n        setMediaViewerContent(null);\n        return;\n      }\n\n      if (filterMap.has(currentMessageId)) {\n        _this.moveToNextMedia(oldHistory, filterMap);\n      }\n    };\n\n    _this.onUpdateNewMessage = function (update) {\n      var chatId = _this.props.chatId;\n      var _this$state3 = _this.state,\n          currentMessageId = _this$state3.currentMessageId,\n          totalCount = _this$state3.totalCount;\n      var message = update.message;\n      if (!message) return;\n      if (!isMediaContent(message.content)) return;\n      if (message.chat_id !== chatId) return;\n      if (!_this.firstSliceLoaded) return;\n      _this.history = [message].concat(_this.history);\n\n      var index = _this.history.findIndex(function (x) {\n        return x.id === currentMessageId;\n      });\n\n      _this.setState({\n        hasNextMedia: _this.hasNextMedia(index),\n        hasPreviousMedia: _this.hasPreviousMedia(index),\n        totalCount: totalCount + 1\n      });\n    };\n\n    _this.getFilter = function (chatId, messageId) {\n      var message = MessageStore.get(chatId, messageId);\n      if (!message) return null;\n      var content = message.content;\n      if (!content) return null;\n\n      switch (content['@type']) {\n        case 'messageChatChangePhoto':\n          {\n            return {\n              '@type': 'searchMessagesFilterChatPhoto'\n            };\n          }\n\n        case 'messagePhoto':\n          {\n            return {\n              '@type': 'searchMessagesFilterPhotoAndVideo'\n            };\n          }\n\n        case 'messageVideo':\n          {\n            return {\n              '@type': 'searchMessagesFilterPhotoAndVideo'\n            };\n          }\n\n        default:\n          {\n            return null;\n          }\n      }\n    };\n\n    _this.loadHistory =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _this$props, chatId, messageId, filter, result, currentMessageId, index, _filter, maxCount, count, _loop;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$props = _this.props, chatId = _this$props.chatId, messageId = _this$props.messageId;\n              filter = _this.getFilter(chatId, messageId);\n              result = {\n                '@type': 'messages',\n                messages: [],\n                total_count: 0\n              };\n\n              if (!filter) {\n                _context2.next = 7;\n                break;\n              }\n\n              _context2.next = 6;\n              return TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n              });\n\n            case 6:\n              result = _context2.sent;\n\n            case 7:\n              filterDuplicateMessages(result, _this.history);\n              MessageStore.setItems(result.messages);\n              _this.history = result.messages;\n              _this.firstSliceLoaded = result.messages.length === 0;\n              currentMessageId = _this.state.currentMessageId;\n              index = _this.history.findIndex(function (x) {\n                return x.id === currentMessageId;\n              });\n\n              _this.setState({\n                hasNextMedia: _this.hasNextMedia(index),\n                hasPreviousMedia: _this.hasPreviousMedia(index)\n              });\n\n              if (!(index === -1)) {\n                _context2.next = 19;\n                break;\n              }\n\n              _this.history = [MessageStore.get(chatId, currentMessageId)];\n              preloadMediaViewerContent(0, _this.history);\n              _context2.next = 30;\n              break;\n\n            case 19:\n              preloadMediaViewerContent(index, _this.history);\n              _filter = _this.getFilter(chatId, messageId);\n\n              if (_filter) {\n                _context2.next = 23;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 23:\n              maxCount = 1500;\n              count = 0;\n              _loop =\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _loop() {\n                var result, currentMessageId, index;\n                return _regeneratorRuntime.wrap(function _loop$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return TdLibController.send({\n                          '@type': 'searchChatMessages',\n                          chat_id: chatId,\n                          query: '',\n                          sender_user_id: 0,\n                          from_message_id: _this.history.length > 0 ? _this.history[0].id : 0,\n                          offset: -99,\n                          limit: 99 + 1,\n                          filter: _filter\n                        });\n\n                      case 2:\n                        result = _context.sent;\n                        count += result.messages.length;\n                        filterDuplicateMessages(result, _this.history);\n                        MessageStore.setItems(result.messages);\n                        _this.history = result.messages.concat(_this.history);\n                        _this.firstSliceLoaded = result.messages.length === 0;\n                        currentMessageId = _this.state.currentMessageId;\n                        index = _this.history.findIndex(function (x) {\n                          return x.id === currentMessageId;\n                        });\n\n                        _this.setState({\n                          hasNextMedia: _this.hasNextMedia(index),\n                          hasPreviousMedia: _this.hasPreviousMedia(index),\n                          firstSliceLoaded: _this.firstSliceLoaded,\n                          totalCount: result.total_count\n                        });\n\n                      case 11:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _loop);\n              });\n\n            case 26:\n              if (!(!_this.firstSliceLoaded && count < maxCount)) {\n                _context2.next = 30;\n                break;\n              }\n\n              return _context2.delegateYield(_loop(), \"t0\", 28);\n\n            case 28:\n              _context2.next = 26;\n              break;\n\n            case 30:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.handleClose = function () {\n      setMediaViewerContent(null);\n      var currentMessageId = _this.state.currentMessageId;\n\n      var index = _this.history.findIndex(function (x) {\n        return x.id === currentMessageId;\n      });\n\n      if (index !== -1) {\n        cancelPreloadMediaViewerContent(index, _this.history);\n      }\n    };\n\n    _this.handleSave = function () {\n      var chatId = _this.props.chatId;\n      var currentMessageId = _this.state.currentMessageId;\n      var message = MessageStore.get(chatId, currentMessageId);\n      if (!message) return;\n      var content = message.content;\n      if (!content) return;\n      var media = null;\n\n      switch (content['@type']) {\n        case 'messageAnimation':\n          {\n            var animation = content.animation;\n            media = animation;\n            break;\n          }\n\n        case 'messageChatChangePhoto':\n          {\n            var photo = content.photo;\n            media = photo;\n            break;\n          }\n\n        case 'messageDocument':\n          {\n            var document = content.document;\n            media = document;\n            break;\n          }\n\n        case 'messagePhoto':\n          {\n            var _photo = content.photo;\n            media = _photo;\n            break;\n          }\n\n        case 'messageText':\n          {\n            var web_page = content.web_page;\n            if (!web_page) return;\n            var _animation = web_page.animation,\n                _document = web_page.document,\n                _photo2 = web_page.photo,\n                video = web_page.video;\n\n            if (_animation) {\n              media = _animation;\n              break;\n            }\n\n            if (_document) {\n              media = _document;\n              break;\n            }\n\n            if (_photo2) {\n              media = _photo2;\n              break;\n            }\n\n            if (video) {\n              media = video;\n              break;\n            }\n\n            break;\n          }\n\n        case 'messageVideo':\n          {\n            var _video = content.video;\n            media = _video;\n            break;\n          }\n      }\n\n      saveMedia(media, message);\n    };\n\n    _this.handleForward = function () {\n      var chatId = _this.props.chatId;\n      var currentMessageId = _this.state.currentMessageId;\n      forwardMessages(chatId, [currentMessageId]);\n    };\n\n    _this.handleDelete = function () {\n      _this.handleDialogOpen();\n    };\n\n    _this.hasPreviousMedia = function (index) {\n      if (index === -1) return false;\n      var nextIndex = index + 1;\n      return nextIndex < _this.history.length;\n    };\n\n    _this.handlePrevious = function (event) {\n      if (event) {\n        event.stopPropagation();\n      }\n\n      var currentMessageId = _this.state.currentMessageId;\n\n      var index = _this.history.findIndex(function (x) {\n        return x.id === currentMessageId;\n      });\n\n      var nextIndex = index + 1;\n      return _this.loadMedia(nextIndex, function () {\n        if (nextIndex === _this.history.length - 1) {\n          _this.loadPrevious();\n        }\n      });\n    };\n\n    _this.loadPrevious =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var _this$props2, chatId, messageId, currentMessageId, filter, result, index;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this$props2 = _this.props, chatId = _this$props2.chatId, messageId = _this$props2.messageId;\n              currentMessageId = _this.state.currentMessageId;\n              filter = _this.getFilter(chatId, messageId);\n              result = {\n                '@type': 'messages',\n                messages: [],\n                total_count: 0\n              };\n\n              if (!filter) {\n                _context3.next = 8;\n                break;\n              }\n\n              _context3.next = 7;\n              return TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n              });\n\n            case 7:\n              result = _context3.sent;\n\n            case 8:\n              filterDuplicateMessages(result, _this.history);\n              MessageStore.setItems(result.messages);\n              _this.history = _this.history.concat(result.messages);\n              index = _this.history.findIndex(function (x) {\n                return x.id === currentMessageId;\n              });\n\n              _this.setState({\n                hasNextMedia: _this.hasNextMedia(index),\n                hasPreviousMedia: _this.hasPreviousMedia(index),\n                totalCount: result.total_count\n              });\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    _this.hasNextMedia = function (index) {\n      if (index === -1) return false;\n      var nextIndex = index - 1;\n      return nextIndex >= 0;\n    };\n\n    _this.handleNext = function (event) {\n      if (event) {\n        event.stopPropagation();\n      }\n\n      var currentMessageId = _this.state.currentMessageId;\n\n      var index = _this.history.findIndex(function (x) {\n        return x.id === currentMessageId;\n      });\n\n      var nextIndex = index - 1;\n      return _this.loadMedia(nextIndex, function () {\n        if (nextIndex === 0) {\n          _this.loadNext();\n        }\n      });\n    };\n\n    _this.loadNext =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var _this$props3, chatId, messageId, currentMessageId, filter, result, index;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _this$props3 = _this.props, chatId = _this$props3.chatId, messageId = _this$props3.messageId;\n              currentMessageId = _this.state.currentMessageId;\n              filter = _this.getFilter(chatId, messageId);\n              result = {\n                '@type': 'messages',\n                messages: [],\n                total_count: 0\n              };\n\n              if (!filter) {\n                _context4.next = 8;\n                break;\n              }\n\n              _context4.next = 7;\n              return TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n              });\n\n            case 7:\n              result = _context4.sent;\n\n            case 8:\n              filterDuplicateMessages(result, _this.history);\n              MessageStore.setItems(result.messages);\n              _this.firstSliceLoaded = result.messages.length === 0;\n              _this.history = result.messages.concat(_this.history);\n              index = _this.history.findIndex(function (x) {\n                return x.id === currentMessageId;\n              });\n\n              _this.setState({\n                hasNextMedia: _this.hasNextMedia(index),\n                hasPreviousMedia: _this.hasPreviousMedia(index),\n                firstSliceLoaded: _this.firstSliceLoaded,\n                totalCount: result.total_count\n              });\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    _this.loadMedia = function (index, callback) {\n      if (index < 0) return false;\n      if (index >= _this.history.length) return false;\n\n      _this.setState({\n        currentMessageId: _this.history[index].id,\n        hasNextMedia: _this.hasNextMedia(index),\n        hasPreviousMedia: _this.hasPreviousMedia(index)\n      }, callback);\n\n      preloadMediaViewerContent(index, _this.history);\n      return true;\n    };\n\n    _this.moveToNextMedia = function (oldHistory, filterMap) {\n      var currentMessageId = _this.state.currentMessageId;\n      var index = oldHistory.findIndex(function (x) {\n        return x.id === currentMessageId;\n      });\n      var nextId = 0;\n\n      for (var i = index - 1; i >= 0; i--) {\n        if (filterMap && !filterMap.has(oldHistory[i].id)) {\n          nextId = oldHistory[i].id;\n          break;\n        }\n      }\n\n      if (!nextId) {\n        for (var _i = index + 1; _i < oldHistory.length; _i++) {\n          if (filterMap && !filterMap.has(oldHistory[_i].id)) {\n            nextId = oldHistory[_i].id;\n            break;\n          }\n        }\n      }\n\n      if (!nextId) return;\n\n      var nextIndex = _this.history.findIndex(function (x) {\n        return x.id === nextId;\n      });\n\n      return _this.loadMedia(nextIndex, function () {\n        if (nextIndex === 0) {\n          _this.loadNext();\n        } else if (nextIndex === _this.history.length - 1) {\n          _this.loadPrevious();\n        }\n      });\n    };\n\n    _this.handleDialogOpen = function () {\n      _this.setState({\n        deleteConfirmationOpened: true\n      });\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        deleteConfirmationOpened: false\n      });\n    };\n\n    _this.handleDone = function () {\n      _this.setState({\n        deleteConfirmationOpened: false\n      });\n\n      var chatId = _this.props.chatId;\n      var _this$state4 = _this.state,\n          currentMessageId = _this$state4.currentMessageId,\n          deleteForAll = _this$state4.deleteForAll;\n      var message = MessageStore.get(chatId, currentMessageId);\n      if (!message) return;\n      var can_be_deleted_only_for_self = message.can_be_deleted_only_for_self,\n          can_be_deleted_for_all_users = message.can_be_deleted_for_all_users;\n      var canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n      if (!canBeDeleted) return;\n      TdLibController.send({\n        '@type': 'deleteMessages',\n        chat_id: chatId,\n        message_ids: [currentMessageId],\n        revoke: can_be_deleted_for_all_users && deleteForAll\n      });\n    };\n\n    _this.handleChangeDeleteForAll = function (event) {\n      _this.setState({\n        deleteForAll: event.target.checked\n      });\n    };\n\n    _this.handleInvertColors = function () {\n      var background = _this.state.background;\n      var nextBackground = 'media-viewer-default';\n\n      switch (background) {\n        case 'media-viewer-default':\n          {\n            nextBackground = 'media-viewer-dark';\n            break;\n          }\n\n        case 'media-viewer-dark':\n          {\n            nextBackground = 'media-viewer-light';\n            break;\n          }\n\n        case 'media-viewer-light':\n          {\n            nextBackground = 'media-viewer-default';\n            break;\n          }\n      }\n\n      _this.setState({\n        background: nextBackground\n      });\n    };\n\n    _this.handleChangeSpeed = function () {\n      if (!_this.contentRef) return;\n      var current = _this.contentRef.current;\n      if (!current) return;\n      var speed = _this.state.speed;\n      var nextSpeed = speed < 1 ? 1 : 0.1;\n\n      _this.setState({\n        speed: nextSpeed\n      });\n\n      current.changeSpeed(nextSpeed);\n    };\n\n    _this.canBeForwarded = function (chatId, messageId) {\n      var message = MessageStore.get(chatId, messageId);\n      if (!message) return false;\n      var can_be_forwarded = message.can_be_forwarded,\n          content = message.content;\n      if (!content) return false;\n\n      switch (content['@type']) {\n        case 'messageChatChangePhoto':\n          {\n            return true;\n          }\n\n        default:\n          {\n            return can_be_forwarded;\n          }\n      }\n    };\n\n    _this.keyboardHandler = new KeyboardHandler(_this.onKeyDown);\n    _this.contentRef = React.createRef();\n    _this.history = [];\n    var _this$props4 = _this.props,\n        _chatId = _this$props4.chatId,\n        _messageId = _this$props4.messageId;\n    _this.state = {\n      speed: 1,\n      background: 'media-viewer-default',\n      prevChatId: _chatId,\n      prevMessageId: _messageId,\n      currentMessageId: _messageId,\n      hasNextMedia: false,\n      hasPreviousMedia: false,\n      deleteConfirmationOpened: false,\n      deleteForAll: true\n    };\n    return _this;\n  }\n\n  _createClass(MediaViewer, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      var _this$props5 = this.props,\n          chatId = _this$props5.chatId,\n          messageId = _this$props5.messageId;\n      var _this$state5 = this.state,\n          background = _this$state5.background,\n          currentMessageId = _this$state5.currentMessageId,\n          deleteConfirmationOpened = _this$state5.deleteConfirmationOpened,\n          firstSliceLoaded = _this$state5.firstSliceLoaded,\n          hasNextMedia = _this$state5.hasNextMedia,\n          hasPreviousMedia = _this$state5.hasPreviousMedia,\n          speed = _this$state5.speed,\n          totalCount = _this$state5.totalCount;\n\n      if (nextState.background !== background) {\n        return true;\n      }\n\n      if (nextProps.chatId !== chatId) {\n        return true;\n      }\n\n      if (nextProps.messageId !== messageId) {\n        return true;\n      }\n\n      if (nextState.currentMessageId !== currentMessageId) {\n        return true;\n      }\n\n      if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n        return true;\n      }\n\n      if (nextState.hasNextMedia !== hasNextMedia) {\n        return true;\n      }\n\n      if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n        return true;\n      }\n\n      if (nextState.totalCount !== totalCount) {\n        return true;\n      }\n\n      if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n        return true;\n      }\n\n      if (nextState.speed !== speed) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadHistory();\n      KeyboardManager.add(this.keyboardHandler);\n      MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n      MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n      MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      KeyboardManager.remove(this.keyboardHandler);\n      MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n      MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n      MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          chatId = _this$props6.chatId,\n          t = _this$props6.t;\n      var _this$state6 = this.state,\n          background = _this$state6.background,\n          currentMessageId = _this$state6.currentMessageId,\n          deleteConfirmationOpened = _this$state6.deleteConfirmationOpened,\n          deleteForAll = _this$state6.deleteForAll,\n          firstSliceLoaded = _this$state6.firstSliceLoaded,\n          hasNextMedia = _this$state6.hasNextMedia,\n          hasPreviousMedia = _this$state6.hasPreviousMedia,\n          speed = _this$state6.speed,\n          totalCount = _this$state6.totalCount;\n      var index = -1;\n\n      if (totalCount && firstSliceLoaded) {\n        index = this.history.findIndex(function (x) {\n          return x.id === currentMessageId;\n        });\n      }\n\n      var maxCount = Math.max(this.history.length, totalCount);\n      var message = MessageStore.get(chatId, currentMessageId);\n      var can_be_deleted_for_all_users = message.can_be_deleted_for_all_users,\n          can_be_deleted_only_for_self = message.can_be_deleted_only_for_self;\n      var canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n      var canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n      var deleteConfirmationContent = '';\n\n      if (isVideoMessage(chatId, currentMessageId)) {\n        deleteConfirmationContent = t('AreYouSureDeleteVideo');\n      } else if (isAnimationMessage(chatId, currentMessageId)) {\n        deleteConfirmationContent = t('AreYouSureDeleteGIF');\n      } else {\n        deleteConfirmationContent = t('AreYouSureDeletePhoto');\n      }\n\n      var deleteConfirmation = deleteConfirmationOpened ? React.createElement(Dialog, {\n        transitionDuration: 0,\n        open: deleteConfirmationOpened,\n        onClose: this.handleDialogClose,\n        \"aria-labelledby\": \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 780\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 785\n        },\n        __self: this\n      }, t('Confirm')), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 786\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 787\n        },\n        __self: this\n      }, deleteConfirmationContent), can_be_deleted_for_all_users && React.createElement(FormControlLabel, {\n        label: t('DeleteForAll'),\n        control: React.createElement(Checkbox, {\n          color: \"primary\",\n          value: \"deleteAll\",\n          onChange: this.handleChangeDeleteForAll,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 792\n          },\n          __self: this\n        }),\n        checked: deleteForAll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789\n        },\n        __self: this\n      })), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 798\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleDialogClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 799\n        },\n        __self: this\n      }, t('Cancel')), React.createElement(Button, {\n        onClick: this.handleDone,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 802\n        },\n        __self: this\n      }, t('Ok')))) : null;\n\n      var _getMediaFile = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE),\n          _getMediaFile2 = _slicedToArray(_getMediaFile, 4),\n          width = _getMediaFile2[0],\n          height = _getMediaFile2[1],\n          file = _getMediaFile2[2],\n          mimeType = _getMediaFile2[3];\n\n      var fileId = file ? file.id : 0;\n      var title = t('AttachPhoto');\n\n      if (isVideoMessage(chatId, currentMessageId)) {\n        title = t('AttachVideo');\n      } else if (isAnimationMessage(chatId, currentMessageId)) {\n        title = t('AttachGif');\n      } else if (isLottieMessage(chatId, currentMessageId)) {\n        title = '';\n      }\n\n      return React.createElement(\"div\", {\n        className: classNames('media-viewer', background),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"media-viewer-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 823\n        },\n        __self: this\n      }, React.createElement(MediaInfo, {\n        chatId: chatId,\n        messageId: currentMessageId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824\n        },\n        __self: this\n      }), React.createElement(MediaViewerFooterText, {\n        title: title,\n        subtitle: maxCount && index >= 0 ? \"\".concat(maxCount - index, \" of \").concat(maxCount) : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 825\n        },\n        __self: this\n      }), React.createElement(MediaViewerDownloadButton, {\n        title: t('Save'),\n        fileId: fileId,\n        onClick: this.handleSave,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 829\n        },\n        __self: this\n      }), React.createElement(MediaViewerFooterButton, {\n        title: t('Forward'),\n        disabled: !canBeForwarded,\n        onClick: this.handleForward,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 830\n        },\n        __self: this\n      }, React.createElement(ReplyIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 834\n        },\n        __self: this\n      })), React.createElement(MediaViewerFooterButton, {\n        title: t('Delete'),\n        disabled: !canBeDeleted,\n        onClick: this.handleDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836\n        },\n        __self: this\n      }, React.createElement(DeleteIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 837\n        },\n        __self: this\n      })), React.createElement(MediaViewerFooterButton, {\n        title: t('Close'),\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 839\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 840\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"media-viewer-wrapper\",\n        onClick: this.handlePrevious,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 843\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"media-viewer-left-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 844\n        },\n        __self: this\n      }, React.createElement(MediaViewerButton, {\n        disabled: !hasPreviousMedia,\n        grow: true,\n        onClick: this.handlePrevious,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 845\n        },\n        __self: this\n      }, React.createElement(NavigateBeforeIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 846\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"media-viewer-content-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 850\n        },\n        __self: this\n      }, React.createElement(MediaViewerContent, {\n        ref: this.contentRef,\n        chatId: chatId,\n        messageId: currentMessageId,\n        size: PHOTO_BIG_SIZE,\n        onClick: this.handlePrevious,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 851\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"media-viewer-right-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 860\n        },\n        __self: this\n      }, React.createElement(MediaViewerButton, {\n        disabled: !hasNextMedia,\n        grow: true,\n        onClick: this.handleNext,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861\n        },\n        __self: this\n      }, React.createElement(NavigateBeforeIcon, {\n        style: {\n          transform: 'rotate(180deg)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 862\n        },\n        __self: this\n      })))), deleteConfirmation);\n    }\n  }]);\n\n  return MediaViewer;\n}(React.Component);\n\nMediaViewer.propTypes = {\n  chatId: PropTypes.number.isRequired,\n  messageId: PropTypes.number.isRequired\n};\nexport default withTranslation()(MediaViewer);","map":{"version":3,"sources":["/Users/wubenqi/nebula-chat/telegram-react/src/Components/Viewer/MediaViewer.js"],"names":["React","PropTypes","classNames","withTranslation","KeyboardManager","KeyboardHandler","Button","Checkbox","CloseIcon","DeleteIcon","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControlLabel","NavigateBeforeIcon","ReplyIcon","MediaInfo","MediaViewerContent","MediaViewerButton","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","forwardMessages","setMediaViewerContent","cancelPreloadMediaViewerContent","getMediaFile","loadMediaViewerContent","preloadMediaViewerContent","saveMedia","filterDuplicateMessages","isAnimationMessage","isLottieMessage","isMediaContent","isVideoMessage","between","PHOTO_BIG_SIZE","MEDIA_SLICE_LIMIT","MessageStore","TdLibController","MediaViewer","props","onKeyDown","event","keyCode","deleteConfirmationOpened","state","handleClose","handleNext","handlePrevious","onUpdateMessageContent","update","chat_id","message_id","new_content","old_content","chatId","currentMessageId","totalCount","message","get","addMessage","history","length","firstSliceLoaded","id","inserted","i","push","index","findIndex","x","setState","hasNextMedia","hasPreviousMedia","removeMessage","oldHistory","filter","filterMap","Map","set","moveToNextMedia","Math","max","onUpdateDeleteMessages","message_ids","is_permanent","reduce","accumulator","currentId","deletedCount","has","onUpdateNewMessage","content","concat","getFilter","messageId","loadHistory","result","messages","total_count","send","query","sender_user_id","from_message_id","offset","limit","setItems","maxCount","count","handleSave","media","animation","photo","document","web_page","video","handleForward","handleDelete","handleDialogOpen","nextIndex","stopPropagation","loadMedia","loadPrevious","loadNext","callback","nextId","handleDialogClose","handleDone","deleteForAll","can_be_deleted_only_for_self","can_be_deleted_for_all_users","canBeDeleted","revoke","handleChangeDeleteForAll","target","checked","handleInvertColors","background","nextBackground","handleChangeSpeed","contentRef","current","speed","nextSpeed","changeSpeed","canBeForwarded","can_be_forwarded","keyboardHandler","createRef","prevChatId","prevMessageId","nextProps","nextState","hasPrevousMedia","add","on","remove","off","t","deleteConfirmationContent","deleteConfirmation","width","height","file","mimeType","fileId","title","transform","Component","propTypes","number","isRequired"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n"]},"metadata":{},"sourceType":"module"}